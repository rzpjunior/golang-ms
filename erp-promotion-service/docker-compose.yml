version: '3.1'
services:
  # MySQL
  mysql:
    image: mysql
    container_name: mysql
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: db-example
    ports:
      - 3306:3306
    volumes:
      - ./docker/mysql_data:/var/lib/mysql

  # MongoDB
  mongodb:
    image: mongo
    container_name: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - ./docker/redis/data:/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CLIENT_USERS: ""
      KAFKA_CLIENT_PASSWORDS: ""

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    # environment:
    #   - METRICS_STORAGE_TYPE: 'prometheus'
    #   - PROMETHEUS_SERVER_URL: 'localhost:9090'
    expose:
      - "16686"
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411

  # Grafana
  grafana:
    image: grafana/grafana:7.1.5
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./docker/observability/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/observability/grafana/dashboards:/etc/grafana/demo-dashboards
      - ./docker/grafana_data:/var/lib/grafana
    user: "0"

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./docker/observability/prometheus.yaml:/etc/prometheus/prometheus.yml
      - ./docker/prometheus_data:/prometheus
    ports:
      - "9090:9090"
    user: "0"

  # Otel
  otelcol:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otelcol
    expose:
      - "4317"
    command: [ "--config=/etc/otelcol-config.yaml" ]
    volumes:
      - ./docker/observability/otelcol-config.yaml:/etc/otelcol-config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger

