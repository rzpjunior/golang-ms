// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.23.4
// source: proto/catalog_service/catalog_service.proto

package catalog_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CatalogServiceClient is the client API for CatalogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CatalogServiceClient interface {
	GetItemImageList(ctx context.Context, in *GetItemImageListRequest, opts ...grpc.CallOption) (*GetItemImageListResponse, error)
	GetItemImageDetail(ctx context.Context, in *GetItemImageDetailRequest, opts ...grpc.CallOption) (*GetItemImageDetailResponse, error)
	GetItemCategoryList(ctx context.Context, in *GetItemCategoryListRequest, opts ...grpc.CallOption) (*GetItemCategoryListResponse, error)
	GetItemCategoryDetail(ctx context.Context, in *GetItemCategoryDetailRequest, opts ...grpc.CallOption) (*GetItemCategoryDetailResponse, error)
	GetItemList(ctx context.Context, in *GetItemListRequest, opts ...grpc.CallOption) (*GetItemListResponse, error)
	GetItemDetail(ctx context.Context, in *GetItemDetailRequest, opts ...grpc.CallOption) (*GetItemDetailResponse, error)
	GetItemDetailByInternalId(ctx context.Context, in *GetItemDetailByInternalIdRequest, opts ...grpc.CallOption) (*GetItemDetailByInternalIdResponse, error)
	GetItemDetailMasterComplexByInternalID(ctx context.Context, in *GetItemDetailByInternalIdRequest, opts ...grpc.CallOption) (*GetItemDetailByInternalIdResponse, error)
	GetItemListInternal(ctx context.Context, in *GetItemListRequest, opts ...grpc.CallOption) (*GetItemListResponse, error)
	GetItemDetailInternal(ctx context.Context, in *GetItemDetailRequest, opts ...grpc.CallOption) (*GetItemDetailResponse, error)
	SyncMongo(ctx context.Context, in *SyncMongoRequest, opts ...grpc.CallOption) (*SyncMongoResponse, error)
	GetItemListMongo(ctx context.Context, in *GetItemListRequest, opts ...grpc.CallOption) (*GetItemListResponse, error)
}

type catalogServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCatalogServiceClient(cc grpc.ClientConnInterface) CatalogServiceClient {
	return &catalogServiceClient{cc}
}

func (c *catalogServiceClient) GetItemImageList(ctx context.Context, in *GetItemImageListRequest, opts ...grpc.CallOption) (*GetItemImageListResponse, error) {
	out := new(GetItemImageListResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/GetItemImageList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) GetItemImageDetail(ctx context.Context, in *GetItemImageDetailRequest, opts ...grpc.CallOption) (*GetItemImageDetailResponse, error) {
	out := new(GetItemImageDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/GetItemImageDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) GetItemCategoryList(ctx context.Context, in *GetItemCategoryListRequest, opts ...grpc.CallOption) (*GetItemCategoryListResponse, error) {
	out := new(GetItemCategoryListResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/GetItemCategoryList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) GetItemCategoryDetail(ctx context.Context, in *GetItemCategoryDetailRequest, opts ...grpc.CallOption) (*GetItemCategoryDetailResponse, error) {
	out := new(GetItemCategoryDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/GetItemCategoryDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) GetItemList(ctx context.Context, in *GetItemListRequest, opts ...grpc.CallOption) (*GetItemListResponse, error) {
	out := new(GetItemListResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/GetItemList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) GetItemDetail(ctx context.Context, in *GetItemDetailRequest, opts ...grpc.CallOption) (*GetItemDetailResponse, error) {
	out := new(GetItemDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/GetItemDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) GetItemDetailByInternalId(ctx context.Context, in *GetItemDetailByInternalIdRequest, opts ...grpc.CallOption) (*GetItemDetailByInternalIdResponse, error) {
	out := new(GetItemDetailByInternalIdResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/GetItemDetailByInternalId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) GetItemDetailMasterComplexByInternalID(ctx context.Context, in *GetItemDetailByInternalIdRequest, opts ...grpc.CallOption) (*GetItemDetailByInternalIdResponse, error) {
	out := new(GetItemDetailByInternalIdResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/GetItemDetailMasterComplexByInternalID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) GetItemListInternal(ctx context.Context, in *GetItemListRequest, opts ...grpc.CallOption) (*GetItemListResponse, error) {
	out := new(GetItemListResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/GetItemListInternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) GetItemDetailInternal(ctx context.Context, in *GetItemDetailRequest, opts ...grpc.CallOption) (*GetItemDetailResponse, error) {
	out := new(GetItemDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/GetItemDetailInternal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) SyncMongo(ctx context.Context, in *SyncMongoRequest, opts ...grpc.CallOption) (*SyncMongoResponse, error) {
	out := new(SyncMongoResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/SyncMongo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *catalogServiceClient) GetItemListMongo(ctx context.Context, in *GetItemListRequest, opts ...grpc.CallOption) (*GetItemListResponse, error) {
	out := new(GetItemListResponse)
	err := c.cc.Invoke(ctx, "/proto.catalog_service.CatalogService/GetItemListMongo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CatalogServiceServer is the server API for CatalogService service.
// All implementations should embed UnimplementedCatalogServiceServer
// for forward compatibility
type CatalogServiceServer interface {
	GetItemImageList(context.Context, *GetItemImageListRequest) (*GetItemImageListResponse, error)
	GetItemImageDetail(context.Context, *GetItemImageDetailRequest) (*GetItemImageDetailResponse, error)
	GetItemCategoryList(context.Context, *GetItemCategoryListRequest) (*GetItemCategoryListResponse, error)
	GetItemCategoryDetail(context.Context, *GetItemCategoryDetailRequest) (*GetItemCategoryDetailResponse, error)
	GetItemList(context.Context, *GetItemListRequest) (*GetItemListResponse, error)
	GetItemDetail(context.Context, *GetItemDetailRequest) (*GetItemDetailResponse, error)
	GetItemDetailByInternalId(context.Context, *GetItemDetailByInternalIdRequest) (*GetItemDetailByInternalIdResponse, error)
	GetItemDetailMasterComplexByInternalID(context.Context, *GetItemDetailByInternalIdRequest) (*GetItemDetailByInternalIdResponse, error)
	GetItemListInternal(context.Context, *GetItemListRequest) (*GetItemListResponse, error)
	GetItemDetailInternal(context.Context, *GetItemDetailRequest) (*GetItemDetailResponse, error)
	SyncMongo(context.Context, *SyncMongoRequest) (*SyncMongoResponse, error)
	GetItemListMongo(context.Context, *GetItemListRequest) (*GetItemListResponse, error)
}

// UnimplementedCatalogServiceServer should be embedded to have forward compatible implementations.
type UnimplementedCatalogServiceServer struct {
}

func (UnimplementedCatalogServiceServer) GetItemImageList(context.Context, *GetItemImageListRequest) (*GetItemImageListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemImageList not implemented")
}
func (UnimplementedCatalogServiceServer) GetItemImageDetail(context.Context, *GetItemImageDetailRequest) (*GetItemImageDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemImageDetail not implemented")
}
func (UnimplementedCatalogServiceServer) GetItemCategoryList(context.Context, *GetItemCategoryListRequest) (*GetItemCategoryListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemCategoryList not implemented")
}
func (UnimplementedCatalogServiceServer) GetItemCategoryDetail(context.Context, *GetItemCategoryDetailRequest) (*GetItemCategoryDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemCategoryDetail not implemented")
}
func (UnimplementedCatalogServiceServer) GetItemList(context.Context, *GetItemListRequest) (*GetItemListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemList not implemented")
}
func (UnimplementedCatalogServiceServer) GetItemDetail(context.Context, *GetItemDetailRequest) (*GetItemDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemDetail not implemented")
}
func (UnimplementedCatalogServiceServer) GetItemDetailByInternalId(context.Context, *GetItemDetailByInternalIdRequest) (*GetItemDetailByInternalIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemDetailByInternalId not implemented")
}
func (UnimplementedCatalogServiceServer) GetItemDetailMasterComplexByInternalID(context.Context, *GetItemDetailByInternalIdRequest) (*GetItemDetailByInternalIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemDetailMasterComplexByInternalID not implemented")
}
func (UnimplementedCatalogServiceServer) GetItemListInternal(context.Context, *GetItemListRequest) (*GetItemListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemListInternal not implemented")
}
func (UnimplementedCatalogServiceServer) GetItemDetailInternal(context.Context, *GetItemDetailRequest) (*GetItemDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemDetailInternal not implemented")
}
func (UnimplementedCatalogServiceServer) SyncMongo(context.Context, *SyncMongoRequest) (*SyncMongoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncMongo not implemented")
}
func (UnimplementedCatalogServiceServer) GetItemListMongo(context.Context, *GetItemListRequest) (*GetItemListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemListMongo not implemented")
}

// UnsafeCatalogServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CatalogServiceServer will
// result in compilation errors.
type UnsafeCatalogServiceServer interface {
	mustEmbedUnimplementedCatalogServiceServer()
}

func RegisterCatalogServiceServer(s grpc.ServiceRegistrar, srv CatalogServiceServer) {
	s.RegisterService(&CatalogService_ServiceDesc, srv)
}

func _CatalogService_GetItemImageList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemImageListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetItemImageList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/GetItemImageList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetItemImageList(ctx, req.(*GetItemImageListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_GetItemImageDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemImageDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetItemImageDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/GetItemImageDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetItemImageDetail(ctx, req.(*GetItemImageDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_GetItemCategoryList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemCategoryListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetItemCategoryList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/GetItemCategoryList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetItemCategoryList(ctx, req.(*GetItemCategoryListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_GetItemCategoryDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemCategoryDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetItemCategoryDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/GetItemCategoryDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetItemCategoryDetail(ctx, req.(*GetItemCategoryDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_GetItemList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetItemList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/GetItemList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetItemList(ctx, req.(*GetItemListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_GetItemDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetItemDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/GetItemDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetItemDetail(ctx, req.(*GetItemDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_GetItemDetailByInternalId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemDetailByInternalIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetItemDetailByInternalId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/GetItemDetailByInternalId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetItemDetailByInternalId(ctx, req.(*GetItemDetailByInternalIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_GetItemDetailMasterComplexByInternalID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemDetailByInternalIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetItemDetailMasterComplexByInternalID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/GetItemDetailMasterComplexByInternalID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetItemDetailMasterComplexByInternalID(ctx, req.(*GetItemDetailByInternalIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_GetItemListInternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetItemListInternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/GetItemListInternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetItemListInternal(ctx, req.(*GetItemListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_GetItemDetailInternal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetItemDetailInternal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/GetItemDetailInternal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetItemDetailInternal(ctx, req.(*GetItemDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_SyncMongo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncMongoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).SyncMongo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/SyncMongo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).SyncMongo(ctx, req.(*SyncMongoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CatalogService_GetItemListMongo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CatalogServiceServer).GetItemListMongo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.catalog_service.CatalogService/GetItemListMongo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CatalogServiceServer).GetItemListMongo(ctx, req.(*GetItemListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CatalogService_ServiceDesc is the grpc.ServiceDesc for CatalogService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CatalogService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.catalog_service.CatalogService",
	HandlerType: (*CatalogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetItemImageList",
			Handler:    _CatalogService_GetItemImageList_Handler,
		},
		{
			MethodName: "GetItemImageDetail",
			Handler:    _CatalogService_GetItemImageDetail_Handler,
		},
		{
			MethodName: "GetItemCategoryList",
			Handler:    _CatalogService_GetItemCategoryList_Handler,
		},
		{
			MethodName: "GetItemCategoryDetail",
			Handler:    _CatalogService_GetItemCategoryDetail_Handler,
		},
		{
			MethodName: "GetItemList",
			Handler:    _CatalogService_GetItemList_Handler,
		},
		{
			MethodName: "GetItemDetail",
			Handler:    _CatalogService_GetItemDetail_Handler,
		},
		{
			MethodName: "GetItemDetailByInternalId",
			Handler:    _CatalogService_GetItemDetailByInternalId_Handler,
		},
		{
			MethodName: "GetItemDetailMasterComplexByInternalID",
			Handler:    _CatalogService_GetItemDetailMasterComplexByInternalID_Handler,
		},
		{
			MethodName: "GetItemListInternal",
			Handler:    _CatalogService_GetItemListInternal_Handler,
		},
		{
			MethodName: "GetItemDetailInternal",
			Handler:    _CatalogService_GetItemDetailInternal_Handler,
		},
		{
			MethodName: "SyncMongo",
			Handler:    _CatalogService_SyncMongo_Handler,
		},
		{
			MethodName: "GetItemListMongo",
			Handler:    _CatalogService_GetItemListMongo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/catalog_service/catalog_service.proto",
}
