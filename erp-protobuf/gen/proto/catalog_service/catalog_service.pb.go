// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: proto/catalog_service/catalog_service.proto

package catalog_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ItemImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemId    int64                  `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ImageUrl  string                 `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	MainImage int32                  `protobuf:"varint,4,opt,name=main_image,json=mainImage,proto3" json:"main_image,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ItemImage) Reset() {
	*x = ItemImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemImage) ProtoMessage() {}

func (x *ItemImage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemImage.ProtoReflect.Descriptor instead.
func (*ItemImage) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{0}
}

func (x *ItemImage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemImage) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemImage) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *ItemImage) GetMainImage() int32 {
	if x != nil {
		return x.MainImage
	}
	return 0
}

func (x *ItemImage) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ItemCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RegionId  string                 `protobuf:"bytes,2,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	Name      string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Status    int32                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	ImageUrl  string                 `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Code      string                 `protobuf:"bytes,8,opt,name=Code,proto3" json:"Code,omitempty"`
}

func (x *ItemCategory) Reset() {
	*x = ItemCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemCategory) ProtoMessage() {}

func (x *ItemCategory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemCategory.ProtoReflect.Descriptor instead.
func (*ItemCategory) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{1}
}

func (x *ItemCategory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemCategory) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *ItemCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemCategory) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ItemCategory) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *ItemCategory) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ItemCategory) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ItemCategory) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetItemCategoryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit    int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status   int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search   string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy  string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	RegionId string `protobuf:"bytes,6,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
}

func (x *GetItemCategoryListRequest) Reset() {
	*x = GetItemCategoryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemCategoryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemCategoryListRequest) ProtoMessage() {}

func (x *GetItemCategoryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemCategoryListRequest.ProtoReflect.Descriptor instead.
func (*GetItemCategoryListRequest) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetItemCategoryListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetItemCategoryListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetItemCategoryListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetItemCategoryListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetItemCategoryListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetItemCategoryListRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

type GetItemCategoryListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ItemCategory `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetItemCategoryListResponse) Reset() {
	*x = GetItemCategoryListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemCategoryListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemCategoryListResponse) ProtoMessage() {}

func (x *GetItemCategoryListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemCategoryListResponse.ProtoReflect.Descriptor instead.
func (*GetItemCategoryListResponse) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetItemCategoryListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetItemCategoryListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetItemCategoryListResponse) GetData() []*ItemCategory {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetItemCategoryDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetItemCategoryDetailRequest) Reset() {
	*x = GetItemCategoryDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemCategoryDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemCategoryDetailRequest) ProtoMessage() {}

func (x *GetItemCategoryDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemCategoryDetailRequest.ProtoReflect.Descriptor instead.
func (*GetItemCategoryDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetItemCategoryDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetItemCategoryDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ItemCategory `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetItemCategoryDetailResponse) Reset() {
	*x = GetItemCategoryDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemCategoryDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemCategoryDetailResponse) ProtoMessage() {}

func (x *GetItemCategoryDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemCategoryDetailResponse.ProtoReflect.Descriptor instead.
func (*GetItemCategoryDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetItemCategoryDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetItemCategoryDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetItemCategoryDetailResponse) GetData() *ItemCategory {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetItemImageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status    int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search    string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy   string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	ItemId    int64  `protobuf:"varint,6,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	MainImage int32  `protobuf:"varint,7,opt,name=main_image,json=mainImage,proto3" json:"main_image,omitempty"`
}

func (x *GetItemImageListRequest) Reset() {
	*x = GetItemImageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemImageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemImageListRequest) ProtoMessage() {}

func (x *GetItemImageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemImageListRequest.ProtoReflect.Descriptor instead.
func (*GetItemImageListRequest) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetItemImageListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetItemImageListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetItemImageListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetItemImageListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetItemImageListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetItemImageListRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GetItemImageListRequest) GetMainImage() int32 {
	if x != nil {
		return x.MainImage
	}
	return 0
}

type GetItemImageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ItemImage `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetItemImageListResponse) Reset() {
	*x = GetItemImageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemImageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemImageListResponse) ProtoMessage() {}

func (x *GetItemImageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemImageListResponse.ProtoReflect.Descriptor instead.
func (*GetItemImageListResponse) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetItemImageListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetItemImageListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetItemImageListResponse) GetData() []*ItemImage {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetItemImageDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code      string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	ItemId    int64  `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	MainImage int32  `protobuf:"varint,4,opt,name=main_image,json=mainImage,proto3" json:"main_image,omitempty"`
}

func (x *GetItemImageDetailRequest) Reset() {
	*x = GetItemImageDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemImageDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemImageDetailRequest) ProtoMessage() {}

func (x *GetItemImageDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemImageDetailRequest.ProtoReflect.Descriptor instead.
func (*GetItemImageDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetItemImageDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetItemImageDetailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetItemImageDetailRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *GetItemImageDetailRequest) GetMainImage() int32 {
	if x != nil {
		return x.MainImage
	}
	return 0
}

type GetItemImageDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ItemImage `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetItemImageDetailResponse) Reset() {
	*x = GetItemImageDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemImageDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemImageDetailResponse) ProtoMessage() {}

func (x *GetItemImageDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemImageDetailResponse.ProtoReflect.Descriptor instead.
func (*GetItemImageDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetItemImageDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetItemImageDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetItemImageDetailResponse) GetData() *ItemImage {
	if x != nil {
		return x.Data
	}
	return nil
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                    string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	UomId                   string                 `protobuf:"bytes,3,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	ClassId                 string                 `protobuf:"bytes,4,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	ItemCategoryId          []int64                `protobuf:"varint,5,rep,packed,name=item_category_id,json=itemCategoryId,proto3" json:"item_category_id,omitempty"`
	Description             string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	UnitWeightConversion    float64                `protobuf:"fixed64,7,opt,name=unit_weight_conversion,json=unitWeightConversion,proto3" json:"unit_weight_conversion,omitempty"`
	OrderMinQty             float64                `protobuf:"fixed64,8,opt,name=order_min_qty,json=orderMinQty,proto3" json:"order_min_qty,omitempty"`
	OrderMaxQty             float64                `protobuf:"fixed64,9,opt,name=order_max_qty,json=orderMaxQty,proto3" json:"order_max_qty,omitempty"`
	ItemType                string                 `protobuf:"bytes,10,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`
	Packability             string                 `protobuf:"bytes,11,opt,name=packability,proto3" json:"packability,omitempty"`
	Capitalize              string                 `protobuf:"bytes,12,opt,name=capitalize,proto3" json:"capitalize,omitempty"`
	Note                    string                 `protobuf:"bytes,13,opt,name=note,proto3" json:"note,omitempty"`
	ExcludeArchetype        string                 `protobuf:"bytes,14,opt,name=exclude_archetype,json=excludeArchetype,proto3" json:"exclude_archetype,omitempty"`
	MaxDayDeliveryDate      int32                  `protobuf:"varint,15,opt,name=max_day_delivery_date,json=maxDayDeliveryDate,proto3" json:"max_day_delivery_date,omitempty"`
	FragileGoods            bool                   `protobuf:"varint,16,opt,name=fragile_goods,json=fragileGoods,proto3" json:"fragile_goods,omitempty"`
	Taxable                 string                 `protobuf:"bytes,17,opt,name=taxable,proto3" json:"taxable,omitempty"`
	OrderChannelRestriction string                 `protobuf:"bytes,18,opt,name=order_channel_restriction,json=orderChannelRestriction,proto3" json:"order_channel_restriction,omitempty"`
	Status                  int32                  `protobuf:"varint,19,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt               *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt               *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ItemImage               []*ItemImage           `protobuf:"bytes,22,rep,name=item_image,json=itemImage,proto3" json:"item_image,omitempty"`
	ItemCategoryName        string                 `protobuf:"bytes,23,opt,name=item_category_name,json=itemCategoryName,proto3" json:"item_category_name,omitempty"`
	UomName                 string                 `protobuf:"bytes,24,opt,name=uom_name,json=uomName,proto3" json:"uom_name,omitempty"`
	ClassName               string                 `protobuf:"bytes,25,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ItemIdGp                string                 `protobuf:"bytes,26,opt,name=item_id_gp,json=itemIdGp,proto3" json:"item_id_gp,omitempty"`
	ItemPrice               []*Item_PriceLevel     `protobuf:"bytes,27,rep,name=item_price,json=itemPrice,proto3" json:"item_price,omitempty"`
	ItemSite                []*Item_Site           `protobuf:"bytes,28,rep,name=item_site,json=itemSite,proto3" json:"item_site,omitempty"`
	Price                   float64                `protobuf:"fixed64,29,opt,name=price,proto3" json:"price,omitempty"`
	DecimalEnabled          bool                   `protobuf:"varint,30,opt,name=decimal_enabled,json=decimalEnabled,proto3" json:"decimal_enabled,omitempty"`
	PriceTiering            []*Item_PriceTiering   `protobuf:"bytes,31,rep,name=price_tiering,json=priceTiering,proto3" json:"price_tiering,omitempty"`
	ItemCategoryNameArr     []string               `protobuf:"bytes,32,rep,name=item_category_name_arr,json=itemCategoryNameArr,proto3" json:"item_category_name_arr,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{10}
}

func (x *Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Item) GetUomId() string {
	if x != nil {
		return x.UomId
	}
	return ""
}

func (x *Item) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *Item) GetItemCategoryId() []int64 {
	if x != nil {
		return x.ItemCategoryId
	}
	return nil
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Item) GetUnitWeightConversion() float64 {
	if x != nil {
		return x.UnitWeightConversion
	}
	return 0
}

func (x *Item) GetOrderMinQty() float64 {
	if x != nil {
		return x.OrderMinQty
	}
	return 0
}

func (x *Item) GetOrderMaxQty() float64 {
	if x != nil {
		return x.OrderMaxQty
	}
	return 0
}

func (x *Item) GetItemType() string {
	if x != nil {
		return x.ItemType
	}
	return ""
}

func (x *Item) GetPackability() string {
	if x != nil {
		return x.Packability
	}
	return ""
}

func (x *Item) GetCapitalize() string {
	if x != nil {
		return x.Capitalize
	}
	return ""
}

func (x *Item) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Item) GetExcludeArchetype() string {
	if x != nil {
		return x.ExcludeArchetype
	}
	return ""
}

func (x *Item) GetMaxDayDeliveryDate() int32 {
	if x != nil {
		return x.MaxDayDeliveryDate
	}
	return 0
}

func (x *Item) GetFragileGoods() bool {
	if x != nil {
		return x.FragileGoods
	}
	return false
}

func (x *Item) GetTaxable() string {
	if x != nil {
		return x.Taxable
	}
	return ""
}

func (x *Item) GetOrderChannelRestriction() string {
	if x != nil {
		return x.OrderChannelRestriction
	}
	return ""
}

func (x *Item) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Item) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Item) GetItemImage() []*ItemImage {
	if x != nil {
		return x.ItemImage
	}
	return nil
}

func (x *Item) GetItemCategoryName() string {
	if x != nil {
		return x.ItemCategoryName
	}
	return ""
}

func (x *Item) GetUomName() string {
	if x != nil {
		return x.UomName
	}
	return ""
}

func (x *Item) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *Item) GetItemIdGp() string {
	if x != nil {
		return x.ItemIdGp
	}
	return ""
}

func (x *Item) GetItemPrice() []*Item_PriceLevel {
	if x != nil {
		return x.ItemPrice
	}
	return nil
}

func (x *Item) GetItemSite() []*Item_Site {
	if x != nil {
		return x.ItemSite
	}
	return nil
}

func (x *Item) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Item) GetDecimalEnabled() bool {
	if x != nil {
		return x.DecimalEnabled
	}
	return false
}

func (x *Item) GetPriceTiering() []*Item_PriceTiering {
	if x != nil {
		return x.PriceTiering
	}
	return nil
}

func (x *Item) GetItemCategoryNameArr() []string {
	if x != nil {
		return x.ItemCategoryNameArr
	}
	return nil
}

type GetItemListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit            int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset           int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status           int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search           string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy          string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	UomId            string `protobuf:"bytes,6,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	ClassId          string `protobuf:"bytes,7,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	ItemCategoryId   int64  `protobuf:"varint,8,opt,name=item_category_id,json=itemCategoryId,proto3" json:"item_category_id,omitempty"`
	RegionIdGp       string `protobuf:"bytes,9,opt,name=region_id_gp,json=regionIdGp,proto3" json:"region_id_gp,omitempty"`
	CustomerTypeIdGp string `protobuf:"bytes,10,opt,name=customer_type_id_gp,json=customerTypeIdGp,proto3" json:"customer_type_id_gp,omitempty"`
	LocationCode     string `protobuf:"bytes,11,opt,name=location_code,json=locationCode,proto3" json:"location_code,omitempty"`
	Salability       int32  `protobuf:"varint,12,opt,name=salability,proto3" json:"salability,omitempty"`
	OrderChannel     int32  `protobuf:"varint,13,opt,name=order_channel,json=orderChannel,proto3" json:"order_channel,omitempty"`
	ArchetypeIdGp    string `protobuf:"bytes,14,opt,name=archetype_id_gp,json=archetypeIdGp,proto3" json:"archetype_id_gp,omitempty"`
	PriceLevel       string `protobuf:"bytes,15,opt,name=price_level,json=priceLevel,proto3" json:"price_level,omitempty"`
	ItemId           string `protobuf:"bytes,16,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	StatusGP         string `protobuf:"bytes,17,opt,name=statusGP,proto3" json:"statusGP,omitempty"`
	SalabilityGP     string `protobuf:"bytes,18,opt,name=salabilityGP,proto3" json:"salabilityGP,omitempty"`
	Packability      string `protobuf:"bytes,19,opt,name=packability,proto3" json:"packability,omitempty"`
	Fragilegoods     string `protobuf:"bytes,20,opt,name=fragilegoods,proto3" json:"fragilegoods,omitempty"`
}

func (x *GetItemListRequest) Reset() {
	*x = GetItemListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemListRequest) ProtoMessage() {}

func (x *GetItemListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemListRequest.ProtoReflect.Descriptor instead.
func (*GetItemListRequest) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetItemListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetItemListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetItemListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetItemListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetItemListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetItemListRequest) GetUomId() string {
	if x != nil {
		return x.UomId
	}
	return ""
}

func (x *GetItemListRequest) GetClassId() string {
	if x != nil {
		return x.ClassId
	}
	return ""
}

func (x *GetItemListRequest) GetItemCategoryId() int64 {
	if x != nil {
		return x.ItemCategoryId
	}
	return 0
}

func (x *GetItemListRequest) GetRegionIdGp() string {
	if x != nil {
		return x.RegionIdGp
	}
	return ""
}

func (x *GetItemListRequest) GetCustomerTypeIdGp() string {
	if x != nil {
		return x.CustomerTypeIdGp
	}
	return ""
}

func (x *GetItemListRequest) GetLocationCode() string {
	if x != nil {
		return x.LocationCode
	}
	return ""
}

func (x *GetItemListRequest) GetSalability() int32 {
	if x != nil {
		return x.Salability
	}
	return 0
}

func (x *GetItemListRequest) GetOrderChannel() int32 {
	if x != nil {
		return x.OrderChannel
	}
	return 0
}

func (x *GetItemListRequest) GetArchetypeIdGp() string {
	if x != nil {
		return x.ArchetypeIdGp
	}
	return ""
}

func (x *GetItemListRequest) GetPriceLevel() string {
	if x != nil {
		return x.PriceLevel
	}
	return ""
}

func (x *GetItemListRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *GetItemListRequest) GetStatusGP() string {
	if x != nil {
		return x.StatusGP
	}
	return ""
}

func (x *GetItemListRequest) GetSalabilityGP() string {
	if x != nil {
		return x.SalabilityGP
	}
	return ""
}

func (x *GetItemListRequest) GetPackability() string {
	if x != nil {
		return x.Packability
	}
	return ""
}

func (x *GetItemListRequest) GetFragilegoods() string {
	if x != nil {
		return x.Fragilegoods
	}
	return ""
}

type GetItemListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Item `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetItemListResponse) Reset() {
	*x = GetItemListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemListResponse) ProtoMessage() {}

func (x *GetItemListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemListResponse.ProtoReflect.Descriptor instead.
func (*GetItemListResponse) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetItemListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetItemListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetItemListResponse) GetData() []*Item {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetItemDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code          string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	ItemIdGp      string `protobuf:"bytes,3,opt,name=item_id_gp,json=itemIdGp,proto3" json:"item_id_gp,omitempty"`
	OrderChannel  int32  `protobuf:"varint,4,opt,name=order_channel,json=orderChannel,proto3" json:"order_channel,omitempty"`
	ArchetypeIdGp string `protobuf:"bytes,5,opt,name=archetype_id_gp,json=archetypeIdGp,proto3" json:"archetype_id_gp,omitempty"`
}

func (x *GetItemDetailRequest) Reset() {
	*x = GetItemDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemDetailRequest) ProtoMessage() {}

func (x *GetItemDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemDetailRequest.ProtoReflect.Descriptor instead.
func (*GetItemDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetItemDetailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetItemDetailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetItemDetailRequest) GetItemIdGp() string {
	if x != nil {
		return x.ItemIdGp
	}
	return ""
}

func (x *GetItemDetailRequest) GetOrderChannel() int32 {
	if x != nil {
		return x.OrderChannel
	}
	return 0
}

func (x *GetItemDetailRequest) GetArchetypeIdGp() string {
	if x != nil {
		return x.ArchetypeIdGp
	}
	return ""
}

type GetItemDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Item  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetItemDetailResponse) Reset() {
	*x = GetItemDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemDetailResponse) ProtoMessage() {}

func (x *GetItemDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemDetailResponse.ProtoReflect.Descriptor instead.
func (*GetItemDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetItemDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetItemDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetItemDetailResponse) GetData() *Item {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetItemDetailByInternalIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemIdGp         string `protobuf:"bytes,2,opt,name=item_id_gp,json=itemIdGp,proto3" json:"item_id_gp,omitempty"`
	RegionIdGp       string `protobuf:"bytes,3,opt,name=region_id_gp,json=regionIdGp,proto3" json:"region_id_gp,omitempty"`
	CustomerTypeIdGp string `protobuf:"bytes,4,opt,name=customer_type_id_gp,json=customerTypeIdGp,proto3" json:"customer_type_id_gp,omitempty"`
	LocationCode     string `protobuf:"bytes,5,opt,name=location_code,json=locationCode,proto3" json:"location_code,omitempty"`
	Salability       int32  `protobuf:"varint,6,opt,name=salability,proto3" json:"salability,omitempty"`
	OrderChannel     int32  `protobuf:"varint,7,opt,name=order_channel,json=orderChannel,proto3" json:"order_channel,omitempty"`
	ArchetypeIdGp    string `protobuf:"bytes,8,opt,name=archetype_id_gp,json=archetypeIdGp,proto3" json:"archetype_id_gp,omitempty"`
	PriceLevel       string `protobuf:"bytes,9,opt,name=price_level,json=priceLevel,proto3" json:"price_level,omitempty"`
}

func (x *GetItemDetailByInternalIdRequest) Reset() {
	*x = GetItemDetailByInternalIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemDetailByInternalIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemDetailByInternalIdRequest) ProtoMessage() {}

func (x *GetItemDetailByInternalIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemDetailByInternalIdRequest.ProtoReflect.Descriptor instead.
func (*GetItemDetailByInternalIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetItemDetailByInternalIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetItemDetailByInternalIdRequest) GetItemIdGp() string {
	if x != nil {
		return x.ItemIdGp
	}
	return ""
}

func (x *GetItemDetailByInternalIdRequest) GetRegionIdGp() string {
	if x != nil {
		return x.RegionIdGp
	}
	return ""
}

func (x *GetItemDetailByInternalIdRequest) GetCustomerTypeIdGp() string {
	if x != nil {
		return x.CustomerTypeIdGp
	}
	return ""
}

func (x *GetItemDetailByInternalIdRequest) GetLocationCode() string {
	if x != nil {
		return x.LocationCode
	}
	return ""
}

func (x *GetItemDetailByInternalIdRequest) GetSalability() int32 {
	if x != nil {
		return x.Salability
	}
	return 0
}

func (x *GetItemDetailByInternalIdRequest) GetOrderChannel() int32 {
	if x != nil {
		return x.OrderChannel
	}
	return 0
}

func (x *GetItemDetailByInternalIdRequest) GetArchetypeIdGp() string {
	if x != nil {
		return x.ArchetypeIdGp
	}
	return ""
}

func (x *GetItemDetailByInternalIdRequest) GetPriceLevel() string {
	if x != nil {
		return x.PriceLevel
	}
	return ""
}

type GetItemDetailByInternalIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Item  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetItemDetailByInternalIdResponse) Reset() {
	*x = GetItemDetailByInternalIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemDetailByInternalIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemDetailByInternalIdResponse) ProtoMessage() {}

func (x *GetItemDetailByInternalIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemDetailByInternalIdResponse.ProtoReflect.Descriptor instead.
func (*GetItemDetailByInternalIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetItemDetailByInternalIdResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetItemDetailByInternalIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetItemDetailByInternalIdResponse) GetData() *Item {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetItemDetailMasterComplexByInternalIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Item  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetItemDetailMasterComplexByInternalIdResponse) Reset() {
	*x = GetItemDetailMasterComplexByInternalIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemDetailMasterComplexByInternalIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemDetailMasterComplexByInternalIdResponse) ProtoMessage() {}

func (x *GetItemDetailMasterComplexByInternalIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemDetailMasterComplexByInternalIdResponse.ProtoReflect.Descriptor instead.
func (*GetItemDetailMasterComplexByInternalIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetItemDetailMasterComplexByInternalIdResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetItemDetailMasterComplexByInternalIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetItemDetailMasterComplexByInternalIdResponse) GetData() *Item {
	if x != nil {
		return x.Data
	}
	return nil
}

type SyncMongoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SyncMongoRequest) Reset() {
	*x = SyncMongoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMongoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMongoRequest) ProtoMessage() {}

func (x *SyncMongoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMongoRequest.ProtoReflect.Descriptor instead.
func (*SyncMongoRequest) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{18}
}

func (x *SyncMongoRequest) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type SyncMongoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SyncMongoResponse) Reset() {
	*x = SyncMongoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMongoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMongoResponse) ProtoMessage() {}

func (x *SyncMongoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMongoResponse.ProtoReflect.Descriptor instead.
func (*SyncMongoResponse) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{19}
}

func (x *SyncMongoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SyncMongoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Item_PriceLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId   string  `protobuf:"bytes,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	CustTypeId string  `protobuf:"bytes,2,opt,name=cust_type_id,json=custTypeId,proto3" json:"cust_type_id,omitempty"`
	Pricelevel string  `protobuf:"bytes,3,opt,name=pricelevel,proto3" json:"pricelevel,omitempty"`
	Price      float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Item_PriceLevel) Reset() {
	*x = Item_PriceLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item_PriceLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item_PriceLevel) ProtoMessage() {}

func (x *Item_PriceLevel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item_PriceLevel.ProtoReflect.Descriptor instead.
func (*Item_PriceLevel) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Item_PriceLevel) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *Item_PriceLevel) GetCustTypeId() string {
	if x != nil {
		return x.CustTypeId
	}
	return ""
}

func (x *Item_PriceLevel) GetPricelevel() string {
	if x != nil {
		return x.Pricelevel
	}
	return ""
}

func (x *Item_PriceLevel) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type Item_Site struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionId            string  `protobuf:"bytes,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	SiteId              string  `protobuf:"bytes,2,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	GnlCbSalability     int32   `protobuf:"varint,3,opt,name=gnl_cb_salability,json=gnlCbSalability,proto3" json:"gnl_cb_salability,omitempty"`
	GnlCbSalabilityDesc string  `protobuf:"bytes,4,opt,name=gnl_cb_salability_desc,json=gnlCbSalabilityDesc,proto3" json:"gnl_cb_salability_desc,omitempty"`
	TotalStock          float64 `protobuf:"fixed64,5,opt,name=total_stock,json=totalStock,proto3" json:"total_stock,omitempty"`
}

func (x *Item_Site) Reset() {
	*x = Item_Site{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item_Site) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item_Site) ProtoMessage() {}

func (x *Item_Site) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item_Site.ProtoReflect.Descriptor instead.
func (*Item_Site) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Item_Site) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *Item_Site) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *Item_Site) GetGnlCbSalability() int32 {
	if x != nil {
		return x.GnlCbSalability
	}
	return 0
}

func (x *Item_Site) GetGnlCbSalabilityDesc() string {
	if x != nil {
		return x.GnlCbSalabilityDesc
	}
	return ""
}

func (x *Item_Site) GetTotalStock() float64 {
	if x != nil {
		return x.TotalStock
	}
	return 0
}

type Item_PriceTiering struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Docnumbr          string  `protobuf:"bytes,1,opt,name=docnumbr,proto3" json:"docnumbr,omitempty"`
	GnlRegion         string  `protobuf:"bytes,2,opt,name=gnl_region,json=gnlRegion,proto3" json:"gnl_region,omitempty"`
	EffectiveDate     string  `protobuf:"bytes,3,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
	GnlMinQty         int32   `protobuf:"varint,4,opt,name=gnl_min_qty,json=gnlMinQty,proto3" json:"gnl_min_qty,omitempty"`
	GnlDiscountAmount float64 `protobuf:"fixed64,5,opt,name=gnl_discount_amount,json=gnlDiscountAmount,proto3" json:"gnl_discount_amount,omitempty"`
	GnlQuotaUser      int32   `protobuf:"varint,6,opt,name=gnl_quota_user,json=gnlQuotaUser,proto3" json:"gnl_quota_user,omitempty"`
}

func (x *Item_PriceTiering) Reset() {
	*x = Item_PriceTiering{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item_PriceTiering) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item_PriceTiering) ProtoMessage() {}

func (x *Item_PriceTiering) ProtoReflect() protoreflect.Message {
	mi := &file_proto_catalog_service_catalog_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item_PriceTiering.ProtoReflect.Descriptor instead.
func (*Item_PriceTiering) Descriptor() ([]byte, []int) {
	return file_proto_catalog_service_catalog_service_proto_rawDescGZIP(), []int{10, 2}
}

func (x *Item_PriceTiering) GetDocnumbr() string {
	if x != nil {
		return x.Docnumbr
	}
	return ""
}

func (x *Item_PriceTiering) GetGnlRegion() string {
	if x != nil {
		return x.GnlRegion
	}
	return ""
}

func (x *Item_PriceTiering) GetEffectiveDate() string {
	if x != nil {
		return x.EffectiveDate
	}
	return ""
}

func (x *Item_PriceTiering) GetGnlMinQty() int32 {
	if x != nil {
		return x.GnlMinQty
	}
	return 0
}

func (x *Item_PriceTiering) GetGnlDiscountAmount() float64 {
	if x != nil {
		return x.GnlDiscountAmount
	}
	return 0
}

func (x *Item_PriceTiering) GetGnlQuotaUser() int32 {
	if x != nil {
		return x.GnlQuotaUser
	}
	return 0
}

var File_proto_catalog_service_catalog_service_proto protoreflect.FileDescriptor

var file_proto_catalog_service_catalog_service_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x8e, 0x02, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x2e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x86, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xca, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x77, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22,
	0x80, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xc0, 0x0e, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x75, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x75, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x74, 0x65,
	0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a,
	0x16, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x75,
	0x6e, 0x69, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e,
	0x5f, 0x71, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x4d, 0x69, 0x6e, 0x51, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x51, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61,
	0x70, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x41, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x6d,
	0x61, 0x78, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x44,
	0x61, 0x79, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x66, 0x72, 0x61, 0x67, 0x69, 0x6c, 0x65, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x72, 0x61, 0x67, 0x69, 0x6c, 0x65, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3a, 0x0a,
	0x19, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6f, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6f, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x47, 0x70, 0x12, 0x45,
	0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x69,
	0x74, 0x65, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x53, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x69, 0x65,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x20, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x13, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x72, 0x1a, 0x81, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x1a, 0xbe, 0x01, 0x0a, 0x04,
	0x53, 0x69, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x6e,
	0x6c, 0x5f, 0x63, 0x62, 0x5f, 0x73, 0x61, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x67, 0x6e, 0x6c, 0x43, 0x62, 0x53, 0x61, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x16, 0x67, 0x6e, 0x6c, 0x5f, 0x63, 0x62,
	0x5f, 0x73, 0x61, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x6e, 0x6c, 0x43, 0x62, 0x53, 0x61, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x1a, 0xe6, 0x01, 0x0a,
	0x0c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x6f, 0x63, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x63, 0x6e, 0x75, 0x6d, 0x62, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6e, 0x6c,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x6e, 0x6c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0b, 0x67, 0x6e, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x6e, 0x6c, 0x4d, 0x69, 0x6e, 0x51, 0x74, 0x79, 0x12,
	0x2e, 0x0a, 0x13, 0x67, 0x6e, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x67, 0x6e,
	0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x67, 0x6e, 0x6c, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x67, 0x6e, 0x6c, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x55, 0x73, 0x65, 0x72, 0x22, 0x8c, 0x05, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x67,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x47, 0x70, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x47, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x61, 0x6c,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f,
	0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x47, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x50, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x50, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x61,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x47, 0x50, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x61, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x47, 0x50, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x61, 0x67, 0x69, 0x6c, 0x65, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x61, 0x67, 0x69, 0x6c, 0x65, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x22, 0x74, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x47, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x72,
	0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x47, 0x70, 0x22, 0x76, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd4, 0x02, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x47, 0x70, 0x12, 0x20, 0x0a,
	0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x47, 0x70, 0x12,
	0x2d, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x47, 0x70, 0x12, 0x23,
	0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x72, 0x63, 0x68,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x47, 0x70,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0x82, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x78, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63,
	0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x41, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x32, 0xc9, 0x0b, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9d, 0x01, 0x0a, 0x26, 0x47,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x60, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12, 0x27, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x5c, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x2e, 0x65, 0x64, 0x65, 0x6e, 0x66, 0x61, 0x72, 0x6d, 0x2e,
	0x69, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x33, 0x2f, 0x65, 0x72, 0x70, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x65, 0x72, 0x70, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0xa2, 0x02, 0x03, 0x45, 0x4f, 0x50, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_catalog_service_catalog_service_proto_rawDescOnce sync.Once
	file_proto_catalog_service_catalog_service_proto_rawDescData = file_proto_catalog_service_catalog_service_proto_rawDesc
)

func file_proto_catalog_service_catalog_service_proto_rawDescGZIP() []byte {
	file_proto_catalog_service_catalog_service_proto_rawDescOnce.Do(func() {
		file_proto_catalog_service_catalog_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_catalog_service_catalog_service_proto_rawDescData)
	})
	return file_proto_catalog_service_catalog_service_proto_rawDescData
}

var file_proto_catalog_service_catalog_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_proto_catalog_service_catalog_service_proto_goTypes = []interface{}{
	(*ItemImage)(nil),                                      // 0: proto.catalog_service.ItemImage
	(*ItemCategory)(nil),                                   // 1: proto.catalog_service.ItemCategory
	(*GetItemCategoryListRequest)(nil),                     // 2: proto.catalog_service.GetItemCategoryListRequest
	(*GetItemCategoryListResponse)(nil),                    // 3: proto.catalog_service.GetItemCategoryListResponse
	(*GetItemCategoryDetailRequest)(nil),                   // 4: proto.catalog_service.GetItemCategoryDetailRequest
	(*GetItemCategoryDetailResponse)(nil),                  // 5: proto.catalog_service.GetItemCategoryDetailResponse
	(*GetItemImageListRequest)(nil),                        // 6: proto.catalog_service.GetItemImageListRequest
	(*GetItemImageListResponse)(nil),                       // 7: proto.catalog_service.GetItemImageListResponse
	(*GetItemImageDetailRequest)(nil),                      // 8: proto.catalog_service.GetItemImageDetailRequest
	(*GetItemImageDetailResponse)(nil),                     // 9: proto.catalog_service.GetItemImageDetailResponse
	(*Item)(nil),                                           // 10: proto.catalog_service.Item
	(*GetItemListRequest)(nil),                             // 11: proto.catalog_service.GetItemListRequest
	(*GetItemListResponse)(nil),                            // 12: proto.catalog_service.GetItemListResponse
	(*GetItemDetailRequest)(nil),                           // 13: proto.catalog_service.GetItemDetailRequest
	(*GetItemDetailResponse)(nil),                          // 14: proto.catalog_service.GetItemDetailResponse
	(*GetItemDetailByInternalIdRequest)(nil),               // 15: proto.catalog_service.GetItemDetailByInternalIdRequest
	(*GetItemDetailByInternalIdResponse)(nil),              // 16: proto.catalog_service.GetItemDetailByInternalIdResponse
	(*GetItemDetailMasterComplexByInternalIdResponse)(nil), // 17: proto.catalog_service.GetItemDetailMasterComplexByInternalIdResponse
	(*SyncMongoRequest)(nil),                               // 18: proto.catalog_service.SyncMongoRequest
	(*SyncMongoResponse)(nil),                              // 19: proto.catalog_service.SyncMongoResponse
	(*Item_PriceLevel)(nil),                                // 20: proto.catalog_service.Item.PriceLevel
	(*Item_Site)(nil),                                      // 21: proto.catalog_service.Item.Site
	(*Item_PriceTiering)(nil),                              // 22: proto.catalog_service.Item.PriceTiering
	(*timestamppb.Timestamp)(nil),                          // 23: google.protobuf.Timestamp
}
var file_proto_catalog_service_catalog_service_proto_depIdxs = []int32{
	23, // 0: proto.catalog_service.ItemImage.created_at:type_name -> google.protobuf.Timestamp
	23, // 1: proto.catalog_service.ItemCategory.created_at:type_name -> google.protobuf.Timestamp
	23, // 2: proto.catalog_service.ItemCategory.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 3: proto.catalog_service.GetItemCategoryListResponse.data:type_name -> proto.catalog_service.ItemCategory
	1,  // 4: proto.catalog_service.GetItemCategoryDetailResponse.data:type_name -> proto.catalog_service.ItemCategory
	0,  // 5: proto.catalog_service.GetItemImageListResponse.data:type_name -> proto.catalog_service.ItemImage
	0,  // 6: proto.catalog_service.GetItemImageDetailResponse.data:type_name -> proto.catalog_service.ItemImage
	23, // 7: proto.catalog_service.Item.created_at:type_name -> google.protobuf.Timestamp
	23, // 8: proto.catalog_service.Item.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 9: proto.catalog_service.Item.item_image:type_name -> proto.catalog_service.ItemImage
	20, // 10: proto.catalog_service.Item.item_price:type_name -> proto.catalog_service.Item.PriceLevel
	21, // 11: proto.catalog_service.Item.item_site:type_name -> proto.catalog_service.Item.Site
	22, // 12: proto.catalog_service.Item.price_tiering:type_name -> proto.catalog_service.Item.PriceTiering
	10, // 13: proto.catalog_service.GetItemListResponse.data:type_name -> proto.catalog_service.Item
	10, // 14: proto.catalog_service.GetItemDetailResponse.data:type_name -> proto.catalog_service.Item
	10, // 15: proto.catalog_service.GetItemDetailByInternalIdResponse.data:type_name -> proto.catalog_service.Item
	10, // 16: proto.catalog_service.GetItemDetailMasterComplexByInternalIdResponse.data:type_name -> proto.catalog_service.Item
	6,  // 17: proto.catalog_service.CatalogService.GetItemImageList:input_type -> proto.catalog_service.GetItemImageListRequest
	8,  // 18: proto.catalog_service.CatalogService.GetItemImageDetail:input_type -> proto.catalog_service.GetItemImageDetailRequest
	2,  // 19: proto.catalog_service.CatalogService.GetItemCategoryList:input_type -> proto.catalog_service.GetItemCategoryListRequest
	4,  // 20: proto.catalog_service.CatalogService.GetItemCategoryDetail:input_type -> proto.catalog_service.GetItemCategoryDetailRequest
	11, // 21: proto.catalog_service.CatalogService.GetItemList:input_type -> proto.catalog_service.GetItemListRequest
	13, // 22: proto.catalog_service.CatalogService.GetItemDetail:input_type -> proto.catalog_service.GetItemDetailRequest
	15, // 23: proto.catalog_service.CatalogService.GetItemDetailByInternalId:input_type -> proto.catalog_service.GetItemDetailByInternalIdRequest
	15, // 24: proto.catalog_service.CatalogService.GetItemDetailMasterComplexByInternalID:input_type -> proto.catalog_service.GetItemDetailByInternalIdRequest
	11, // 25: proto.catalog_service.CatalogService.GetItemListInternal:input_type -> proto.catalog_service.GetItemListRequest
	13, // 26: proto.catalog_service.CatalogService.GetItemDetailInternal:input_type -> proto.catalog_service.GetItemDetailRequest
	18, // 27: proto.catalog_service.CatalogService.SyncMongo:input_type -> proto.catalog_service.SyncMongoRequest
	11, // 28: proto.catalog_service.CatalogService.GetItemListMongo:input_type -> proto.catalog_service.GetItemListRequest
	7,  // 29: proto.catalog_service.CatalogService.GetItemImageList:output_type -> proto.catalog_service.GetItemImageListResponse
	9,  // 30: proto.catalog_service.CatalogService.GetItemImageDetail:output_type -> proto.catalog_service.GetItemImageDetailResponse
	3,  // 31: proto.catalog_service.CatalogService.GetItemCategoryList:output_type -> proto.catalog_service.GetItemCategoryListResponse
	5,  // 32: proto.catalog_service.CatalogService.GetItemCategoryDetail:output_type -> proto.catalog_service.GetItemCategoryDetailResponse
	12, // 33: proto.catalog_service.CatalogService.GetItemList:output_type -> proto.catalog_service.GetItemListResponse
	14, // 34: proto.catalog_service.CatalogService.GetItemDetail:output_type -> proto.catalog_service.GetItemDetailResponse
	16, // 35: proto.catalog_service.CatalogService.GetItemDetailByInternalId:output_type -> proto.catalog_service.GetItemDetailByInternalIdResponse
	16, // 36: proto.catalog_service.CatalogService.GetItemDetailMasterComplexByInternalID:output_type -> proto.catalog_service.GetItemDetailByInternalIdResponse
	12, // 37: proto.catalog_service.CatalogService.GetItemListInternal:output_type -> proto.catalog_service.GetItemListResponse
	14, // 38: proto.catalog_service.CatalogService.GetItemDetailInternal:output_type -> proto.catalog_service.GetItemDetailResponse
	19, // 39: proto.catalog_service.CatalogService.SyncMongo:output_type -> proto.catalog_service.SyncMongoResponse
	12, // 40: proto.catalog_service.CatalogService.GetItemListMongo:output_type -> proto.catalog_service.GetItemListResponse
	29, // [29:41] is the sub-list for method output_type
	17, // [17:29] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_catalog_service_catalog_service_proto_init() }
func file_proto_catalog_service_catalog_service_proto_init() {
	if File_proto_catalog_service_catalog_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_catalog_service_catalog_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemCategoryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemCategoryListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemCategoryDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemCategoryDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemImageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemImageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemImageDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemImageDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemDetailByInternalIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemDetailByInternalIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemDetailMasterComplexByInternalIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMongoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMongoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item_PriceLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item_Site); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_catalog_service_catalog_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item_PriceTiering); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_catalog_service_catalog_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_catalog_service_catalog_service_proto_goTypes,
		DependencyIndexes: file_proto_catalog_service_catalog_service_proto_depIdxs,
		MessageInfos:      file_proto_catalog_service_catalog_service_proto_msgTypes,
	}.Build()
	File_proto_catalog_service_catalog_service_proto = out.File
	file_proto_catalog_service_catalog_service_proto_rawDesc = nil
	file_proto_catalog_service_catalog_service_proto_goTypes = nil
	file_proto_catalog_service_catalog_service_proto_depIdxs = nil
}
