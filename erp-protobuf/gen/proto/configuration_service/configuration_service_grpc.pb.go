// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.23.4
// source: proto/configuration_service/configuration_service.proto

package configuration_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ConfigurationServiceClient is the client API for ConfigurationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ConfigurationServiceClient interface {
	GetGenerateCode(ctx context.Context, in *GetGenerateCodeRequest, opts ...grpc.CallOption) (*GetGenerateCodeResponse, error)
	GetGenerateCustomerCode(ctx context.Context, in *GetGenerateCodeRequest, opts ...grpc.CallOption) (*GetGenerateCodeResponse, error)
	GetGenerateReferralCode(ctx context.Context, in *GetGenerateCodeRequest, opts ...grpc.CallOption) (*GetGenerateCodeResponse, error)
	GetGlossaryList(ctx context.Context, in *GetGlossaryListRequest, opts ...grpc.CallOption) (*GetGlossaryListResponse, error)
	GetGlossaryDetail(ctx context.Context, in *GetGlossaryDetailRequest, opts ...grpc.CallOption) (*GetGlossaryDetailResponse, error)
	GetConfigAppList(ctx context.Context, in *GetConfigAppListRequest, opts ...grpc.CallOption) (*GetConfigAppListResponse, error)
	GetConfigAppDetail(ctx context.Context, in *GetConfigAppDetailRequest, opts ...grpc.CallOption) (*GetConfigAppDetailResponse, error)
	GetWrtDetail(ctx context.Context, in *GetWrtDetailRequest, opts ...grpc.CallOption) (*GetWrtDetailResponse, error)
	GetWrtIdGP(ctx context.Context, in *GetWrtDetailRequest, opts ...grpc.CallOption) (*GetWrtDetailResponse, error)
	GetWrtList(ctx context.Context, in *GetWrtListRequest, opts ...grpc.CallOption) (*GetWrtListResponse, error)
	GetRegionPolicyDetail(ctx context.Context, in *GetRegionPolicyDetailRequest, opts ...grpc.CallOption) (*GetRegionPolicyDetailResponse, error)
	GetRegionPolicyList(ctx context.Context, in *GetRegionPolicyListRequest, opts ...grpc.CallOption) (*GetRegionPolicyListResponse, error)
	GetDayOffDetail(ctx context.Context, in *GetDayOffDetailRequest, opts ...grpc.CallOption) (*GetDayOffDetailResponse, error)
	GetDayOffList(ctx context.Context, in *GetDayOffListRequest, opts ...grpc.CallOption) (*GetDayOffListResponse, error)
}

type configurationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewConfigurationServiceClient(cc grpc.ClientConnInterface) ConfigurationServiceClient {
	return &configurationServiceClient{cc}
}

func (c *configurationServiceClient) GetGenerateCode(ctx context.Context, in *GetGenerateCodeRequest, opts ...grpc.CallOption) (*GetGenerateCodeResponse, error) {
	out := new(GetGenerateCodeResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetGenerateCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetGenerateCustomerCode(ctx context.Context, in *GetGenerateCodeRequest, opts ...grpc.CallOption) (*GetGenerateCodeResponse, error) {
	out := new(GetGenerateCodeResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetGenerateCustomerCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetGenerateReferralCode(ctx context.Context, in *GetGenerateCodeRequest, opts ...grpc.CallOption) (*GetGenerateCodeResponse, error) {
	out := new(GetGenerateCodeResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetGenerateReferralCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetGlossaryList(ctx context.Context, in *GetGlossaryListRequest, opts ...grpc.CallOption) (*GetGlossaryListResponse, error) {
	out := new(GetGlossaryListResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetGlossaryList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetGlossaryDetail(ctx context.Context, in *GetGlossaryDetailRequest, opts ...grpc.CallOption) (*GetGlossaryDetailResponse, error) {
	out := new(GetGlossaryDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetGlossaryDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetConfigAppList(ctx context.Context, in *GetConfigAppListRequest, opts ...grpc.CallOption) (*GetConfigAppListResponse, error) {
	out := new(GetConfigAppListResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetConfigAppList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetConfigAppDetail(ctx context.Context, in *GetConfigAppDetailRequest, opts ...grpc.CallOption) (*GetConfigAppDetailResponse, error) {
	out := new(GetConfigAppDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetConfigAppDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetWrtDetail(ctx context.Context, in *GetWrtDetailRequest, opts ...grpc.CallOption) (*GetWrtDetailResponse, error) {
	out := new(GetWrtDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetWrtDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetWrtIdGP(ctx context.Context, in *GetWrtDetailRequest, opts ...grpc.CallOption) (*GetWrtDetailResponse, error) {
	out := new(GetWrtDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetWrtIdGP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetWrtList(ctx context.Context, in *GetWrtListRequest, opts ...grpc.CallOption) (*GetWrtListResponse, error) {
	out := new(GetWrtListResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetWrtList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetRegionPolicyDetail(ctx context.Context, in *GetRegionPolicyDetailRequest, opts ...grpc.CallOption) (*GetRegionPolicyDetailResponse, error) {
	out := new(GetRegionPolicyDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetRegionPolicyDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetRegionPolicyList(ctx context.Context, in *GetRegionPolicyListRequest, opts ...grpc.CallOption) (*GetRegionPolicyListResponse, error) {
	out := new(GetRegionPolicyListResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetRegionPolicyList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetDayOffDetail(ctx context.Context, in *GetDayOffDetailRequest, opts ...grpc.CallOption) (*GetDayOffDetailResponse, error) {
	out := new(GetDayOffDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetDayOffDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configurationServiceClient) GetDayOffList(ctx context.Context, in *GetDayOffListRequest, opts ...grpc.CallOption) (*GetDayOffListResponse, error) {
	out := new(GetDayOffListResponse)
	err := c.cc.Invoke(ctx, "/proto.configuration_service.ConfigurationService/GetDayOffList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigurationServiceServer is the server API for ConfigurationService service.
// All implementations should embed UnimplementedConfigurationServiceServer
// for forward compatibility
type ConfigurationServiceServer interface {
	GetGenerateCode(context.Context, *GetGenerateCodeRequest) (*GetGenerateCodeResponse, error)
	GetGenerateCustomerCode(context.Context, *GetGenerateCodeRequest) (*GetGenerateCodeResponse, error)
	GetGenerateReferralCode(context.Context, *GetGenerateCodeRequest) (*GetGenerateCodeResponse, error)
	GetGlossaryList(context.Context, *GetGlossaryListRequest) (*GetGlossaryListResponse, error)
	GetGlossaryDetail(context.Context, *GetGlossaryDetailRequest) (*GetGlossaryDetailResponse, error)
	GetConfigAppList(context.Context, *GetConfigAppListRequest) (*GetConfigAppListResponse, error)
	GetConfigAppDetail(context.Context, *GetConfigAppDetailRequest) (*GetConfigAppDetailResponse, error)
	GetWrtDetail(context.Context, *GetWrtDetailRequest) (*GetWrtDetailResponse, error)
	GetWrtIdGP(context.Context, *GetWrtDetailRequest) (*GetWrtDetailResponse, error)
	GetWrtList(context.Context, *GetWrtListRequest) (*GetWrtListResponse, error)
	GetRegionPolicyDetail(context.Context, *GetRegionPolicyDetailRequest) (*GetRegionPolicyDetailResponse, error)
	GetRegionPolicyList(context.Context, *GetRegionPolicyListRequest) (*GetRegionPolicyListResponse, error)
	GetDayOffDetail(context.Context, *GetDayOffDetailRequest) (*GetDayOffDetailResponse, error)
	GetDayOffList(context.Context, *GetDayOffListRequest) (*GetDayOffListResponse, error)
}

// UnimplementedConfigurationServiceServer should be embedded to have forward compatible implementations.
type UnimplementedConfigurationServiceServer struct {
}

func (UnimplementedConfigurationServiceServer) GetGenerateCode(context.Context, *GetGenerateCodeRequest) (*GetGenerateCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGenerateCode not implemented")
}
func (UnimplementedConfigurationServiceServer) GetGenerateCustomerCode(context.Context, *GetGenerateCodeRequest) (*GetGenerateCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGenerateCustomerCode not implemented")
}
func (UnimplementedConfigurationServiceServer) GetGenerateReferralCode(context.Context, *GetGenerateCodeRequest) (*GetGenerateCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGenerateReferralCode not implemented")
}
func (UnimplementedConfigurationServiceServer) GetGlossaryList(context.Context, *GetGlossaryListRequest) (*GetGlossaryListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGlossaryList not implemented")
}
func (UnimplementedConfigurationServiceServer) GetGlossaryDetail(context.Context, *GetGlossaryDetailRequest) (*GetGlossaryDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGlossaryDetail not implemented")
}
func (UnimplementedConfigurationServiceServer) GetConfigAppList(context.Context, *GetConfigAppListRequest) (*GetConfigAppListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigAppList not implemented")
}
func (UnimplementedConfigurationServiceServer) GetConfigAppDetail(context.Context, *GetConfigAppDetailRequest) (*GetConfigAppDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfigAppDetail not implemented")
}
func (UnimplementedConfigurationServiceServer) GetWrtDetail(context.Context, *GetWrtDetailRequest) (*GetWrtDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWrtDetail not implemented")
}
func (UnimplementedConfigurationServiceServer) GetWrtIdGP(context.Context, *GetWrtDetailRequest) (*GetWrtDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWrtIdGP not implemented")
}
func (UnimplementedConfigurationServiceServer) GetWrtList(context.Context, *GetWrtListRequest) (*GetWrtListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWrtList not implemented")
}
func (UnimplementedConfigurationServiceServer) GetRegionPolicyDetail(context.Context, *GetRegionPolicyDetailRequest) (*GetRegionPolicyDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegionPolicyDetail not implemented")
}
func (UnimplementedConfigurationServiceServer) GetRegionPolicyList(context.Context, *GetRegionPolicyListRequest) (*GetRegionPolicyListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegionPolicyList not implemented")
}
func (UnimplementedConfigurationServiceServer) GetDayOffDetail(context.Context, *GetDayOffDetailRequest) (*GetDayOffDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDayOffDetail not implemented")
}
func (UnimplementedConfigurationServiceServer) GetDayOffList(context.Context, *GetDayOffListRequest) (*GetDayOffListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDayOffList not implemented")
}

// UnsafeConfigurationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ConfigurationServiceServer will
// result in compilation errors.
type UnsafeConfigurationServiceServer interface {
	mustEmbedUnimplementedConfigurationServiceServer()
}

func RegisterConfigurationServiceServer(s grpc.ServiceRegistrar, srv ConfigurationServiceServer) {
	s.RegisterService(&ConfigurationService_ServiceDesc, srv)
}

func _ConfigurationService_GetGenerateCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGenerateCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetGenerateCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetGenerateCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetGenerateCode(ctx, req.(*GetGenerateCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetGenerateCustomerCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGenerateCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetGenerateCustomerCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetGenerateCustomerCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetGenerateCustomerCode(ctx, req.(*GetGenerateCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetGenerateReferralCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGenerateCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetGenerateReferralCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetGenerateReferralCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetGenerateReferralCode(ctx, req.(*GetGenerateCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetGlossaryList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGlossaryListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetGlossaryList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetGlossaryList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetGlossaryList(ctx, req.(*GetGlossaryListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetGlossaryDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGlossaryDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetGlossaryDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetGlossaryDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetGlossaryDetail(ctx, req.(*GetGlossaryDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetConfigAppList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigAppListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetConfigAppList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetConfigAppList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetConfigAppList(ctx, req.(*GetConfigAppListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetConfigAppDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigAppDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetConfigAppDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetConfigAppDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetConfigAppDetail(ctx, req.(*GetConfigAppDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetWrtDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWrtDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetWrtDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetWrtDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetWrtDetail(ctx, req.(*GetWrtDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetWrtIdGP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWrtDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetWrtIdGP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetWrtIdGP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetWrtIdGP(ctx, req.(*GetWrtDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetWrtList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWrtListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetWrtList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetWrtList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetWrtList(ctx, req.(*GetWrtListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetRegionPolicyDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegionPolicyDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetRegionPolicyDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetRegionPolicyDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetRegionPolicyDetail(ctx, req.(*GetRegionPolicyDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetRegionPolicyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegionPolicyListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetRegionPolicyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetRegionPolicyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetRegionPolicyList(ctx, req.(*GetRegionPolicyListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetDayOffDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDayOffDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetDayOffDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetDayOffDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetDayOffDetail(ctx, req.(*GetDayOffDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigurationService_GetDayOffList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDayOffListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigurationServiceServer).GetDayOffList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.configuration_service.ConfigurationService/GetDayOffList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigurationServiceServer).GetDayOffList(ctx, req.(*GetDayOffListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ConfigurationService_ServiceDesc is the grpc.ServiceDesc for ConfigurationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ConfigurationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.configuration_service.ConfigurationService",
	HandlerType: (*ConfigurationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGenerateCode",
			Handler:    _ConfigurationService_GetGenerateCode_Handler,
		},
		{
			MethodName: "GetGenerateCustomerCode",
			Handler:    _ConfigurationService_GetGenerateCustomerCode_Handler,
		},
		{
			MethodName: "GetGenerateReferralCode",
			Handler:    _ConfigurationService_GetGenerateReferralCode_Handler,
		},
		{
			MethodName: "GetGlossaryList",
			Handler:    _ConfigurationService_GetGlossaryList_Handler,
		},
		{
			MethodName: "GetGlossaryDetail",
			Handler:    _ConfigurationService_GetGlossaryDetail_Handler,
		},
		{
			MethodName: "GetConfigAppList",
			Handler:    _ConfigurationService_GetConfigAppList_Handler,
		},
		{
			MethodName: "GetConfigAppDetail",
			Handler:    _ConfigurationService_GetConfigAppDetail_Handler,
		},
		{
			MethodName: "GetWrtDetail",
			Handler:    _ConfigurationService_GetWrtDetail_Handler,
		},
		{
			MethodName: "GetWrtIdGP",
			Handler:    _ConfigurationService_GetWrtIdGP_Handler,
		},
		{
			MethodName: "GetWrtList",
			Handler:    _ConfigurationService_GetWrtList_Handler,
		},
		{
			MethodName: "GetRegionPolicyDetail",
			Handler:    _ConfigurationService_GetRegionPolicyDetail_Handler,
		},
		{
			MethodName: "GetRegionPolicyList",
			Handler:    _ConfigurationService_GetRegionPolicyList_Handler,
		},
		{
			MethodName: "GetDayOffDetail",
			Handler:    _ConfigurationService_GetDayOffDetail_Handler,
		},
		{
			MethodName: "GetDayOffList",
			Handler:    _ConfigurationService_GetDayOffList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/configuration_service/configuration_service.proto",
}
