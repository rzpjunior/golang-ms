// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.23.4
// source: proto/sales_service/sales_service.proto

package sales_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SalesServiceClient is the client API for SalesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SalesServiceClient interface {
	GetSalesOrderList(ctx context.Context, in *GetSalesOrderListRequest, opts ...grpc.CallOption) (*GetSalesOrderListResponse, error)
	GetSalesOrderListMobile(ctx context.Context, in *GetSalesOrderListRequest, opts ...grpc.CallOption) (*GetSalesOrderListResponse, error)
	GetSalesOrderDetail(ctx context.Context, in *GetSalesOrderDetailRequest, opts ...grpc.CallOption) (*GetSalesOrderDetailResponse, error)
	GetSalesOrderItemList(ctx context.Context, in *GetSalesOrderItemListRequest, opts ...grpc.CallOption) (*GetSalesOrderItemListResponse, error)
	GetSalesOrderItemDetail(ctx context.Context, in *GetSalesOrderItemDetailRequest, opts ...grpc.CallOption) (*GetSalesOrderItemDetailResponse, error)
	CreateSalesOrder(ctx context.Context, in *CreateSalesOrderRequest, opts ...grpc.CallOption) (*CreateSalesOrderResponse, error)
	UpdateSalesOrder(ctx context.Context, in *UpdateSalesOrderRequest, opts ...grpc.CallOption) (*UpdateSalesOrderResponse, error)
	GetSalesOrderFeedbackList(ctx context.Context, in *GetSalesOrderFeedbackListRequest, opts ...grpc.CallOption) (*GetSalesOrderFeedbackListResponse, error)
	// rpc GetSalesOrderFeedbackDetail(GetSalesOrderFeedbackDetailRequest) returns (GetSalesOrderFeedbackDetailResponse){}
	CreateSalesOrderFeedback(ctx context.Context, in *CreateSalesOrderFeedbackRequest, opts ...grpc.CallOption) (*CreateSalesOrderFeedbackResponse, error)
	// Payment method
	GetPaymentMethodList(ctx context.Context, in *GetPaymentMethodListRequest, opts ...grpc.CallOption) (*GetPaymentMethodListResponse, error)
	// payment channel
	GetPaymentChannelList(ctx context.Context, in *GetPaymentChannelListRequest, opts ...grpc.CallOption) (*GetPaymentChannelListResponse, error)
	// payment group comb
	GetPaymentGroupCombList(ctx context.Context, in *GetPaymentGroupCombListRequest, opts ...grpc.CallOption) (*GetPaymentGroupCombListResponse, error)
	GetSalesInvoiceGPMobileList(ctx context.Context, in *GetSalesInvoiceGPMobileListRequest, opts ...grpc.CallOption) (*GetSalesInvoiceGPMobileListResponse, error)
	GetSalesOrderListCronJob(ctx context.Context, in *GetSalesOrderListCronjobRequest, opts ...grpc.CallOption) (*GetSalesOrderListCronjobResponse, error)
	UpdateSalesOrderRemindPayment(ctx context.Context, in *UpdateSalesOrderRemindPaymentRequest, opts ...grpc.CallOption) (*UpdateSalesOrderRemindPaymentResponse, error)
	ExpiredSalesOrder(ctx context.Context, in *ExpiredSalesOrderRequest, opts ...grpc.CallOption) (*ExpiredSalesOrderResponse, error)
	CreateSalesOrderPaid(ctx context.Context, in *CreateSalesOrderPaidRequest, opts ...grpc.CallOption) (*CreateSalesOrderPaidResponse, error)
	// delta print sales invoice and sales payment
	GetDeltaPrintSiEdnDetail(ctx context.Context, in *GetDeltaPrintSiEdnDetailRequest, opts ...grpc.CallOption) (*GetDeltaPrintSiEdnDetailResponse, error)
	GetDeltaPrintSpEdnDetail(ctx context.Context, in *GetDeltaPrintSpEdnDetailRequest, opts ...grpc.CallOption) (*GetDeltaPrintSpEdnDetailResponse, error)
	CreateDeltaPrintSiEdn(ctx context.Context, in *CreateDeltaPrintSiEdnRequest, opts ...grpc.CallOption) (*CreateDeltaPrintSiEdnResponse, error)
	UpdateDeltaPrintSiEdn(ctx context.Context, in *UpdateDeltaPrintSiEdnRequest, opts ...grpc.CallOption) (*UpdateDeltaPrintSiEdnResponse, error)
	CreateDeltaPrintSpEdn(ctx context.Context, in *CreateDeltaPrintSpEdnRequest, opts ...grpc.CallOption) (*CreateDeltaPrintSpEdnResponse, error)
	UpdateDeltaPrintSpEdn(ctx context.Context, in *UpdateDeltaPrintSpEdnRequest, opts ...grpc.CallOption) (*UpdateDeltaPrintSpEdnResponse, error)
}

type salesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSalesServiceClient(cc grpc.ClientConnInterface) SalesServiceClient {
	return &salesServiceClient{cc}
}

func (c *salesServiceClient) GetSalesOrderList(ctx context.Context, in *GetSalesOrderListRequest, opts ...grpc.CallOption) (*GetSalesOrderListResponse, error) {
	out := new(GetSalesOrderListResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetSalesOrderList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetSalesOrderListMobile(ctx context.Context, in *GetSalesOrderListRequest, opts ...grpc.CallOption) (*GetSalesOrderListResponse, error) {
	out := new(GetSalesOrderListResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetSalesOrderListMobile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetSalesOrderDetail(ctx context.Context, in *GetSalesOrderDetailRequest, opts ...grpc.CallOption) (*GetSalesOrderDetailResponse, error) {
	out := new(GetSalesOrderDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetSalesOrderDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetSalesOrderItemList(ctx context.Context, in *GetSalesOrderItemListRequest, opts ...grpc.CallOption) (*GetSalesOrderItemListResponse, error) {
	out := new(GetSalesOrderItemListResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetSalesOrderItemList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetSalesOrderItemDetail(ctx context.Context, in *GetSalesOrderItemDetailRequest, opts ...grpc.CallOption) (*GetSalesOrderItemDetailResponse, error) {
	out := new(GetSalesOrderItemDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetSalesOrderItemDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) CreateSalesOrder(ctx context.Context, in *CreateSalesOrderRequest, opts ...grpc.CallOption) (*CreateSalesOrderResponse, error) {
	out := new(CreateSalesOrderResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/CreateSalesOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) UpdateSalesOrder(ctx context.Context, in *UpdateSalesOrderRequest, opts ...grpc.CallOption) (*UpdateSalesOrderResponse, error) {
	out := new(UpdateSalesOrderResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/UpdateSalesOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetSalesOrderFeedbackList(ctx context.Context, in *GetSalesOrderFeedbackListRequest, opts ...grpc.CallOption) (*GetSalesOrderFeedbackListResponse, error) {
	out := new(GetSalesOrderFeedbackListResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetSalesOrderFeedbackList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) CreateSalesOrderFeedback(ctx context.Context, in *CreateSalesOrderFeedbackRequest, opts ...grpc.CallOption) (*CreateSalesOrderFeedbackResponse, error) {
	out := new(CreateSalesOrderFeedbackResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/CreateSalesOrderFeedback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetPaymentMethodList(ctx context.Context, in *GetPaymentMethodListRequest, opts ...grpc.CallOption) (*GetPaymentMethodListResponse, error) {
	out := new(GetPaymentMethodListResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetPaymentMethodList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetPaymentChannelList(ctx context.Context, in *GetPaymentChannelListRequest, opts ...grpc.CallOption) (*GetPaymentChannelListResponse, error) {
	out := new(GetPaymentChannelListResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetPaymentChannelList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetPaymentGroupCombList(ctx context.Context, in *GetPaymentGroupCombListRequest, opts ...grpc.CallOption) (*GetPaymentGroupCombListResponse, error) {
	out := new(GetPaymentGroupCombListResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetPaymentGroupCombList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetSalesInvoiceGPMobileList(ctx context.Context, in *GetSalesInvoiceGPMobileListRequest, opts ...grpc.CallOption) (*GetSalesInvoiceGPMobileListResponse, error) {
	out := new(GetSalesInvoiceGPMobileListResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetSalesInvoiceGPMobileList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetSalesOrderListCronJob(ctx context.Context, in *GetSalesOrderListCronjobRequest, opts ...grpc.CallOption) (*GetSalesOrderListCronjobResponse, error) {
	out := new(GetSalesOrderListCronjobResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetSalesOrderListCronJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) UpdateSalesOrderRemindPayment(ctx context.Context, in *UpdateSalesOrderRemindPaymentRequest, opts ...grpc.CallOption) (*UpdateSalesOrderRemindPaymentResponse, error) {
	out := new(UpdateSalesOrderRemindPaymentResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/UpdateSalesOrderRemindPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) ExpiredSalesOrder(ctx context.Context, in *ExpiredSalesOrderRequest, opts ...grpc.CallOption) (*ExpiredSalesOrderResponse, error) {
	out := new(ExpiredSalesOrderResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/ExpiredSalesOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) CreateSalesOrderPaid(ctx context.Context, in *CreateSalesOrderPaidRequest, opts ...grpc.CallOption) (*CreateSalesOrderPaidResponse, error) {
	out := new(CreateSalesOrderPaidResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/CreateSalesOrderPaid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetDeltaPrintSiEdnDetail(ctx context.Context, in *GetDeltaPrintSiEdnDetailRequest, opts ...grpc.CallOption) (*GetDeltaPrintSiEdnDetailResponse, error) {
	out := new(GetDeltaPrintSiEdnDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetDeltaPrintSiEdnDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) GetDeltaPrintSpEdnDetail(ctx context.Context, in *GetDeltaPrintSpEdnDetailRequest, opts ...grpc.CallOption) (*GetDeltaPrintSpEdnDetailResponse, error) {
	out := new(GetDeltaPrintSpEdnDetailResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/GetDeltaPrintSpEdnDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) CreateDeltaPrintSiEdn(ctx context.Context, in *CreateDeltaPrintSiEdnRequest, opts ...grpc.CallOption) (*CreateDeltaPrintSiEdnResponse, error) {
	out := new(CreateDeltaPrintSiEdnResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/CreateDeltaPrintSiEdn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) UpdateDeltaPrintSiEdn(ctx context.Context, in *UpdateDeltaPrintSiEdnRequest, opts ...grpc.CallOption) (*UpdateDeltaPrintSiEdnResponse, error) {
	out := new(UpdateDeltaPrintSiEdnResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/UpdateDeltaPrintSiEdn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) CreateDeltaPrintSpEdn(ctx context.Context, in *CreateDeltaPrintSpEdnRequest, opts ...grpc.CallOption) (*CreateDeltaPrintSpEdnResponse, error) {
	out := new(CreateDeltaPrintSpEdnResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/CreateDeltaPrintSpEdn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *salesServiceClient) UpdateDeltaPrintSpEdn(ctx context.Context, in *UpdateDeltaPrintSpEdnRequest, opts ...grpc.CallOption) (*UpdateDeltaPrintSpEdnResponse, error) {
	out := new(UpdateDeltaPrintSpEdnResponse)
	err := c.cc.Invoke(ctx, "/proto.sales_service.SalesService/UpdateDeltaPrintSpEdn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SalesServiceServer is the server API for SalesService service.
// All implementations should embed UnimplementedSalesServiceServer
// for forward compatibility
type SalesServiceServer interface {
	GetSalesOrderList(context.Context, *GetSalesOrderListRequest) (*GetSalesOrderListResponse, error)
	GetSalesOrderListMobile(context.Context, *GetSalesOrderListRequest) (*GetSalesOrderListResponse, error)
	GetSalesOrderDetail(context.Context, *GetSalesOrderDetailRequest) (*GetSalesOrderDetailResponse, error)
	GetSalesOrderItemList(context.Context, *GetSalesOrderItemListRequest) (*GetSalesOrderItemListResponse, error)
	GetSalesOrderItemDetail(context.Context, *GetSalesOrderItemDetailRequest) (*GetSalesOrderItemDetailResponse, error)
	CreateSalesOrder(context.Context, *CreateSalesOrderRequest) (*CreateSalesOrderResponse, error)
	UpdateSalesOrder(context.Context, *UpdateSalesOrderRequest) (*UpdateSalesOrderResponse, error)
	GetSalesOrderFeedbackList(context.Context, *GetSalesOrderFeedbackListRequest) (*GetSalesOrderFeedbackListResponse, error)
	// rpc GetSalesOrderFeedbackDetail(GetSalesOrderFeedbackDetailRequest) returns (GetSalesOrderFeedbackDetailResponse){}
	CreateSalesOrderFeedback(context.Context, *CreateSalesOrderFeedbackRequest) (*CreateSalesOrderFeedbackResponse, error)
	// Payment method
	GetPaymentMethodList(context.Context, *GetPaymentMethodListRequest) (*GetPaymentMethodListResponse, error)
	// payment channel
	GetPaymentChannelList(context.Context, *GetPaymentChannelListRequest) (*GetPaymentChannelListResponse, error)
	// payment group comb
	GetPaymentGroupCombList(context.Context, *GetPaymentGroupCombListRequest) (*GetPaymentGroupCombListResponse, error)
	GetSalesInvoiceGPMobileList(context.Context, *GetSalesInvoiceGPMobileListRequest) (*GetSalesInvoiceGPMobileListResponse, error)
	GetSalesOrderListCronJob(context.Context, *GetSalesOrderListCronjobRequest) (*GetSalesOrderListCronjobResponse, error)
	UpdateSalesOrderRemindPayment(context.Context, *UpdateSalesOrderRemindPaymentRequest) (*UpdateSalesOrderRemindPaymentResponse, error)
	ExpiredSalesOrder(context.Context, *ExpiredSalesOrderRequest) (*ExpiredSalesOrderResponse, error)
	CreateSalesOrderPaid(context.Context, *CreateSalesOrderPaidRequest) (*CreateSalesOrderPaidResponse, error)
	// delta print sales invoice and sales payment
	GetDeltaPrintSiEdnDetail(context.Context, *GetDeltaPrintSiEdnDetailRequest) (*GetDeltaPrintSiEdnDetailResponse, error)
	GetDeltaPrintSpEdnDetail(context.Context, *GetDeltaPrintSpEdnDetailRequest) (*GetDeltaPrintSpEdnDetailResponse, error)
	CreateDeltaPrintSiEdn(context.Context, *CreateDeltaPrintSiEdnRequest) (*CreateDeltaPrintSiEdnResponse, error)
	UpdateDeltaPrintSiEdn(context.Context, *UpdateDeltaPrintSiEdnRequest) (*UpdateDeltaPrintSiEdnResponse, error)
	CreateDeltaPrintSpEdn(context.Context, *CreateDeltaPrintSpEdnRequest) (*CreateDeltaPrintSpEdnResponse, error)
	UpdateDeltaPrintSpEdn(context.Context, *UpdateDeltaPrintSpEdnRequest) (*UpdateDeltaPrintSpEdnResponse, error)
}

// UnimplementedSalesServiceServer should be embedded to have forward compatible implementations.
type UnimplementedSalesServiceServer struct {
}

func (UnimplementedSalesServiceServer) GetSalesOrderList(context.Context, *GetSalesOrderListRequest) (*GetSalesOrderListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSalesOrderList not implemented")
}
func (UnimplementedSalesServiceServer) GetSalesOrderListMobile(context.Context, *GetSalesOrderListRequest) (*GetSalesOrderListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSalesOrderListMobile not implemented")
}
func (UnimplementedSalesServiceServer) GetSalesOrderDetail(context.Context, *GetSalesOrderDetailRequest) (*GetSalesOrderDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSalesOrderDetail not implemented")
}
func (UnimplementedSalesServiceServer) GetSalesOrderItemList(context.Context, *GetSalesOrderItemListRequest) (*GetSalesOrderItemListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSalesOrderItemList not implemented")
}
func (UnimplementedSalesServiceServer) GetSalesOrderItemDetail(context.Context, *GetSalesOrderItemDetailRequest) (*GetSalesOrderItemDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSalesOrderItemDetail not implemented")
}
func (UnimplementedSalesServiceServer) CreateSalesOrder(context.Context, *CreateSalesOrderRequest) (*CreateSalesOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSalesOrder not implemented")
}
func (UnimplementedSalesServiceServer) UpdateSalesOrder(context.Context, *UpdateSalesOrderRequest) (*UpdateSalesOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSalesOrder not implemented")
}
func (UnimplementedSalesServiceServer) GetSalesOrderFeedbackList(context.Context, *GetSalesOrderFeedbackListRequest) (*GetSalesOrderFeedbackListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSalesOrderFeedbackList not implemented")
}
func (UnimplementedSalesServiceServer) CreateSalesOrderFeedback(context.Context, *CreateSalesOrderFeedbackRequest) (*CreateSalesOrderFeedbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSalesOrderFeedback not implemented")
}
func (UnimplementedSalesServiceServer) GetPaymentMethodList(context.Context, *GetPaymentMethodListRequest) (*GetPaymentMethodListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPaymentMethodList not implemented")
}
func (UnimplementedSalesServiceServer) GetPaymentChannelList(context.Context, *GetPaymentChannelListRequest) (*GetPaymentChannelListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPaymentChannelList not implemented")
}
func (UnimplementedSalesServiceServer) GetPaymentGroupCombList(context.Context, *GetPaymentGroupCombListRequest) (*GetPaymentGroupCombListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPaymentGroupCombList not implemented")
}
func (UnimplementedSalesServiceServer) GetSalesInvoiceGPMobileList(context.Context, *GetSalesInvoiceGPMobileListRequest) (*GetSalesInvoiceGPMobileListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSalesInvoiceGPMobileList not implemented")
}
func (UnimplementedSalesServiceServer) GetSalesOrderListCronJob(context.Context, *GetSalesOrderListCronjobRequest) (*GetSalesOrderListCronjobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSalesOrderListCronJob not implemented")
}
func (UnimplementedSalesServiceServer) UpdateSalesOrderRemindPayment(context.Context, *UpdateSalesOrderRemindPaymentRequest) (*UpdateSalesOrderRemindPaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSalesOrderRemindPayment not implemented")
}
func (UnimplementedSalesServiceServer) ExpiredSalesOrder(context.Context, *ExpiredSalesOrderRequest) (*ExpiredSalesOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExpiredSalesOrder not implemented")
}
func (UnimplementedSalesServiceServer) CreateSalesOrderPaid(context.Context, *CreateSalesOrderPaidRequest) (*CreateSalesOrderPaidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSalesOrderPaid not implemented")
}
func (UnimplementedSalesServiceServer) GetDeltaPrintSiEdnDetail(context.Context, *GetDeltaPrintSiEdnDetailRequest) (*GetDeltaPrintSiEdnDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeltaPrintSiEdnDetail not implemented")
}
func (UnimplementedSalesServiceServer) GetDeltaPrintSpEdnDetail(context.Context, *GetDeltaPrintSpEdnDetailRequest) (*GetDeltaPrintSpEdnDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeltaPrintSpEdnDetail not implemented")
}
func (UnimplementedSalesServiceServer) CreateDeltaPrintSiEdn(context.Context, *CreateDeltaPrintSiEdnRequest) (*CreateDeltaPrintSiEdnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeltaPrintSiEdn not implemented")
}
func (UnimplementedSalesServiceServer) UpdateDeltaPrintSiEdn(context.Context, *UpdateDeltaPrintSiEdnRequest) (*UpdateDeltaPrintSiEdnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeltaPrintSiEdn not implemented")
}
func (UnimplementedSalesServiceServer) CreateDeltaPrintSpEdn(context.Context, *CreateDeltaPrintSpEdnRequest) (*CreateDeltaPrintSpEdnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDeltaPrintSpEdn not implemented")
}
func (UnimplementedSalesServiceServer) UpdateDeltaPrintSpEdn(context.Context, *UpdateDeltaPrintSpEdnRequest) (*UpdateDeltaPrintSpEdnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDeltaPrintSpEdn not implemented")
}

// UnsafeSalesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SalesServiceServer will
// result in compilation errors.
type UnsafeSalesServiceServer interface {
	mustEmbedUnimplementedSalesServiceServer()
}

func RegisterSalesServiceServer(s grpc.ServiceRegistrar, srv SalesServiceServer) {
	s.RegisterService(&SalesService_ServiceDesc, srv)
}

func _SalesService_GetSalesOrderList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSalesOrderListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetSalesOrderList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetSalesOrderList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetSalesOrderList(ctx, req.(*GetSalesOrderListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetSalesOrderListMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSalesOrderListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetSalesOrderListMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetSalesOrderListMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetSalesOrderListMobile(ctx, req.(*GetSalesOrderListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetSalesOrderDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSalesOrderDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetSalesOrderDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetSalesOrderDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetSalesOrderDetail(ctx, req.(*GetSalesOrderDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetSalesOrderItemList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSalesOrderItemListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetSalesOrderItemList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetSalesOrderItemList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetSalesOrderItemList(ctx, req.(*GetSalesOrderItemListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetSalesOrderItemDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSalesOrderItemDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetSalesOrderItemDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetSalesOrderItemDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetSalesOrderItemDetail(ctx, req.(*GetSalesOrderItemDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_CreateSalesOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSalesOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).CreateSalesOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/CreateSalesOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).CreateSalesOrder(ctx, req.(*CreateSalesOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_UpdateSalesOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSalesOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).UpdateSalesOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/UpdateSalesOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).UpdateSalesOrder(ctx, req.(*UpdateSalesOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetSalesOrderFeedbackList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSalesOrderFeedbackListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetSalesOrderFeedbackList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetSalesOrderFeedbackList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetSalesOrderFeedbackList(ctx, req.(*GetSalesOrderFeedbackListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_CreateSalesOrderFeedback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSalesOrderFeedbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).CreateSalesOrderFeedback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/CreateSalesOrderFeedback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).CreateSalesOrderFeedback(ctx, req.(*CreateSalesOrderFeedbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetPaymentMethodList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPaymentMethodListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetPaymentMethodList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetPaymentMethodList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetPaymentMethodList(ctx, req.(*GetPaymentMethodListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetPaymentChannelList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPaymentChannelListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetPaymentChannelList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetPaymentChannelList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetPaymentChannelList(ctx, req.(*GetPaymentChannelListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetPaymentGroupCombList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPaymentGroupCombListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetPaymentGroupCombList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetPaymentGroupCombList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetPaymentGroupCombList(ctx, req.(*GetPaymentGroupCombListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetSalesInvoiceGPMobileList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSalesInvoiceGPMobileListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetSalesInvoiceGPMobileList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetSalesInvoiceGPMobileList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetSalesInvoiceGPMobileList(ctx, req.(*GetSalesInvoiceGPMobileListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetSalesOrderListCronJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSalesOrderListCronjobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetSalesOrderListCronJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetSalesOrderListCronJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetSalesOrderListCronJob(ctx, req.(*GetSalesOrderListCronjobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_UpdateSalesOrderRemindPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSalesOrderRemindPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).UpdateSalesOrderRemindPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/UpdateSalesOrderRemindPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).UpdateSalesOrderRemindPayment(ctx, req.(*UpdateSalesOrderRemindPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_ExpiredSalesOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExpiredSalesOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).ExpiredSalesOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/ExpiredSalesOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).ExpiredSalesOrder(ctx, req.(*ExpiredSalesOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_CreateSalesOrderPaid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSalesOrderPaidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).CreateSalesOrderPaid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/CreateSalesOrderPaid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).CreateSalesOrderPaid(ctx, req.(*CreateSalesOrderPaidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetDeltaPrintSiEdnDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeltaPrintSiEdnDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetDeltaPrintSiEdnDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetDeltaPrintSiEdnDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetDeltaPrintSiEdnDetail(ctx, req.(*GetDeltaPrintSiEdnDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_GetDeltaPrintSpEdnDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeltaPrintSpEdnDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).GetDeltaPrintSpEdnDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/GetDeltaPrintSpEdnDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).GetDeltaPrintSpEdnDetail(ctx, req.(*GetDeltaPrintSpEdnDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_CreateDeltaPrintSiEdn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeltaPrintSiEdnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).CreateDeltaPrintSiEdn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/CreateDeltaPrintSiEdn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).CreateDeltaPrintSiEdn(ctx, req.(*CreateDeltaPrintSiEdnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_UpdateDeltaPrintSiEdn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeltaPrintSiEdnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).UpdateDeltaPrintSiEdn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/UpdateDeltaPrintSiEdn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).UpdateDeltaPrintSiEdn(ctx, req.(*UpdateDeltaPrintSiEdnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_CreateDeltaPrintSpEdn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeltaPrintSpEdnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).CreateDeltaPrintSpEdn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/CreateDeltaPrintSpEdn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).CreateDeltaPrintSpEdn(ctx, req.(*CreateDeltaPrintSpEdnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SalesService_UpdateDeltaPrintSpEdn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeltaPrintSpEdnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SalesServiceServer).UpdateDeltaPrintSpEdn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.sales_service.SalesService/UpdateDeltaPrintSpEdn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SalesServiceServer).UpdateDeltaPrintSpEdn(ctx, req.(*UpdateDeltaPrintSpEdnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SalesService_ServiceDesc is the grpc.ServiceDesc for SalesService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SalesService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.sales_service.SalesService",
	HandlerType: (*SalesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSalesOrderList",
			Handler:    _SalesService_GetSalesOrderList_Handler,
		},
		{
			MethodName: "GetSalesOrderListMobile",
			Handler:    _SalesService_GetSalesOrderListMobile_Handler,
		},
		{
			MethodName: "GetSalesOrderDetail",
			Handler:    _SalesService_GetSalesOrderDetail_Handler,
		},
		{
			MethodName: "GetSalesOrderItemList",
			Handler:    _SalesService_GetSalesOrderItemList_Handler,
		},
		{
			MethodName: "GetSalesOrderItemDetail",
			Handler:    _SalesService_GetSalesOrderItemDetail_Handler,
		},
		{
			MethodName: "CreateSalesOrder",
			Handler:    _SalesService_CreateSalesOrder_Handler,
		},
		{
			MethodName: "UpdateSalesOrder",
			Handler:    _SalesService_UpdateSalesOrder_Handler,
		},
		{
			MethodName: "GetSalesOrderFeedbackList",
			Handler:    _SalesService_GetSalesOrderFeedbackList_Handler,
		},
		{
			MethodName: "CreateSalesOrderFeedback",
			Handler:    _SalesService_CreateSalesOrderFeedback_Handler,
		},
		{
			MethodName: "GetPaymentMethodList",
			Handler:    _SalesService_GetPaymentMethodList_Handler,
		},
		{
			MethodName: "GetPaymentChannelList",
			Handler:    _SalesService_GetPaymentChannelList_Handler,
		},
		{
			MethodName: "GetPaymentGroupCombList",
			Handler:    _SalesService_GetPaymentGroupCombList_Handler,
		},
		{
			MethodName: "GetSalesInvoiceGPMobileList",
			Handler:    _SalesService_GetSalesInvoiceGPMobileList_Handler,
		},
		{
			MethodName: "GetSalesOrderListCronJob",
			Handler:    _SalesService_GetSalesOrderListCronJob_Handler,
		},
		{
			MethodName: "UpdateSalesOrderRemindPayment",
			Handler:    _SalesService_UpdateSalesOrderRemindPayment_Handler,
		},
		{
			MethodName: "ExpiredSalesOrder",
			Handler:    _SalesService_ExpiredSalesOrder_Handler,
		},
		{
			MethodName: "CreateSalesOrderPaid",
			Handler:    _SalesService_CreateSalesOrderPaid_Handler,
		},
		{
			MethodName: "GetDeltaPrintSiEdnDetail",
			Handler:    _SalesService_GetDeltaPrintSiEdnDetail_Handler,
		},
		{
			MethodName: "GetDeltaPrintSpEdnDetail",
			Handler:    _SalesService_GetDeltaPrintSpEdnDetail_Handler,
		},
		{
			MethodName: "CreateDeltaPrintSiEdn",
			Handler:    _SalesService_CreateDeltaPrintSiEdn_Handler,
		},
		{
			MethodName: "UpdateDeltaPrintSiEdn",
			Handler:    _SalesService_UpdateDeltaPrintSiEdn_Handler,
		},
		{
			MethodName: "CreateDeltaPrintSpEdn",
			Handler:    _SalesService_CreateDeltaPrintSpEdn_Handler,
		},
		{
			MethodName: "UpdateDeltaPrintSpEdn",
			Handler:    _SalesService_UpdateDeltaPrintSpEdn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/sales_service/sales_service.proto",
}
