// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: proto/sales_service/sales_service.proto

package sales_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SalesOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AddressIdGp         string                 `protobuf:"bytes,2,opt,name=address_id_gp,json=addressIdGp,proto3" json:"address_id_gp,omitempty"`
	CustomerIdGp        string                 `protobuf:"bytes,3,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
	TermPaymentSlsIdGp  string                 `protobuf:"bytes,4,opt,name=term_payment_sls_id_gp,json=termPaymentSlsIdGp,proto3" json:"term_payment_sls_id_gp,omitempty"`
	SubDistrictIdGp     string                 `protobuf:"bytes,5,opt,name=sub_district_id_gp,json=subDistrictIdGp,proto3" json:"sub_district_id_gp,omitempty"`
	SiteIdGp            string                 `protobuf:"bytes,6,opt,name=site_id_gp,json=siteIdGp,proto3" json:"site_id_gp,omitempty"`
	WrtIdGp             string                 `protobuf:"bytes,7,opt,name=wrt_id_gp,json=wrtIdGp,proto3" json:"wrt_id_gp,omitempty"`
	RegionIdGp          string                 `protobuf:"bytes,8,opt,name=region_id_gp,json=regionIdGp,proto3" json:"region_id_gp,omitempty"`
	PriceLevelIdGp      string                 `protobuf:"bytes,9,opt,name=price_level_id_gp,json=priceLevelIdGp,proto3" json:"price_level_id_gp,omitempty"`
	PaymentGroupSlsId   int32                  `protobuf:"varint,10,opt,name=payment_group_sls_id,json=paymentGroupSlsId,proto3" json:"payment_group_sls_id,omitempty"`
	ArchetypeIdGp       string                 `protobuf:"bytes,11,opt,name=archetype_id_gp,json=archetypeIdGp,proto3" json:"archetype_id_gp,omitempty"`
	SalesOrderNumber    string                 `protobuf:"bytes,12,opt,name=sales_order_number,json=salesOrderNumber,proto3" json:"sales_order_number,omitempty"`
	IntegrationCode     string                 `protobuf:"bytes,13,opt,name=integration_code,json=integrationCode,proto3" json:"integration_code,omitempty"`
	SalesOrderNumberGp  string                 `protobuf:"bytes,14,opt,name=sales_order_number_gp,json=salesOrderNumberGp,proto3" json:"sales_order_number_gp,omitempty"`
	Status              int32                  `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`
	RecognitionDate     *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=recognition_date,json=recognitionDate,proto3" json:"recognition_date,omitempty"`
	RequestsShipDate    *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=requests_ship_date,json=requestsShipDate,proto3" json:"requests_ship_date,omitempty"`
	BillingAddress      string                 `protobuf:"bytes,18,opt,name=billing_address,json=billingAddress,proto3" json:"billing_address,omitempty"`
	ShippingAddress     string                 `protobuf:"bytes,19,opt,name=shipping_address,json=shippingAddress,proto3" json:"shipping_address,omitempty"`
	ShippingAddressNote string                 `protobuf:"bytes,20,opt,name=shipping_address_note,json=shippingAddressNote,proto3" json:"shipping_address_note,omitempty"`
	DeliveryFee         float64                `protobuf:"fixed64,21,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	VouDiscAmount       float64                `protobuf:"fixed64,22,opt,name=vou_disc_amount,json=vouDiscAmount,proto3" json:"vou_disc_amount,omitempty"`
	CustomerPointLogId  int64                  `protobuf:"varint,23,opt,name=customer_point_log_id,json=customerPointLogId,proto3" json:"customer_point_log_id,omitempty"`
	EdenPointCampaignId int64                  `protobuf:"varint,24,opt,name=eden_point_campaign_id,json=edenPointCampaignId,proto3" json:"eden_point_campaign_id,omitempty"`
	TotalPrice          float64                `protobuf:"fixed64,25,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	TotalCharge         float64                `protobuf:"fixed64,26,opt,name=total_charge,json=totalCharge,proto3" json:"total_charge,omitempty"`
	TotalWeight         float64                `protobuf:"fixed64,27,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight,omitempty"`
	Note                string                 `protobuf:"bytes,28,opt,name=note,proto3" json:"note,omitempty"`
	PaymentReminder     int32                  `protobuf:"varint,29,opt,name=payment_reminder,json=paymentReminder,proto3" json:"payment_reminder,omitempty"`
	CancelType          int32                  `protobuf:"varint,30,opt,name=cancel_type,json=cancelType,proto3" json:"cancel_type,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy           int64                  `protobuf:"varint,32,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	ShippingMethodIdGp  string                 `protobuf:"bytes,33,opt,name=shipping_method_id_gp,json=shippingMethodIdGp,proto3" json:"shipping_method_id_gp,omitempty"`
	CustomerNameGp      string                 `protobuf:"bytes,34,opt,name=customer_name_gp,json=customerNameGp,proto3" json:"customer_name_gp,omitempty"`
	SalesOrderItem      []*SalesOrderItem      `protobuf:"bytes,35,rep,name=sales_order_item,json=salesOrderItem,proto3" json:"sales_order_item,omitempty"`
	SalesOrderVoucher   []*SalesOrderVoucher   `protobuf:"bytes,36,rep,name=sales_order_voucher,json=salesOrderVoucher,proto3" json:"sales_order_voucher,omitempty"`
	SalesOrderPayment   []*SalesOrderPayment   `protobuf:"bytes,37,rep,name=sales_order_payment,json=salesOrderPayment,proto3" json:"sales_order_payment,omitempty"`
}

func (x *SalesOrder) Reset() {
	*x = SalesOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrder) ProtoMessage() {}

func (x *SalesOrder) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrder.ProtoReflect.Descriptor instead.
func (*SalesOrder) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{0}
}

func (x *SalesOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SalesOrder) GetAddressIdGp() string {
	if x != nil {
		return x.AddressIdGp
	}
	return ""
}

func (x *SalesOrder) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

func (x *SalesOrder) GetTermPaymentSlsIdGp() string {
	if x != nil {
		return x.TermPaymentSlsIdGp
	}
	return ""
}

func (x *SalesOrder) GetSubDistrictIdGp() string {
	if x != nil {
		return x.SubDistrictIdGp
	}
	return ""
}

func (x *SalesOrder) GetSiteIdGp() string {
	if x != nil {
		return x.SiteIdGp
	}
	return ""
}

func (x *SalesOrder) GetWrtIdGp() string {
	if x != nil {
		return x.WrtIdGp
	}
	return ""
}

func (x *SalesOrder) GetRegionIdGp() string {
	if x != nil {
		return x.RegionIdGp
	}
	return ""
}

func (x *SalesOrder) GetPriceLevelIdGp() string {
	if x != nil {
		return x.PriceLevelIdGp
	}
	return ""
}

func (x *SalesOrder) GetPaymentGroupSlsId() int32 {
	if x != nil {
		return x.PaymentGroupSlsId
	}
	return 0
}

func (x *SalesOrder) GetArchetypeIdGp() string {
	if x != nil {
		return x.ArchetypeIdGp
	}
	return ""
}

func (x *SalesOrder) GetSalesOrderNumber() string {
	if x != nil {
		return x.SalesOrderNumber
	}
	return ""
}

func (x *SalesOrder) GetIntegrationCode() string {
	if x != nil {
		return x.IntegrationCode
	}
	return ""
}

func (x *SalesOrder) GetSalesOrderNumberGp() string {
	if x != nil {
		return x.SalesOrderNumberGp
	}
	return ""
}

func (x *SalesOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SalesOrder) GetRecognitionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.RecognitionDate
	}
	return nil
}

func (x *SalesOrder) GetRequestsShipDate() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestsShipDate
	}
	return nil
}

func (x *SalesOrder) GetBillingAddress() string {
	if x != nil {
		return x.BillingAddress
	}
	return ""
}

func (x *SalesOrder) GetShippingAddress() string {
	if x != nil {
		return x.ShippingAddress
	}
	return ""
}

func (x *SalesOrder) GetShippingAddressNote() string {
	if x != nil {
		return x.ShippingAddressNote
	}
	return ""
}

func (x *SalesOrder) GetDeliveryFee() float64 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *SalesOrder) GetVouDiscAmount() float64 {
	if x != nil {
		return x.VouDiscAmount
	}
	return 0
}

func (x *SalesOrder) GetCustomerPointLogId() int64 {
	if x != nil {
		return x.CustomerPointLogId
	}
	return 0
}

func (x *SalesOrder) GetEdenPointCampaignId() int64 {
	if x != nil {
		return x.EdenPointCampaignId
	}
	return 0
}

func (x *SalesOrder) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *SalesOrder) GetTotalCharge() float64 {
	if x != nil {
		return x.TotalCharge
	}
	return 0
}

func (x *SalesOrder) GetTotalWeight() float64 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *SalesOrder) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *SalesOrder) GetPaymentReminder() int32 {
	if x != nil {
		return x.PaymentReminder
	}
	return 0
}

func (x *SalesOrder) GetCancelType() int32 {
	if x != nil {
		return x.CancelType
	}
	return 0
}

func (x *SalesOrder) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SalesOrder) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *SalesOrder) GetShippingMethodIdGp() string {
	if x != nil {
		return x.ShippingMethodIdGp
	}
	return ""
}

func (x *SalesOrder) GetCustomerNameGp() string {
	if x != nil {
		return x.CustomerNameGp
	}
	return ""
}

func (x *SalesOrder) GetSalesOrderItem() []*SalesOrderItem {
	if x != nil {
		return x.SalesOrderItem
	}
	return nil
}

func (x *SalesOrder) GetSalesOrderVoucher() []*SalesOrderVoucher {
	if x != nil {
		return x.SalesOrderVoucher
	}
	return nil
}

func (x *SalesOrder) GetSalesOrderPayment() []*SalesOrderPayment {
	if x != nil {
		return x.SalesOrderPayment
	}
	return nil
}

type GetSalesOrderListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit           int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset          int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status          []int32                `protobuf:"varint,3,rep,packed,name=status,proto3" json:"status,omitempty"`
	Search          string                 `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy         string                 `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	AddressIdGp     string                 `protobuf:"bytes,6,opt,name=address_id_gp,json=addressIdGp,proto3" json:"address_id_gp,omitempty"`
	CustomerIdGp    string                 `protobuf:"bytes,7,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
	SiteIdGp        string                 `protobuf:"bytes,9,opt,name=site_id_gp,json=siteIdGp,proto3" json:"site_id_gp,omitempty"`
	OrderDateFrom   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=order_date_from,json=orderDateFrom,proto3" json:"order_date_from,omitempty"`
	OrderDateTo     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=order_date_to,json=orderDateTo,proto3" json:"order_date_to,omitempty"`
	Type            int64                  `protobuf:"varint,12,opt,name=type,proto3" json:"type,omitempty"`
	Category        int64                  `protobuf:"varint,13,opt,name=category,proto3" json:"category,omitempty"`
	PaymentReminder int32                  `protobuf:"varint,14,opt,name=payment_reminder,json=paymentReminder,proto3" json:"payment_reminder,omitempty"`
	PaymentTermIdGp string                 `protobuf:"bytes,15,opt,name=payment_term_id_gp,json=paymentTermIdGp,proto3" json:"payment_term_id_gp,omitempty"`
}

func (x *GetSalesOrderListRequest) Reset() {
	*x = GetSalesOrderListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderListRequest) ProtoMessage() {}

func (x *GetSalesOrderListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderListRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderListRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetSalesOrderListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSalesOrderListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSalesOrderListRequest) GetStatus() []int32 {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetSalesOrderListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetSalesOrderListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetSalesOrderListRequest) GetAddressIdGp() string {
	if x != nil {
		return x.AddressIdGp
	}
	return ""
}

func (x *GetSalesOrderListRequest) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

func (x *GetSalesOrderListRequest) GetSiteIdGp() string {
	if x != nil {
		return x.SiteIdGp
	}
	return ""
}

func (x *GetSalesOrderListRequest) GetOrderDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.OrderDateFrom
	}
	return nil
}

func (x *GetSalesOrderListRequest) GetOrderDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.OrderDateTo
	}
	return nil
}

func (x *GetSalesOrderListRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetSalesOrderListRequest) GetCategory() int64 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *GetSalesOrderListRequest) GetPaymentReminder() int32 {
	if x != nil {
		return x.PaymentReminder
	}
	return 0
}

func (x *GetSalesOrderListRequest) GetPaymentTermIdGp() string {
	if x != nil {
		return x.PaymentTermIdGp
	}
	return ""
}

type GetSalesOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message         string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data            []*SalesOrder `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	PageNumber      int32         `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	PageSize        int32         `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	TotalPages      int32         `protobuf:"varint,6,opt,name=totalPages,proto3" json:"totalPages,omitempty"`
	TotalRecords    int32         `protobuf:"varint,7,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
	PaymentReminder int32         `protobuf:"varint,8,opt,name=payment_reminder,json=paymentReminder,proto3" json:"payment_reminder,omitempty"`
}

func (x *GetSalesOrderListResponse) Reset() {
	*x = GetSalesOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderListResponse) ProtoMessage() {}

func (x *GetSalesOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderListResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderListResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetSalesOrderListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesOrderListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesOrderListResponse) GetData() []*SalesOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSalesOrderListResponse) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetSalesOrderListResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetSalesOrderListResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *GetSalesOrderListResponse) GetTotalRecords() int32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

func (x *GetSalesOrderListResponse) GetPaymentReminder() int32 {
	if x != nil {
		return x.PaymentReminder
	}
	return 0
}

type GetSalesOrderDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code               string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	CustomerId         int64  `protobuf:"varint,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerIdGp       string `protobuf:"bytes,4,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
	PaymentReminder    int32  `protobuf:"varint,5,opt,name=payment_reminder,json=paymentReminder,proto3" json:"payment_reminder,omitempty"`
	SalesOrderNumberGp string `protobuf:"bytes,6,opt,name=sales_order_number_gp,json=salesOrderNumberGp,proto3" json:"sales_order_number_gp,omitempty"`
}

func (x *GetSalesOrderDetailRequest) Reset() {
	*x = GetSalesOrderDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderDetailRequest) ProtoMessage() {}

func (x *GetSalesOrderDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderDetailRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetSalesOrderDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSalesOrderDetailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetSalesOrderDetailRequest) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *GetSalesOrderDetailRequest) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

func (x *GetSalesOrderDetailRequest) GetPaymentReminder() int32 {
	if x != nil {
		return x.PaymentReminder
	}
	return 0
}

func (x *GetSalesOrderDetailRequest) GetSalesOrderNumberGp() string {
	if x != nil {
		return x.SalesOrderNumberGp
	}
	return ""
}

type GetSalesOrderDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SalesOrder `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesOrderDetailResponse) Reset() {
	*x = GetSalesOrderDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderDetailResponse) ProtoMessage() {}

func (x *GetSalesOrderDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderDetailResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetSalesOrderDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesOrderDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesOrderDetailResponse) GetData() *SalesOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

type SalesOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SalesOrderId     int64   `protobuf:"varint,2,opt,name=sales_order_id,json=salesOrderId,proto3" json:"sales_order_id,omitempty"`
	ItemIdGp         string  `protobuf:"bytes,3,opt,name=item_id_gp,json=itemIdGp,proto3" json:"item_id_gp,omitempty"`
	ItemName         string  `protobuf:"bytes,4,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	PriceTieringIdGp string  `protobuf:"bytes,5,opt,name=price_tiering_id_gp,json=priceTieringIdGp,proto3" json:"price_tiering_id_gp,omitempty"`
	OrderQty         float64 `protobuf:"fixed64,6,opt,name=order_qty,json=orderQty,proto3" json:"order_qty,omitempty"`
	UnitPrice        float64 `protobuf:"fixed64,7,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	UomIdGp          string  `protobuf:"bytes,8,opt,name=uom_id_gp,json=uomIdGp,proto3" json:"uom_id_gp,omitempty"`
	UomName          string  `protobuf:"bytes,9,opt,name=uom_name,json=uomName,proto3" json:"uom_name,omitempty"`
	Subtotal         float64 `protobuf:"fixed64,10,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	Weight           float64 `protobuf:"fixed64,11,opt,name=weight,proto3" json:"weight,omitempty"`
	ImageUrl         string  `protobuf:"bytes,12,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *SalesOrderItem) Reset() {
	*x = SalesOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrderItem) ProtoMessage() {}

func (x *SalesOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrderItem.ProtoReflect.Descriptor instead.
func (*SalesOrderItem) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{5}
}

func (x *SalesOrderItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SalesOrderItem) GetSalesOrderId() int64 {
	if x != nil {
		return x.SalesOrderId
	}
	return 0
}

func (x *SalesOrderItem) GetItemIdGp() string {
	if x != nil {
		return x.ItemIdGp
	}
	return ""
}

func (x *SalesOrderItem) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *SalesOrderItem) GetPriceTieringIdGp() string {
	if x != nil {
		return x.PriceTieringIdGp
	}
	return ""
}

func (x *SalesOrderItem) GetOrderQty() float64 {
	if x != nil {
		return x.OrderQty
	}
	return 0
}

func (x *SalesOrderItem) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *SalesOrderItem) GetUomIdGp() string {
	if x != nil {
		return x.UomIdGp
	}
	return ""
}

func (x *SalesOrderItem) GetUomName() string {
	if x != nil {
		return x.UomName
	}
	return ""
}

func (x *SalesOrderItem) GetSubtotal() float64 {
	if x != nil {
		return x.Subtotal
	}
	return 0
}

func (x *SalesOrderItem) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *SalesOrderItem) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type GetSalesOrderItemListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit        int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset       int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status       int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search       string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy      string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	SalesOrderId int64  `protobuf:"varint,6,opt,name=sales_order_id,json=salesOrderId,proto3" json:"sales_order_id,omitempty"`
	ItemId       int64  `protobuf:"varint,7,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *GetSalesOrderItemListRequest) Reset() {
	*x = GetSalesOrderItemListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderItemListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderItemListRequest) ProtoMessage() {}

func (x *GetSalesOrderItemListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderItemListRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderItemListRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetSalesOrderItemListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSalesOrderItemListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSalesOrderItemListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSalesOrderItemListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetSalesOrderItemListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetSalesOrderItemListRequest) GetSalesOrderId() int64 {
	if x != nil {
		return x.SalesOrderId
	}
	return 0
}

func (x *GetSalesOrderItemListRequest) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type GetSalesOrderItemListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*SalesOrderItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesOrderItemListResponse) Reset() {
	*x = GetSalesOrderItemListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderItemListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderItemListResponse) ProtoMessage() {}

func (x *GetSalesOrderItemListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderItemListResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderItemListResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetSalesOrderItemListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesOrderItemListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesOrderItemListResponse) GetData() []*SalesOrderItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSalesOrderItemDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetSalesOrderItemDetailRequest) Reset() {
	*x = GetSalesOrderItemDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderItemDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderItemDetailRequest) ProtoMessage() {}

func (x *GetSalesOrderItemDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderItemDetailRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderItemDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetSalesOrderItemDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSalesOrderItemDetailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetSalesOrderItemDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SalesOrderItem `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesOrderItemDetailResponse) Reset() {
	*x = GetSalesOrderItemDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderItemDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderItemDetailResponse) ProtoMessage() {}

func (x *GetSalesOrderItemDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderItemDetailResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderItemDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetSalesOrderItemDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesOrderItemDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesOrderItemDetailResponse) GetData() *SalesOrderItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SalesOrder `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateSalesOrderRequest) Reset() {
	*x = CreateSalesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSalesOrderRequest) ProtoMessage() {}

func (x *CreateSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSalesOrderRequest) GetData() *SalesOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateSalesOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SalesOrder `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateSalesOrderResponse) Reset() {
	*x = CreateSalesOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSalesOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSalesOrderResponse) ProtoMessage() {}

func (x *CreateSalesOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSalesOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateSalesOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{11}
}

func (x *CreateSalesOrderResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateSalesOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSalesOrderResponse) GetData() *SalesOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        *SalesOrder `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	FieldUpdate []string    `protobuf:"bytes,3,rep,name=field_update,json=fieldUpdate,proto3" json:"field_update,omitempty"`
}

func (x *UpdateSalesOrderRequest) Reset() {
	*x = UpdateSalesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSalesOrderRequest) ProtoMessage() {}

func (x *UpdateSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdateSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateSalesOrderRequest) GetData() *SalesOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateSalesOrderRequest) GetFieldUpdate() []string {
	if x != nil {
		return x.FieldUpdate
	}
	return nil
}

type UpdateSalesOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateSalesOrderResponse) Reset() {
	*x = UpdateSalesOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSalesOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSalesOrderResponse) ProtoMessage() {}

func (x *UpdateSalesOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSalesOrderResponse.ProtoReflect.Descriptor instead.
func (*UpdateSalesOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateSalesOrderResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateSalesOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SalesOrderFeedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SalesOrderCode string                 `protobuf:"bytes,2,opt,name=sales_order_code,json=salesOrderCode,proto3" json:"sales_order_code,omitempty"`
	DeliveryDate   string                 `protobuf:"bytes,3,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	RatingScore    int32                  `protobuf:"varint,4,opt,name=rating_score,json=ratingScore,proto3" json:"rating_score,omitempty"`
	Tags           string                 `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
	Description    string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	ToBeContacted  int32                  `protobuf:"varint,7,opt,name=to_be_contacted,json=toBeContacted,proto3" json:"to_be_contacted,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TotalCharge    float64                `protobuf:"fixed64,9,opt,name=total_charge,json=totalCharge,proto3" json:"total_charge,omitempty"`
	SalesOrderId   int64                  `protobuf:"varint,10,opt,name=sales_order_id,json=salesOrderId,proto3" json:"sales_order_id,omitempty"`
	CustomerId     int64                  `protobuf:"varint,11,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *SalesOrderFeedback) Reset() {
	*x = SalesOrderFeedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesOrderFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrderFeedback) ProtoMessage() {}

func (x *SalesOrderFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrderFeedback.ProtoReflect.Descriptor instead.
func (*SalesOrderFeedback) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{14}
}

func (x *SalesOrderFeedback) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SalesOrderFeedback) GetSalesOrderCode() string {
	if x != nil {
		return x.SalesOrderCode
	}
	return ""
}

func (x *SalesOrderFeedback) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *SalesOrderFeedback) GetRatingScore() int32 {
	if x != nil {
		return x.RatingScore
	}
	return 0
}

func (x *SalesOrderFeedback) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *SalesOrderFeedback) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SalesOrderFeedback) GetToBeContacted() int32 {
	if x != nil {
		return x.ToBeContacted
	}
	return 0
}

func (x *SalesOrderFeedback) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SalesOrderFeedback) GetTotalCharge() float64 {
	if x != nil {
		return x.TotalCharge
	}
	return 0
}

func (x *SalesOrderFeedback) GetSalesOrderId() int64 {
	if x != nil {
		return x.SalesOrderId
	}
	return 0
}

func (x *SalesOrderFeedback) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

type GetSalesOrderFeedbackListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesOrderCode string `protobuf:"bytes,1,opt,name=sales_order_code,json=salesOrderCode,proto3" json:"sales_order_code,omitempty"`
	DeliveryDate   string `protobuf:"bytes,2,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	SalesOrderId   int64  `protobuf:"varint,3,opt,name=sales_order_id,json=salesOrderId,proto3" json:"sales_order_id,omitempty"`
	CustomerId     int64  `protobuf:"varint,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	FeedbackType   int64  `protobuf:"varint,5,opt,name=feedback_type,json=feedbackType,proto3" json:"feedback_type,omitempty"`
	Offset         int64  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit          int64  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetSalesOrderFeedbackListRequest) Reset() {
	*x = GetSalesOrderFeedbackListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderFeedbackListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderFeedbackListRequest) ProtoMessage() {}

func (x *GetSalesOrderFeedbackListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderFeedbackListRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderFeedbackListRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetSalesOrderFeedbackListRequest) GetSalesOrderCode() string {
	if x != nil {
		return x.SalesOrderCode
	}
	return ""
}

func (x *GetSalesOrderFeedbackListRequest) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *GetSalesOrderFeedbackListRequest) GetSalesOrderId() int64 {
	if x != nil {
		return x.SalesOrderId
	}
	return 0
}

func (x *GetSalesOrderFeedbackListRequest) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *GetSalesOrderFeedbackListRequest) GetFeedbackType() int64 {
	if x != nil {
		return x.FeedbackType
	}
	return 0
}

func (x *GetSalesOrderFeedbackListRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSalesOrderFeedbackListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetSalesOrderFeedbackListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*SalesOrderFeedback `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesOrderFeedbackListResponse) Reset() {
	*x = GetSalesOrderFeedbackListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderFeedbackListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderFeedbackListResponse) ProtoMessage() {}

func (x *GetSalesOrderFeedbackListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderFeedbackListResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderFeedbackListResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetSalesOrderFeedbackListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesOrderFeedbackListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesOrderFeedbackListResponse) GetData() []*SalesOrderFeedback {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSalesOrderFeedbackDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesOrderCode string `protobuf:"bytes,1,opt,name=sales_order_code,json=salesOrderCode,proto3" json:"sales_order_code,omitempty"`
	DeliveryDate   string `protobuf:"bytes,2,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	SalesOrderId   int64  `protobuf:"varint,3,opt,name=sales_order_id,json=salesOrderId,proto3" json:"sales_order_id,omitempty"`
	CustomerId     int64  `protobuf:"varint,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *GetSalesOrderFeedbackDetailRequest) Reset() {
	*x = GetSalesOrderFeedbackDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderFeedbackDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderFeedbackDetailRequest) ProtoMessage() {}

func (x *GetSalesOrderFeedbackDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderFeedbackDetailRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderFeedbackDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetSalesOrderFeedbackDetailRequest) GetSalesOrderCode() string {
	if x != nil {
		return x.SalesOrderCode
	}
	return ""
}

func (x *GetSalesOrderFeedbackDetailRequest) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *GetSalesOrderFeedbackDetailRequest) GetSalesOrderId() int64 {
	if x != nil {
		return x.SalesOrderId
	}
	return 0
}

func (x *GetSalesOrderFeedbackDetailRequest) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

type GetSalesOrderFeedbackDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SalesOrderFeedback `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesOrderFeedbackDetailResponse) Reset() {
	*x = GetSalesOrderFeedbackDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderFeedbackDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderFeedbackDetailResponse) ProtoMessage() {}

func (x *GetSalesOrderFeedbackDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderFeedbackDetailResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderFeedbackDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetSalesOrderFeedbackDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesOrderFeedbackDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesOrderFeedbackDetailResponse) GetData() *SalesOrderFeedback {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateSalesOrderFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *SalesOrderFeedback `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateSalesOrderFeedbackRequest) Reset() {
	*x = CreateSalesOrderFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSalesOrderFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSalesOrderFeedbackRequest) ProtoMessage() {}

func (x *CreateSalesOrderFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSalesOrderFeedbackRequest.ProtoReflect.Descriptor instead.
func (*CreateSalesOrderFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{19}
}

func (x *CreateSalesOrderFeedbackRequest) GetData() *SalesOrderFeedback {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateSalesOrderFeedbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SalesOrderFeedback `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateSalesOrderFeedbackResponse) Reset() {
	*x = CreateSalesOrderFeedbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSalesOrderFeedbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSalesOrderFeedbackResponse) ProtoMessage() {}

func (x *CreateSalesOrderFeedbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSalesOrderFeedbackResponse.ProtoReflect.Descriptor instead.
func (*CreateSalesOrderFeedbackResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{20}
}

func (x *CreateSalesOrderFeedbackResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateSalesOrderFeedbackResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSalesOrderFeedbackResponse) GetData() *SalesOrderFeedback {
	if x != nil {
		return x.Data
	}
	return nil
}

type PaymentMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code        string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Note        string `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	Status      int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Publish     int32  `protobuf:"varint,6,opt,name=publish,proto3" json:"publish,omitempty"`
	Maintenance int32  `protobuf:"varint,7,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
}

func (x *PaymentMethod) Reset() {
	*x = PaymentMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethod) ProtoMessage() {}

func (x *PaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethod.ProtoReflect.Descriptor instead.
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{21}
}

func (x *PaymentMethod) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PaymentMethod) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PaymentMethod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaymentMethod) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *PaymentMethod) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PaymentMethod) GetPublish() int32 {
	if x != nil {
		return x.Publish
	}
	return 0
}

func (x *PaymentMethod) GetMaintenance() int32 {
	if x != nil {
		return x.Maintenance
	}
	return 0
}

type GetPaymentMethodListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Publish     int32  `protobuf:"varint,2,opt,name=publish,proto3" json:"publish,omitempty"`
	Maintenance int32  `protobuf:"varint,3,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	Search      string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	Id          string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPaymentMethodListRequest) Reset() {
	*x = GetPaymentMethodListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentMethodListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentMethodListRequest) ProtoMessage() {}

func (x *GetPaymentMethodListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentMethodListRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentMethodListRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetPaymentMethodListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetPaymentMethodListRequest) GetPublish() int32 {
	if x != nil {
		return x.Publish
	}
	return 0
}

func (x *GetPaymentMethodListRequest) GetMaintenance() int32 {
	if x != nil {
		return x.Maintenance
	}
	return 0
}

func (x *GetPaymentMethodListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetPaymentMethodListRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPaymentMethodListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*PaymentMethod `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPaymentMethodListResponse) Reset() {
	*x = GetPaymentMethodListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentMethodListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentMethodListResponse) ProtoMessage() {}

func (x *GetPaymentMethodListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentMethodListResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentMethodListResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetPaymentMethodListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPaymentMethodListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPaymentMethodListResponse) GetData() []*PaymentMethod {
	if x != nil {
		return x.Data
	}
	return nil
}

type PaymentChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code            string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Value           string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl        string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Note            string `protobuf:"bytes,6,opt,name=note,proto3" json:"note,omitempty"`
	Status          int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	PublishIva      int32  `protobuf:"varint,8,opt,name=publish_iva,json=publishIva,proto3" json:"publish_iva,omitempty"`
	PublishFva      int32  `protobuf:"varint,9,opt,name=publish_fva,json=publishFva,proto3" json:"publish_fva,omitempty"`
	PaymentMethodId int64  `protobuf:"varint,10,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	PaymentGuideUrl string `protobuf:"bytes,11,opt,name=payment_guide_url,json=paymentGuideUrl,proto3" json:"payment_guide_url,omitempty"`
}

func (x *PaymentChannel) Reset() {
	*x = PaymentChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentChannel) ProtoMessage() {}

func (x *PaymentChannel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentChannel.ProtoReflect.Descriptor instead.
func (*PaymentChannel) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{24}
}

func (x *PaymentChannel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PaymentChannel) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PaymentChannel) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PaymentChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaymentChannel) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *PaymentChannel) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *PaymentChannel) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PaymentChannel) GetPublishIva() int32 {
	if x != nil {
		return x.PublishIva
	}
	return 0
}

func (x *PaymentChannel) GetPublishFva() int32 {
	if x != nil {
		return x.PublishFva
	}
	return 0
}

func (x *PaymentChannel) GetPaymentMethodId() int64 {
	if x != nil {
		return x.PaymentMethodId
	}
	return 0
}

func (x *PaymentChannel) GetPaymentGuideUrl() string {
	if x != nil {
		return x.PaymentGuideUrl
	}
	return ""
}

type GetPaymentChannelListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	PublishIva      int32  `protobuf:"varint,2,opt,name=publish_iva,json=publishIva,proto3" json:"publish_iva,omitempty"`
	PublishFva      int32  `protobuf:"varint,3,opt,name=publish_fva,json=publishFva,proto3" json:"publish_fva,omitempty"`
	PaymentMethodId int64  `protobuf:"varint,4,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	Value           string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetPaymentChannelListRequest) Reset() {
	*x = GetPaymentChannelListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentChannelListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentChannelListRequest) ProtoMessage() {}

func (x *GetPaymentChannelListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentChannelListRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentChannelListRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetPaymentChannelListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetPaymentChannelListRequest) GetPublishIva() int32 {
	if x != nil {
		return x.PublishIva
	}
	return 0
}

func (x *GetPaymentChannelListRequest) GetPublishFva() int32 {
	if x != nil {
		return x.PublishFva
	}
	return 0
}

func (x *GetPaymentChannelListRequest) GetPaymentMethodId() int64 {
	if x != nil {
		return x.PaymentMethodId
	}
	return 0
}

func (x *GetPaymentChannelListRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetPaymentChannelListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*PaymentChannel `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPaymentChannelListResponse) Reset() {
	*x = GetPaymentChannelListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentChannelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentChannelListResponse) ProtoMessage() {}

func (x *GetPaymentChannelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentChannelListResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentChannelListResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetPaymentChannelListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPaymentChannelListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPaymentChannelListResponse) GetData() []*PaymentChannel {
	if x != nil {
		return x.Data
	}
	return nil
}

type PaymentGroupComb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PaymentGroupSls string `protobuf:"bytes,2,opt,name=payment_group_sls,json=paymentGroupSls,proto3" json:"payment_group_sls,omitempty"`
	TermPaymentSls  string `protobuf:"bytes,3,opt,name=term_payment_sls,json=termPaymentSls,proto3" json:"term_payment_sls,omitempty"`
}

func (x *PaymentGroupComb) Reset() {
	*x = PaymentGroupComb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentGroupComb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentGroupComb) ProtoMessage() {}

func (x *PaymentGroupComb) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentGroupComb.ProtoReflect.Descriptor instead.
func (*PaymentGroupComb) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{27}
}

func (x *PaymentGroupComb) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PaymentGroupComb) GetPaymentGroupSls() string {
	if x != nil {
		return x.PaymentGroupSls
	}
	return ""
}

func (x *PaymentGroupComb) GetTermPaymentSls() string {
	if x != nil {
		return x.TermPaymentSls
	}
	return ""
}

type GetPaymentGroupCombListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentGroupSls string `protobuf:"bytes,1,opt,name=payment_group_sls,json=paymentGroupSls,proto3" json:"payment_group_sls,omitempty"`
	TermPaymentSls  string `protobuf:"bytes,2,opt,name=term_payment_sls,json=termPaymentSls,proto3" json:"term_payment_sls,omitempty"`
}

func (x *GetPaymentGroupCombListRequest) Reset() {
	*x = GetPaymentGroupCombListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGroupCombListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGroupCombListRequest) ProtoMessage() {}

func (x *GetPaymentGroupCombListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGroupCombListRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentGroupCombListRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetPaymentGroupCombListRequest) GetPaymentGroupSls() string {
	if x != nil {
		return x.PaymentGroupSls
	}
	return ""
}

func (x *GetPaymentGroupCombListRequest) GetTermPaymentSls() string {
	if x != nil {
		return x.TermPaymentSls
	}
	return ""
}

type GetPaymentGroupCombListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*PaymentGroupComb `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPaymentGroupCombListResponse) Reset() {
	*x = GetPaymentGroupCombListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentGroupCombListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentGroupCombListResponse) ProtoMessage() {}

func (x *GetPaymentGroupCombListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentGroupCombListResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentGroupCombListResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetPaymentGroupCombListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPaymentGroupCombListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPaymentGroupCombListResponse) GetData() []*PaymentGroupComb {
	if x != nil {
		return x.Data
	}
	return nil
}

type SalesInvoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceId         string  `protobuf:"bytes,2,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	OrderCode         string  `protobuf:"bytes,3,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`
	InvoiceCode       string  `protobuf:"bytes,4,opt,name=invoice_code,json=invoiceCode,proto3" json:"invoice_code,omitempty"`
	OrderDate         string  `protobuf:"bytes,5,opt,name=order_date,json=orderDate,proto3" json:"order_date,omitempty"`
	InvoiceDate       string  `protobuf:"bytes,6,opt,name=invoice_date,json=invoiceDate,proto3" json:"invoice_date,omitempty"`
	TotalPrice        float64 `protobuf:"fixed64,7,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	DeliveryFee       float64 `protobuf:"fixed64,8,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee,omitempty"`
	VoucherAmount     float64 `protobuf:"fixed64,9,opt,name=voucher_amount,json=voucherAmount,proto3" json:"voucher_amount,omitempty"`
	PointRedeemAmount float64 `protobuf:"fixed64,10,opt,name=point_redeem_amount,json=pointRedeemAmount,proto3" json:"point_redeem_amount,omitempty"`
	AdjustmentAmount  float64 `protobuf:"fixed64,11,opt,name=adjustment_amount,json=adjustmentAmount,proto3" json:"adjustment_amount,omitempty"`
	TotalCharge       float64 `protobuf:"fixed64,12,opt,name=total_charge,json=totalCharge,proto3" json:"total_charge,omitempty"`
}

func (x *SalesInvoice) Reset() {
	*x = SalesInvoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesInvoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesInvoice) ProtoMessage() {}

func (x *SalesInvoice) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesInvoice.ProtoReflect.Descriptor instead.
func (*SalesInvoice) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{30}
}

func (x *SalesInvoice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SalesInvoice) GetInvoiceId() string {
	if x != nil {
		return x.InvoiceId
	}
	return ""
}

func (x *SalesInvoice) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *SalesInvoice) GetInvoiceCode() string {
	if x != nil {
		return x.InvoiceCode
	}
	return ""
}

func (x *SalesInvoice) GetOrderDate() string {
	if x != nil {
		return x.OrderDate
	}
	return ""
}

func (x *SalesInvoice) GetInvoiceDate() string {
	if x != nil {
		return x.InvoiceDate
	}
	return ""
}

func (x *SalesInvoice) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *SalesInvoice) GetDeliveryFee() float64 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *SalesInvoice) GetVoucherAmount() float64 {
	if x != nil {
		return x.VoucherAmount
	}
	return 0
}

func (x *SalesInvoice) GetPointRedeemAmount() float64 {
	if x != nil {
		return x.PointRedeemAmount
	}
	return 0
}

func (x *SalesInvoice) GetAdjustmentAmount() float64 {
	if x != nil {
		return x.AdjustmentAmount
	}
	return 0
}

func (x *SalesInvoice) GetTotalCharge() float64 {
	if x != nil {
		return x.TotalCharge
	}
	return 0
}

type InvoicePayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PaymentId      string `protobuf:"bytes,2,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Code           string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	PaymentDate    string `protobuf:"bytes,4,opt,name=payment_date,json=paymentDate,proto3" json:"payment_date,omitempty"`
	PaymentMethod  string `protobuf:"bytes,5,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	PaymentTime    string `protobuf:"bytes,6,opt,name=payment_time,json=paymentTime,proto3" json:"payment_time,omitempty"`
	Amount         string `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
	PaymentChannel string `protobuf:"bytes,8,opt,name=payment_channel,json=paymentChannel,proto3" json:"payment_channel,omitempty"`
	Status         int32  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *InvoicePayment) Reset() {
	*x = InvoicePayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoicePayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoicePayment) ProtoMessage() {}

func (x *InvoicePayment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoicePayment.ProtoReflect.Descriptor instead.
func (*InvoicePayment) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{31}
}

func (x *InvoicePayment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvoicePayment) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *InvoicePayment) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *InvoicePayment) GetPaymentDate() string {
	if x != nil {
		return x.PaymentDate
	}
	return ""
}

func (x *InvoicePayment) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *InvoicePayment) GetPaymentTime() string {
	if x != nil {
		return x.PaymentTime
	}
	return ""
}

func (x *InvoicePayment) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *InvoicePayment) GetPaymentChannel() string {
	if x != nil {
		return x.PaymentChannel
	}
	return ""
}

func (x *InvoicePayment) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type InvoiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId             string  `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemName           string  `protobuf:"bytes,3,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	InvoiceQty         float64 `protobuf:"fixed64,4,opt,name=invoice_qty,json=invoiceQty,proto3" json:"invoice_qty,omitempty"`
	UomName            string  `protobuf:"bytes,5,opt,name=uom_name,json=uomName,proto3" json:"uom_name,omitempty"`
	UnitPrice          float64 `protobuf:"fixed64,6,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	Subtotal           float64 `protobuf:"fixed64,7,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	ItemDiscountAmount float64 `protobuf:"fixed64,8,opt,name=item_discount_amount,json=itemDiscountAmount,proto3" json:"item_discount_amount,omitempty"`
}

func (x *InvoiceItem) Reset() {
	*x = InvoiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceItem) ProtoMessage() {}

func (x *InvoiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceItem.ProtoReflect.Descriptor instead.
func (*InvoiceItem) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{32}
}

func (x *InvoiceItem) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *InvoiceItem) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *InvoiceItem) GetInvoiceQty() float64 {
	if x != nil {
		return x.InvoiceQty
	}
	return 0
}

func (x *InvoiceItem) GetUomName() string {
	if x != nil {
		return x.UomName
	}
	return ""
}

func (x *InvoiceItem) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *InvoiceItem) GetSubtotal() float64 {
	if x != nil {
		return x.Subtotal
	}
	return 0
}

func (x *InvoiceItem) GetItemDiscountAmount() float64 {
	if x != nil {
		return x.ItemDiscountAmount
	}
	return 0
}

type SalesInvoiceMobile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesInvoice   *SalesInvoice     `protobuf:"bytes,1,opt,name=sales_invoice,json=salesInvoice,proto3" json:"sales_invoice,omitempty"`
	InvoicePayment []*InvoicePayment `protobuf:"bytes,2,rep,name=invoice_payment,json=invoicePayment,proto3" json:"invoice_payment,omitempty"`
	InvoiceItem    []*InvoiceItem    `protobuf:"bytes,3,rep,name=invoice_item,json=invoiceItem,proto3" json:"invoice_item,omitempty"`
}

func (x *SalesInvoiceMobile) Reset() {
	*x = SalesInvoiceMobile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesInvoiceMobile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesInvoiceMobile) ProtoMessage() {}

func (x *SalesInvoiceMobile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesInvoiceMobile.ProtoReflect.Descriptor instead.
func (*SalesInvoiceMobile) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{33}
}

func (x *SalesInvoiceMobile) GetSalesInvoice() *SalesInvoice {
	if x != nil {
		return x.SalesInvoice
	}
	return nil
}

func (x *SalesInvoiceMobile) GetInvoicePayment() []*InvoicePayment {
	if x != nil {
		return x.InvoicePayment
	}
	return nil
}

func (x *SalesInvoiceMobile) GetInvoiceItem() []*InvoiceItem {
	if x != nil {
		return x.InvoiceItem
	}
	return nil
}

type GetSalesInvoiceGPMobileListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit         int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Custnumber    string `protobuf:"bytes,3,opt,name=custnumber,proto3" json:"custnumber,omitempty"`
	SiNumber      string `protobuf:"bytes,4,opt,name=si_number,json=siNumber,proto3" json:"si_number,omitempty"`
	Custname      string `protobuf:"bytes,5,opt,name=custname,proto3" json:"custname,omitempty"`
	Region        string `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	OrderChannel  string `protobuf:"bytes,7,opt,name=order_channel,json=orderChannel,proto3" json:"order_channel,omitempty"`
	SoCodeApps    string `protobuf:"bytes,8,opt,name=so_code_apps,json=soCodeApps,proto3" json:"so_code_apps,omitempty"`
	WrtId         string `protobuf:"bytes,9,opt,name=wrt_id,json=wrtId,proto3" json:"wrt_id,omitempty"`
	Locncode      string `protobuf:"bytes,10,opt,name=locncode,proto3" json:"locncode,omitempty"`
	Ordertype     string `protobuf:"bytes,11,opt,name=ordertype,proto3" json:"ordertype,omitempty"`
	SalespersonId string `protobuf:"bytes,12,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
	Status        string `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	SoDocdateFrom string `protobuf:"bytes,14,opt,name=so_docdate_from,json=soDocdateFrom,proto3" json:"so_docdate_from,omitempty"`
	SoDocdateTo   string `protobuf:"bytes,15,opt,name=so_docdate_to,json=soDocdateTo,proto3" json:"so_docdate_to,omitempty"`
	DocdateFrom   string `protobuf:"bytes,16,opt,name=docdate_from,json=docdateFrom,proto3" json:"docdate_from,omitempty"`
	DocdateTo     string `protobuf:"bytes,17,opt,name=docdate_to,json=docdateTo,proto3" json:"docdate_to,omitempty"`
	SoNumber      string `protobuf:"bytes,18,opt,name=so_number,json=soNumber,proto3" json:"so_number,omitempty"`
}

func (x *GetSalesInvoiceGPMobileListRequest) Reset() {
	*x = GetSalesInvoiceGPMobileListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesInvoiceGPMobileListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesInvoiceGPMobileListRequest) ProtoMessage() {}

func (x *GetSalesInvoiceGPMobileListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesInvoiceGPMobileListRequest.ProtoReflect.Descriptor instead.
func (*GetSalesInvoiceGPMobileListRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{34}
}

func (x *GetSalesInvoiceGPMobileListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSalesInvoiceGPMobileListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSalesInvoiceGPMobileListRequest) GetCustnumber() string {
	if x != nil {
		return x.Custnumber
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetSiNumber() string {
	if x != nil {
		return x.SiNumber
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetCustname() string {
	if x != nil {
		return x.Custname
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetOrderChannel() string {
	if x != nil {
		return x.OrderChannel
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetSoCodeApps() string {
	if x != nil {
		return x.SoCodeApps
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetWrtId() string {
	if x != nil {
		return x.WrtId
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetLocncode() string {
	if x != nil {
		return x.Locncode
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetOrdertype() string {
	if x != nil {
		return x.Ordertype
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetSalespersonId() string {
	if x != nil {
		return x.SalespersonId
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetSoDocdateFrom() string {
	if x != nil {
		return x.SoDocdateFrom
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetSoDocdateTo() string {
	if x != nil {
		return x.SoDocdateTo
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetDocdateFrom() string {
	if x != nil {
		return x.DocdateFrom
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetDocdateTo() string {
	if x != nil {
		return x.DocdateTo
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListRequest) GetSoNumber() string {
	if x != nil {
		return x.SoNumber
	}
	return ""
}

type GetSalesInvoiceGPMobileListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*SalesInvoiceMobile `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesInvoiceGPMobileListResponse) Reset() {
	*x = GetSalesInvoiceGPMobileListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesInvoiceGPMobileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesInvoiceGPMobileListResponse) ProtoMessage() {}

func (x *GetSalesInvoiceGPMobileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesInvoiceGPMobileListResponse.ProtoReflect.Descriptor instead.
func (*GetSalesInvoiceGPMobileListResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{35}
}

func (x *GetSalesInvoiceGPMobileListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesInvoiceGPMobileListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesInvoiceGPMobileListResponse) GetData() []*SalesInvoiceMobile {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSalesOrderListCronjobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status               []int32 `protobuf:"varint,1,rep,packed,name=status,proto3" json:"status,omitempty"`
	RegionIdGp           string  `protobuf:"bytes,2,opt,name=region_id_gp,json=regionIdGp,proto3" json:"region_id_gp,omitempty"`
	RequestsDeliveryDate string  `protobuf:"bytes,3,opt,name=requests_delivery_date,json=requestsDeliveryDate,proto3" json:"requests_delivery_date,omitempty"`
	PaymentReminder      int32   `protobuf:"varint,4,opt,name=payment_reminder,json=paymentReminder,proto3" json:"payment_reminder,omitempty"`
}

func (x *GetSalesOrderListCronjobRequest) Reset() {
	*x = GetSalesOrderListCronjobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderListCronjobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderListCronjobRequest) ProtoMessage() {}

func (x *GetSalesOrderListCronjobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderListCronjobRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderListCronjobRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetSalesOrderListCronjobRequest) GetStatus() []int32 {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetSalesOrderListCronjobRequest) GetRegionIdGp() string {
	if x != nil {
		return x.RegionIdGp
	}
	return ""
}

func (x *GetSalesOrderListCronjobRequest) GetRequestsDeliveryDate() string {
	if x != nil {
		return x.RequestsDeliveryDate
	}
	return ""
}

func (x *GetSalesOrderListCronjobRequest) GetPaymentReminder() int32 {
	if x != nil {
		return x.PaymentReminder
	}
	return 0
}

type GetSalesOrderListCronjobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message      string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data         []*SalesOrderCronjob `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	TotalRecords int32                `protobuf:"varint,4,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
}

func (x *GetSalesOrderListCronjobResponse) Reset() {
	*x = GetSalesOrderListCronjobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderListCronjobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderListCronjobResponse) ProtoMessage() {}

func (x *GetSalesOrderListCronjobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderListCronjobResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderListCronjobResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetSalesOrderListCronjobResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesOrderListCronjobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesOrderListCronjobResponse) GetData() []*SalesOrderCronjob {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSalesOrderListCronjobResponse) GetTotalRecords() int32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type SalesOrderCronjob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesOrderNumber string `protobuf:"bytes,1,opt,name=sales_order_number,json=salesOrderNumber,proto3" json:"sales_order_number,omitempty"`
	CustomerIdGp     string `protobuf:"bytes,2,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
	PaymentReminder  int32  `protobuf:"varint,3,opt,name=payment_reminder,json=paymentReminder,proto3" json:"payment_reminder,omitempty"`
	Id               int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SalesOrderCronjob) Reset() {
	*x = SalesOrderCronjob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesOrderCronjob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrderCronjob) ProtoMessage() {}

func (x *SalesOrderCronjob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrderCronjob.ProtoReflect.Descriptor instead.
func (*SalesOrderCronjob) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{38}
}

func (x *SalesOrderCronjob) GetSalesOrderNumber() string {
	if x != nil {
		return x.SalesOrderNumber
	}
	return ""
}

func (x *SalesOrderCronjob) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

func (x *SalesOrderCronjob) GetPaymentReminder() int32 {
	if x != nil {
		return x.PaymentReminder
	}
	return 0
}

func (x *SalesOrderCronjob) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateSalesOrderRemindPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesOrderId []int64 `protobuf:"varint,1,rep,packed,name=sales_order_id,json=salesOrderId,proto3" json:"sales_order_id,omitempty"`
}

func (x *UpdateSalesOrderRemindPaymentRequest) Reset() {
	*x = UpdateSalesOrderRemindPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSalesOrderRemindPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSalesOrderRemindPaymentRequest) ProtoMessage() {}

func (x *UpdateSalesOrderRemindPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSalesOrderRemindPaymentRequest.ProtoReflect.Descriptor instead.
func (*UpdateSalesOrderRemindPaymentRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateSalesOrderRemindPaymentRequest) GetSalesOrderId() []int64 {
	if x != nil {
		return x.SalesOrderId
	}
	return nil
}

type UpdateSalesOrderRemindPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateSalesOrderRemindPaymentResponse) Reset() {
	*x = UpdateSalesOrderRemindPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSalesOrderRemindPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSalesOrderRemindPaymentResponse) ProtoMessage() {}

func (x *UpdateSalesOrderRemindPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSalesOrderRemindPaymentResponse.ProtoReflect.Descriptor instead.
func (*UpdateSalesOrderRemindPaymentResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateSalesOrderRemindPaymentResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateSalesOrderRemindPaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ExpiredSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesOrderCode string `protobuf:"bytes,1,opt,name=sales_order_code,json=salesOrderCode,proto3" json:"sales_order_code,omitempty"`
}

func (x *ExpiredSalesOrderRequest) Reset() {
	*x = ExpiredSalesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpiredSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpiredSalesOrderRequest) ProtoMessage() {}

func (x *ExpiredSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpiredSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*ExpiredSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{41}
}

func (x *ExpiredSalesOrderRequest) GetSalesOrderCode() string {
	if x != nil {
		return x.SalesOrderCode
	}
	return ""
}

type ExpiredSalesOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CustomerIdGp string `protobuf:"bytes,3,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
}

func (x *ExpiredSalesOrderResponse) Reset() {
	*x = ExpiredSalesOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpiredSalesOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpiredSalesOrderResponse) ProtoMessage() {}

func (x *ExpiredSalesOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpiredSalesOrderResponse.ProtoReflect.Descriptor instead.
func (*ExpiredSalesOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{42}
}

func (x *ExpiredSalesOrderResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ExpiredSalesOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ExpiredSalesOrderResponse) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

type SalesOrderVoucher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SalesOrderId int64                  `protobuf:"varint,2,opt,name=sales_order_id,json=salesOrderId,proto3" json:"sales_order_id,omitempty"`
	VoucherIdGp  string                 `protobuf:"bytes,3,opt,name=voucher_id_gp,json=voucherIdGp,proto3" json:"voucher_id_gp,omitempty"`
	DiscAmount   float64                `protobuf:"fixed64,4,opt,name=disc_amount,json=discAmount,proto3" json:"disc_amount,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	VoucherType  int32                  `protobuf:"varint,6,opt,name=voucher_type,json=voucherType,proto3" json:"voucher_type,omitempty"`
}

func (x *SalesOrderVoucher) Reset() {
	*x = SalesOrderVoucher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesOrderVoucher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrderVoucher) ProtoMessage() {}

func (x *SalesOrderVoucher) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrderVoucher.ProtoReflect.Descriptor instead.
func (*SalesOrderVoucher) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{43}
}

func (x *SalesOrderVoucher) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SalesOrderVoucher) GetSalesOrderId() int64 {
	if x != nil {
		return x.SalesOrderId
	}
	return 0
}

func (x *SalesOrderVoucher) GetVoucherIdGp() string {
	if x != nil {
		return x.VoucherIdGp
	}
	return ""
}

func (x *SalesOrderVoucher) GetDiscAmount() float64 {
	if x != nil {
		return x.DiscAmount
	}
	return 0
}

func (x *SalesOrderVoucher) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SalesOrderVoucher) GetVoucherType() int32 {
	if x != nil {
		return x.VoucherType
	}
	return 0
}

type CreateSalesOrderPaidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoCodePaidXendit string  `protobuf:"bytes,1,opt,name=so_code_paid_xendit,json=soCodePaidXendit,proto3" json:"so_code_paid_xendit,omitempty"`
	Amount           float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CreateSalesOrderPaidRequest) Reset() {
	*x = CreateSalesOrderPaidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSalesOrderPaidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSalesOrderPaidRequest) ProtoMessage() {}

func (x *CreateSalesOrderPaidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSalesOrderPaidRequest.ProtoReflect.Descriptor instead.
func (*CreateSalesOrderPaidRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{44}
}

func (x *CreateSalesOrderPaidRequest) GetSoCodePaidXendit() string {
	if x != nil {
		return x.SoCodePaidXendit
	}
	return ""
}

func (x *CreateSalesOrderPaidRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CreateSalesOrderPaidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message      string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CustomerIdGp string `protobuf:"bytes,3,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
}

func (x *CreateSalesOrderPaidResponse) Reset() {
	*x = CreateSalesOrderPaidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSalesOrderPaidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSalesOrderPaidResponse) ProtoMessage() {}

func (x *CreateSalesOrderPaidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSalesOrderPaidResponse.ProtoReflect.Descriptor instead.
func (*CreateSalesOrderPaidResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{45}
}

func (x *CreateSalesOrderPaidResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateSalesOrderPaidResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSalesOrderPaidResponse) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

type SalesOrderPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SalesOrderId    int64  `protobuf:"varint,2,opt,name=sales_order_id,json=salesOrderId,proto3" json:"sales_order_id,omitempty"`
	CashReceiptIdGp string `protobuf:"bytes,3,opt,name=cash_receipt_id_gp,json=cashReceiptIdGp,proto3" json:"cash_receipt_id_gp,omitempty"`
	PaymentMethod   string `protobuf:"bytes,4,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	PaymentChannel  string `protobuf:"bytes,5,opt,name=payment_channel,json=paymentChannel,proto3" json:"payment_channel,omitempty"`
}

func (x *SalesOrderPayment) Reset() {
	*x = SalesOrderPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesOrderPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrderPayment) ProtoMessage() {}

func (x *SalesOrderPayment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrderPayment.ProtoReflect.Descriptor instead.
func (*SalesOrderPayment) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{46}
}

func (x *SalesOrderPayment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SalesOrderPayment) GetSalesOrderId() int64 {
	if x != nil {
		return x.SalesOrderId
	}
	return 0
}

func (x *SalesOrderPayment) GetCashReceiptIdGp() string {
	if x != nil {
		return x.CashReceiptIdGp
	}
	return ""
}

func (x *SalesOrderPayment) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *SalesOrderPayment) GetPaymentChannel() string {
	if x != nil {
		return x.PaymentChannel
	}
	return ""
}

type DeltaPrintSiEdn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DocNumber  string `protobuf:"bytes,2,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
	PrintCount int32  `protobuf:"varint,3,opt,name=print_count,json=printCount,proto3" json:"print_count,omitempty"`
}

func (x *DeltaPrintSiEdn) Reset() {
	*x = DeltaPrintSiEdn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeltaPrintSiEdn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaPrintSiEdn) ProtoMessage() {}

func (x *DeltaPrintSiEdn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaPrintSiEdn.ProtoReflect.Descriptor instead.
func (*DeltaPrintSiEdn) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{47}
}

func (x *DeltaPrintSiEdn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeltaPrintSiEdn) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

func (x *DeltaPrintSiEdn) GetPrintCount() int32 {
	if x != nil {
		return x.PrintCount
	}
	return 0
}

type DeltaPrintSpEdn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DocNumber  string `protobuf:"bytes,2,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
	PrintCount int32  `protobuf:"varint,3,opt,name=print_count,json=printCount,proto3" json:"print_count,omitempty"`
}

func (x *DeltaPrintSpEdn) Reset() {
	*x = DeltaPrintSpEdn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeltaPrintSpEdn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaPrintSpEdn) ProtoMessage() {}

func (x *DeltaPrintSpEdn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaPrintSpEdn.ProtoReflect.Descriptor instead.
func (*DeltaPrintSpEdn) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{48}
}

func (x *DeltaPrintSpEdn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeltaPrintSpEdn) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

func (x *DeltaPrintSpEdn) GetPrintCount() int32 {
	if x != nil {
		return x.PrintCount
	}
	return 0
}

type GetDeltaPrintSiEdnDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DocNumber string `protobuf:"bytes,2,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
}

func (x *GetDeltaPrintSiEdnDetailRequest) Reset() {
	*x = GetDeltaPrintSiEdnDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeltaPrintSiEdnDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeltaPrintSiEdnDetailRequest) ProtoMessage() {}

func (x *GetDeltaPrintSiEdnDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeltaPrintSiEdnDetailRequest.ProtoReflect.Descriptor instead.
func (*GetDeltaPrintSiEdnDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{49}
}

func (x *GetDeltaPrintSiEdnDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDeltaPrintSiEdnDetailRequest) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

type GetDeltaPrintSiEdnDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DeltaPrintSiEdn `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDeltaPrintSiEdnDetailResponse) Reset() {
	*x = GetDeltaPrintSiEdnDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeltaPrintSiEdnDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeltaPrintSiEdnDetailResponse) ProtoMessage() {}

func (x *GetDeltaPrintSiEdnDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeltaPrintSiEdnDetailResponse.ProtoReflect.Descriptor instead.
func (*GetDeltaPrintSiEdnDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{50}
}

func (x *GetDeltaPrintSiEdnDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDeltaPrintSiEdnDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDeltaPrintSiEdnDetailResponse) GetData() *DeltaPrintSiEdn {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDeltaPrintSpEdnDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DocNumber string `protobuf:"bytes,2,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
}

func (x *GetDeltaPrintSpEdnDetailRequest) Reset() {
	*x = GetDeltaPrintSpEdnDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeltaPrintSpEdnDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeltaPrintSpEdnDetailRequest) ProtoMessage() {}

func (x *GetDeltaPrintSpEdnDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeltaPrintSpEdnDetailRequest.ProtoReflect.Descriptor instead.
func (*GetDeltaPrintSpEdnDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{51}
}

func (x *GetDeltaPrintSpEdnDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetDeltaPrintSpEdnDetailRequest) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

type GetDeltaPrintSpEdnDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DeltaPrintSpEdn `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDeltaPrintSpEdnDetailResponse) Reset() {
	*x = GetDeltaPrintSpEdnDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeltaPrintSpEdnDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeltaPrintSpEdnDetailResponse) ProtoMessage() {}

func (x *GetDeltaPrintSpEdnDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeltaPrintSpEdnDetailResponse.ProtoReflect.Descriptor instead.
func (*GetDeltaPrintSpEdnDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{52}
}

func (x *GetDeltaPrintSpEdnDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDeltaPrintSpEdnDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDeltaPrintSpEdnDetailResponse) GetData() *DeltaPrintSpEdn {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateDeltaPrintSiEdnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocNumber  string `protobuf:"bytes,1,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
	PrintCount int32  `protobuf:"varint,2,opt,name=print_count,json=printCount,proto3" json:"print_count,omitempty"`
}

func (x *CreateDeltaPrintSiEdnRequest) Reset() {
	*x = CreateDeltaPrintSiEdnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeltaPrintSiEdnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeltaPrintSiEdnRequest) ProtoMessage() {}

func (x *CreateDeltaPrintSiEdnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeltaPrintSiEdnRequest.ProtoReflect.Descriptor instead.
func (*CreateDeltaPrintSiEdnRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{53}
}

func (x *CreateDeltaPrintSiEdnRequest) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

func (x *CreateDeltaPrintSiEdnRequest) GetPrintCount() int32 {
	if x != nil {
		return x.PrintCount
	}
	return 0
}

type CreateDeltaPrintSiEdnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DeltaPrintSiEdn `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDeltaPrintSiEdnResponse) Reset() {
	*x = CreateDeltaPrintSiEdnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeltaPrintSiEdnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeltaPrintSiEdnResponse) ProtoMessage() {}

func (x *CreateDeltaPrintSiEdnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeltaPrintSiEdnResponse.ProtoReflect.Descriptor instead.
func (*CreateDeltaPrintSiEdnResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{54}
}

func (x *CreateDeltaPrintSiEdnResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateDeltaPrintSiEdnResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateDeltaPrintSiEdnResponse) GetData() *DeltaPrintSiEdn {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateDeltaPrintSpEdnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocNumber  string `protobuf:"bytes,1,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
	PrintCount int32  `protobuf:"varint,2,opt,name=print_count,json=printCount,proto3" json:"print_count,omitempty"`
}

func (x *CreateDeltaPrintSpEdnRequest) Reset() {
	*x = CreateDeltaPrintSpEdnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeltaPrintSpEdnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeltaPrintSpEdnRequest) ProtoMessage() {}

func (x *CreateDeltaPrintSpEdnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeltaPrintSpEdnRequest.ProtoReflect.Descriptor instead.
func (*CreateDeltaPrintSpEdnRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{55}
}

func (x *CreateDeltaPrintSpEdnRequest) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

func (x *CreateDeltaPrintSpEdnRequest) GetPrintCount() int32 {
	if x != nil {
		return x.PrintCount
	}
	return 0
}

type CreateDeltaPrintSpEdnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DeltaPrintSpEdn `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDeltaPrintSpEdnResponse) Reset() {
	*x = CreateDeltaPrintSpEdnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeltaPrintSpEdnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeltaPrintSpEdnResponse) ProtoMessage() {}

func (x *CreateDeltaPrintSpEdnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeltaPrintSpEdnResponse.ProtoReflect.Descriptor instead.
func (*CreateDeltaPrintSpEdnResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{56}
}

func (x *CreateDeltaPrintSpEdnResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateDeltaPrintSpEdnResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateDeltaPrintSpEdnResponse) GetData() *DeltaPrintSpEdn {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateDeltaPrintSiEdnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DocNumber  string `protobuf:"bytes,2,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
	PrintCount int32  `protobuf:"varint,3,opt,name=print_count,json=printCount,proto3" json:"print_count,omitempty"`
}

func (x *UpdateDeltaPrintSiEdnRequest) Reset() {
	*x = UpdateDeltaPrintSiEdnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeltaPrintSiEdnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeltaPrintSiEdnRequest) ProtoMessage() {}

func (x *UpdateDeltaPrintSiEdnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeltaPrintSiEdnRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeltaPrintSiEdnRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateDeltaPrintSiEdnRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDeltaPrintSiEdnRequest) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

func (x *UpdateDeltaPrintSiEdnRequest) GetPrintCount() int32 {
	if x != nil {
		return x.PrintCount
	}
	return 0
}

type UpdateDeltaPrintSiEdnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DeltaPrintSiEdn `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateDeltaPrintSiEdnResponse) Reset() {
	*x = UpdateDeltaPrintSiEdnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeltaPrintSiEdnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeltaPrintSiEdnResponse) ProtoMessage() {}

func (x *UpdateDeltaPrintSiEdnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeltaPrintSiEdnResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeltaPrintSiEdnResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateDeltaPrintSiEdnResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateDeltaPrintSiEdnResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateDeltaPrintSiEdnResponse) GetData() *DeltaPrintSiEdn {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateDeltaPrintSpEdnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DocNumber  string `protobuf:"bytes,2,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
	PrintCount int32  `protobuf:"varint,3,opt,name=print_count,json=printCount,proto3" json:"print_count,omitempty"`
}

func (x *UpdateDeltaPrintSpEdnRequest) Reset() {
	*x = UpdateDeltaPrintSpEdnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeltaPrintSpEdnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeltaPrintSpEdnRequest) ProtoMessage() {}

func (x *UpdateDeltaPrintSpEdnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeltaPrintSpEdnRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeltaPrintSpEdnRequest) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateDeltaPrintSpEdnRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDeltaPrintSpEdnRequest) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

func (x *UpdateDeltaPrintSpEdnRequest) GetPrintCount() int32 {
	if x != nil {
		return x.PrintCount
	}
	return 0
}

type UpdateDeltaPrintSpEdnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DeltaPrintSpEdn `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateDeltaPrintSpEdnResponse) Reset() {
	*x = UpdateDeltaPrintSpEdnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sales_service_sales_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeltaPrintSpEdnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeltaPrintSpEdnResponse) ProtoMessage() {}

func (x *UpdateDeltaPrintSpEdnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sales_service_sales_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeltaPrintSpEdnResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeltaPrintSpEdnResponse) Descriptor() ([]byte, []int) {
	return file_proto_sales_service_sales_service_proto_rawDescGZIP(), []int{60}
}

func (x *UpdateDeltaPrintSpEdnResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateDeltaPrintSpEdnResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateDeltaPrintSpEdnResponse) GetData() *DeltaPrintSpEdn {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_sales_service_sales_service_proto protoreflect.FileDescriptor

var file_proto_sales_service_sales_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x94, 0x0d, 0x0a, 0x0a, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x47, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x5f, 0x67, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x47, 0x70, 0x12, 0x32, 0x0a, 0x16, 0x74, 0x65, 0x72, 0x6d,
	0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x73, 0x5f, 0x69, 0x64, 0x5f,
	0x67, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x72, 0x6d, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6c, 0x73, 0x49, 0x64, 0x47, 0x70, 0x12, 0x2b, 0x0a, 0x12,
	0x73, 0x75, 0x62, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x5f,
	0x67, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x49, 0x64, 0x47, 0x70, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x69, 0x74, 0x65, 0x49, 0x64, 0x47, 0x70, 0x12, 0x1a, 0x0a, 0x09, 0x77, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x5f, 0x67, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x72, 0x74, 0x49,
	0x64, 0x47, 0x70, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x5f, 0x67, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x47, 0x70, 0x12, 0x29, 0x0a, 0x11, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x47, 0x70,
	0x12, 0x2f, 0x0a, 0x14, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x73, 0x6c, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x6c, 0x73, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x5f, 0x67, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x72, 0x63, 0x68,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x47, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x67, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x47, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a,
	0x10, 0x72, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x5f, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53, 0x68, 0x69, 0x70, 0x44, 0x61, 0x74, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x6f, 0x75,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x76, 0x6f, 0x75, 0x44, 0x69, 0x73, 0x63, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x31, 0x0a, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x65, 0x64, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x65, 0x64, 0x65, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64,
	0x5f, 0x67, 0x70, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x47, 0x70, 0x12, 0x28, 0x0a,
	0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x67,
	0x70, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x70, 0x12, 0x4d, 0x0a, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x23, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x56, 0x0a, 0x13, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x18, 0x24, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x11, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x56,
	0x0a, 0x13, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x25, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x11, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x87, 0x04, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x22, 0x0a, 0x0d,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x47, 0x70,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f,
	0x67, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x47, 0x70, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x5f, 0x67, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x47, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3e, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x65, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x49, 0x64, 0x47, 0x70,
	0x22, 0xa9, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xe5, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f,
	0x67, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x47, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x67, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x47, 0x70, 0x22, 0x80, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf4, 0x02, 0x0a, 0x0e, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x47, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x5f,
	0x67, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54,
	0x69, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x47, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x51, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x6e, 0x69,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x09, 0x75, 0x6f, 0x6d, 0x5f, 0x69, 0x64,
	0x5f, 0x67, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6f, 0x6d, 0x49, 0x64,
	0x47, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xd6,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x44, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x4e, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x7d, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x71, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x48, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x99, 0x03,
	0x0a, 0x12, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x6f, 0x5f, 0x62, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x6f, 0x42, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8b, 0x02, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xba, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaf, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x02,
	0x0a, 0x0e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x5f, 0x69, 0x76, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x76, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x5f, 0x66, 0x76, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x46, 0x76, 0x61, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x67, 0x75, 0x69, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x65, 0x55, 0x72,
	0x6c, 0x22, 0xba, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x69, 0x76, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x76, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x66, 0x76, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x46, 0x76, 0x61, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x86,
	0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x78, 0x0a, 0x10, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x72, 0x6d, 0x5f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x65, 0x72, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6c,
	0x73, 0x22, 0x76, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x6c, 0x73, 0x12,
	0x28, 0x0a, 0x10, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x72, 0x6d, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6c, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x1f, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d,
	0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x62,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xac, 0x03, 0x0a, 0x0c, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x11, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x22, 0x99, 0x02, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xec, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x51, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6f, 0x6d, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6f, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30,
	0x0a, 0x14, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x69, 0x74,
	0x65, 0x6d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xef, 0x01, 0x0a, 0x12, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12,
	0x4c, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a,
	0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x22, 0xc5, 0x04, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x47, 0x50, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x20, 0x0a,
	0x0c, 0x73, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x73, 0x12,
	0x15, 0x0a, 0x06, 0x77, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x77, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x44, 0x6f, 0x63, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6f, 0x5f, 0x64, 0x6f,
	0x63, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x6f, 0x44, 0x6f, 0x63, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x6f, 0x63, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x6f, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x6f, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x47, 0x50,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x01,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x47, 0x70, 0x12, 0x34, 0x0a, 0x16, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0xb0, 0x01, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72,
	0x6f, 0x6e, 0x6a, 0x6f, 0x62, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22,
	0xa2, 0x01, 0x0a, 0x11, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72,
	0x6f, 0x6e, 0x6a, 0x6f, 0x62, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x47, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x55, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x44, 0x0a, 0x18, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x6f, 0x0a, 0x19, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x47, 0x70,
	0x22, 0xec, 0x01, 0x0a, 0x11, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x49, 0x64, 0x47, 0x70,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x64, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x13, 0x73, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x78,
	0x65, 0x6e, 0x64, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x43,
	0x6f, 0x64, 0x65, 0x50, 0x61, 0x69, 0x64, 0x58, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x47, 0x70, 0x22, 0xc6, 0x01, 0x0a, 0x11, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x61, 0x73, 0x68, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x64,
	0x47, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x22, 0x61, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74,
	0x53, 0x69, 0x45, 0x64, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72,
	0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f,
	0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x6f, 0x63, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x6f, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64,
	0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f,
	0x63, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x6f, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x5e, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x87, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53,
	0x70, 0x45, 0x64, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x1c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69,
	0x45, 0x64, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f,
	0x63, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x6f, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x1d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53,
	0x69, 0x45, 0x64, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72,
	0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xe9,
	0x17, 0x0a, 0x0c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x74, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x86, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x33, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x8c, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89,
	0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x34, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x6d, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x6d, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x92, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x47, 0x50, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x47, 0x50, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x47, 0x50, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x72, 0x6f, 0x6e, 0x4a, 0x6f, 0x62, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x72, 0x6f, 0x6e, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x72, 0x6f, 0x6e, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x98, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e,
	0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x74, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x12,
	0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45,
	0x64, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72,
	0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80,
	0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72,
	0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53,
	0x69, 0x45, 0x64, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e, 0x12, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x45, 0x64, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x12, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64,
	0x6e, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x70, 0x45, 0x64, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x5a, 0x5a, 0x52, 0x67, 0x69,
	0x74, 0x2e, 0x65, 0x64, 0x65, 0x6e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x69, 0x64, 0x2f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x33, 0x2f, 0x65,
	0x72, 0x70, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x72, 0x70, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0xa2, 0x02, 0x03, 0x45, 0x4f, 0x50, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_sales_service_sales_service_proto_rawDescOnce sync.Once
	file_proto_sales_service_sales_service_proto_rawDescData = file_proto_sales_service_sales_service_proto_rawDesc
)

func file_proto_sales_service_sales_service_proto_rawDescGZIP() []byte {
	file_proto_sales_service_sales_service_proto_rawDescOnce.Do(func() {
		file_proto_sales_service_sales_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_sales_service_sales_service_proto_rawDescData)
	})
	return file_proto_sales_service_sales_service_proto_rawDescData
}

var file_proto_sales_service_sales_service_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_proto_sales_service_sales_service_proto_goTypes = []interface{}{
	(*SalesOrder)(nil),                            // 0: proto.sales_service.SalesOrder
	(*GetSalesOrderListRequest)(nil),              // 1: proto.sales_service.GetSalesOrderListRequest
	(*GetSalesOrderListResponse)(nil),             // 2: proto.sales_service.GetSalesOrderListResponse
	(*GetSalesOrderDetailRequest)(nil),            // 3: proto.sales_service.GetSalesOrderDetailRequest
	(*GetSalesOrderDetailResponse)(nil),           // 4: proto.sales_service.GetSalesOrderDetailResponse
	(*SalesOrderItem)(nil),                        // 5: proto.sales_service.SalesOrderItem
	(*GetSalesOrderItemListRequest)(nil),          // 6: proto.sales_service.GetSalesOrderItemListRequest
	(*GetSalesOrderItemListResponse)(nil),         // 7: proto.sales_service.GetSalesOrderItemListResponse
	(*GetSalesOrderItemDetailRequest)(nil),        // 8: proto.sales_service.GetSalesOrderItemDetailRequest
	(*GetSalesOrderItemDetailResponse)(nil),       // 9: proto.sales_service.GetSalesOrderItemDetailResponse
	(*CreateSalesOrderRequest)(nil),               // 10: proto.sales_service.CreateSalesOrderRequest
	(*CreateSalesOrderResponse)(nil),              // 11: proto.sales_service.CreateSalesOrderResponse
	(*UpdateSalesOrderRequest)(nil),               // 12: proto.sales_service.UpdateSalesOrderRequest
	(*UpdateSalesOrderResponse)(nil),              // 13: proto.sales_service.UpdateSalesOrderResponse
	(*SalesOrderFeedback)(nil),                    // 14: proto.sales_service.SalesOrderFeedback
	(*GetSalesOrderFeedbackListRequest)(nil),      // 15: proto.sales_service.GetSalesOrderFeedbackListRequest
	(*GetSalesOrderFeedbackListResponse)(nil),     // 16: proto.sales_service.GetSalesOrderFeedbackListResponse
	(*GetSalesOrderFeedbackDetailRequest)(nil),    // 17: proto.sales_service.GetSalesOrderFeedbackDetailRequest
	(*GetSalesOrderFeedbackDetailResponse)(nil),   // 18: proto.sales_service.GetSalesOrderFeedbackDetailResponse
	(*CreateSalesOrderFeedbackRequest)(nil),       // 19: proto.sales_service.CreateSalesOrderFeedbackRequest
	(*CreateSalesOrderFeedbackResponse)(nil),      // 20: proto.sales_service.CreateSalesOrderFeedbackResponse
	(*PaymentMethod)(nil),                         // 21: proto.sales_service.PaymentMethod
	(*GetPaymentMethodListRequest)(nil),           // 22: proto.sales_service.GetPaymentMethodListRequest
	(*GetPaymentMethodListResponse)(nil),          // 23: proto.sales_service.GetPaymentMethodListResponse
	(*PaymentChannel)(nil),                        // 24: proto.sales_service.PaymentChannel
	(*GetPaymentChannelListRequest)(nil),          // 25: proto.sales_service.GetPaymentChannelListRequest
	(*GetPaymentChannelListResponse)(nil),         // 26: proto.sales_service.GetPaymentChannelListResponse
	(*PaymentGroupComb)(nil),                      // 27: proto.sales_service.PaymentGroupComb
	(*GetPaymentGroupCombListRequest)(nil),        // 28: proto.sales_service.GetPaymentGroupCombListRequest
	(*GetPaymentGroupCombListResponse)(nil),       // 29: proto.sales_service.GetPaymentGroupCombListResponse
	(*SalesInvoice)(nil),                          // 30: proto.sales_service.SalesInvoice
	(*InvoicePayment)(nil),                        // 31: proto.sales_service.InvoicePayment
	(*InvoiceItem)(nil),                           // 32: proto.sales_service.InvoiceItem
	(*SalesInvoiceMobile)(nil),                    // 33: proto.sales_service.SalesInvoiceMobile
	(*GetSalesInvoiceGPMobileListRequest)(nil),    // 34: proto.sales_service.GetSalesInvoiceGPMobileListRequest
	(*GetSalesInvoiceGPMobileListResponse)(nil),   // 35: proto.sales_service.GetSalesInvoiceGPMobileListResponse
	(*GetSalesOrderListCronjobRequest)(nil),       // 36: proto.sales_service.GetSalesOrderListCronjobRequest
	(*GetSalesOrderListCronjobResponse)(nil),      // 37: proto.sales_service.GetSalesOrderListCronjobResponse
	(*SalesOrderCronjob)(nil),                     // 38: proto.sales_service.SalesOrderCronjob
	(*UpdateSalesOrderRemindPaymentRequest)(nil),  // 39: proto.sales_service.UpdateSalesOrderRemindPaymentRequest
	(*UpdateSalesOrderRemindPaymentResponse)(nil), // 40: proto.sales_service.UpdateSalesOrderRemindPaymentResponse
	(*ExpiredSalesOrderRequest)(nil),              // 41: proto.sales_service.ExpiredSalesOrderRequest
	(*ExpiredSalesOrderResponse)(nil),             // 42: proto.sales_service.ExpiredSalesOrderResponse
	(*SalesOrderVoucher)(nil),                     // 43: proto.sales_service.SalesOrderVoucher
	(*CreateSalesOrderPaidRequest)(nil),           // 44: proto.sales_service.CreateSalesOrderPaidRequest
	(*CreateSalesOrderPaidResponse)(nil),          // 45: proto.sales_service.CreateSalesOrderPaidResponse
	(*SalesOrderPayment)(nil),                     // 46: proto.sales_service.SalesOrderPayment
	(*DeltaPrintSiEdn)(nil),                       // 47: proto.sales_service.DeltaPrintSiEdn
	(*DeltaPrintSpEdn)(nil),                       // 48: proto.sales_service.DeltaPrintSpEdn
	(*GetDeltaPrintSiEdnDetailRequest)(nil),       // 49: proto.sales_service.GetDeltaPrintSiEdnDetailRequest
	(*GetDeltaPrintSiEdnDetailResponse)(nil),      // 50: proto.sales_service.GetDeltaPrintSiEdnDetailResponse
	(*GetDeltaPrintSpEdnDetailRequest)(nil),       // 51: proto.sales_service.GetDeltaPrintSpEdnDetailRequest
	(*GetDeltaPrintSpEdnDetailResponse)(nil),      // 52: proto.sales_service.GetDeltaPrintSpEdnDetailResponse
	(*CreateDeltaPrintSiEdnRequest)(nil),          // 53: proto.sales_service.CreateDeltaPrintSiEdnRequest
	(*CreateDeltaPrintSiEdnResponse)(nil),         // 54: proto.sales_service.CreateDeltaPrintSiEdnResponse
	(*CreateDeltaPrintSpEdnRequest)(nil),          // 55: proto.sales_service.CreateDeltaPrintSpEdnRequest
	(*CreateDeltaPrintSpEdnResponse)(nil),         // 56: proto.sales_service.CreateDeltaPrintSpEdnResponse
	(*UpdateDeltaPrintSiEdnRequest)(nil),          // 57: proto.sales_service.UpdateDeltaPrintSiEdnRequest
	(*UpdateDeltaPrintSiEdnResponse)(nil),         // 58: proto.sales_service.UpdateDeltaPrintSiEdnResponse
	(*UpdateDeltaPrintSpEdnRequest)(nil),          // 59: proto.sales_service.UpdateDeltaPrintSpEdnRequest
	(*UpdateDeltaPrintSpEdnResponse)(nil),         // 60: proto.sales_service.UpdateDeltaPrintSpEdnResponse
	(*timestamppb.Timestamp)(nil),                 // 61: google.protobuf.Timestamp
}
var file_proto_sales_service_sales_service_proto_depIdxs = []int32{
	61, // 0: proto.sales_service.SalesOrder.recognition_date:type_name -> google.protobuf.Timestamp
	61, // 1: proto.sales_service.SalesOrder.requests_ship_date:type_name -> google.protobuf.Timestamp
	61, // 2: proto.sales_service.SalesOrder.created_at:type_name -> google.protobuf.Timestamp
	5,  // 3: proto.sales_service.SalesOrder.sales_order_item:type_name -> proto.sales_service.SalesOrderItem
	43, // 4: proto.sales_service.SalesOrder.sales_order_voucher:type_name -> proto.sales_service.SalesOrderVoucher
	46, // 5: proto.sales_service.SalesOrder.sales_order_payment:type_name -> proto.sales_service.SalesOrderPayment
	61, // 6: proto.sales_service.GetSalesOrderListRequest.order_date_from:type_name -> google.protobuf.Timestamp
	61, // 7: proto.sales_service.GetSalesOrderListRequest.order_date_to:type_name -> google.protobuf.Timestamp
	0,  // 8: proto.sales_service.GetSalesOrderListResponse.data:type_name -> proto.sales_service.SalesOrder
	0,  // 9: proto.sales_service.GetSalesOrderDetailResponse.data:type_name -> proto.sales_service.SalesOrder
	5,  // 10: proto.sales_service.GetSalesOrderItemListResponse.data:type_name -> proto.sales_service.SalesOrderItem
	5,  // 11: proto.sales_service.GetSalesOrderItemDetailResponse.data:type_name -> proto.sales_service.SalesOrderItem
	0,  // 12: proto.sales_service.CreateSalesOrderRequest.data:type_name -> proto.sales_service.SalesOrder
	0,  // 13: proto.sales_service.CreateSalesOrderResponse.data:type_name -> proto.sales_service.SalesOrder
	0,  // 14: proto.sales_service.UpdateSalesOrderRequest.Data:type_name -> proto.sales_service.SalesOrder
	61, // 15: proto.sales_service.SalesOrderFeedback.created_at:type_name -> google.protobuf.Timestamp
	14, // 16: proto.sales_service.GetSalesOrderFeedbackListResponse.data:type_name -> proto.sales_service.SalesOrderFeedback
	14, // 17: proto.sales_service.GetSalesOrderFeedbackDetailResponse.data:type_name -> proto.sales_service.SalesOrderFeedback
	14, // 18: proto.sales_service.CreateSalesOrderFeedbackRequest.data:type_name -> proto.sales_service.SalesOrderFeedback
	14, // 19: proto.sales_service.CreateSalesOrderFeedbackResponse.data:type_name -> proto.sales_service.SalesOrderFeedback
	21, // 20: proto.sales_service.GetPaymentMethodListResponse.data:type_name -> proto.sales_service.PaymentMethod
	24, // 21: proto.sales_service.GetPaymentChannelListResponse.data:type_name -> proto.sales_service.PaymentChannel
	27, // 22: proto.sales_service.GetPaymentGroupCombListResponse.data:type_name -> proto.sales_service.PaymentGroupComb
	30, // 23: proto.sales_service.SalesInvoiceMobile.sales_invoice:type_name -> proto.sales_service.SalesInvoice
	31, // 24: proto.sales_service.SalesInvoiceMobile.invoice_payment:type_name -> proto.sales_service.InvoicePayment
	32, // 25: proto.sales_service.SalesInvoiceMobile.invoice_item:type_name -> proto.sales_service.InvoiceItem
	33, // 26: proto.sales_service.GetSalesInvoiceGPMobileListResponse.data:type_name -> proto.sales_service.SalesInvoiceMobile
	38, // 27: proto.sales_service.GetSalesOrderListCronjobResponse.data:type_name -> proto.sales_service.SalesOrderCronjob
	61, // 28: proto.sales_service.SalesOrderVoucher.created_at:type_name -> google.protobuf.Timestamp
	47, // 29: proto.sales_service.GetDeltaPrintSiEdnDetailResponse.data:type_name -> proto.sales_service.DeltaPrintSiEdn
	48, // 30: proto.sales_service.GetDeltaPrintSpEdnDetailResponse.data:type_name -> proto.sales_service.DeltaPrintSpEdn
	47, // 31: proto.sales_service.CreateDeltaPrintSiEdnResponse.data:type_name -> proto.sales_service.DeltaPrintSiEdn
	48, // 32: proto.sales_service.CreateDeltaPrintSpEdnResponse.data:type_name -> proto.sales_service.DeltaPrintSpEdn
	47, // 33: proto.sales_service.UpdateDeltaPrintSiEdnResponse.data:type_name -> proto.sales_service.DeltaPrintSiEdn
	48, // 34: proto.sales_service.UpdateDeltaPrintSpEdnResponse.data:type_name -> proto.sales_service.DeltaPrintSpEdn
	1,  // 35: proto.sales_service.SalesService.GetSalesOrderList:input_type -> proto.sales_service.GetSalesOrderListRequest
	1,  // 36: proto.sales_service.SalesService.GetSalesOrderListMobile:input_type -> proto.sales_service.GetSalesOrderListRequest
	3,  // 37: proto.sales_service.SalesService.GetSalesOrderDetail:input_type -> proto.sales_service.GetSalesOrderDetailRequest
	6,  // 38: proto.sales_service.SalesService.GetSalesOrderItemList:input_type -> proto.sales_service.GetSalesOrderItemListRequest
	8,  // 39: proto.sales_service.SalesService.GetSalesOrderItemDetail:input_type -> proto.sales_service.GetSalesOrderItemDetailRequest
	10, // 40: proto.sales_service.SalesService.CreateSalesOrder:input_type -> proto.sales_service.CreateSalesOrderRequest
	12, // 41: proto.sales_service.SalesService.UpdateSalesOrder:input_type -> proto.sales_service.UpdateSalesOrderRequest
	15, // 42: proto.sales_service.SalesService.GetSalesOrderFeedbackList:input_type -> proto.sales_service.GetSalesOrderFeedbackListRequest
	19, // 43: proto.sales_service.SalesService.CreateSalesOrderFeedback:input_type -> proto.sales_service.CreateSalesOrderFeedbackRequest
	22, // 44: proto.sales_service.SalesService.GetPaymentMethodList:input_type -> proto.sales_service.GetPaymentMethodListRequest
	25, // 45: proto.sales_service.SalesService.GetPaymentChannelList:input_type -> proto.sales_service.GetPaymentChannelListRequest
	28, // 46: proto.sales_service.SalesService.GetPaymentGroupCombList:input_type -> proto.sales_service.GetPaymentGroupCombListRequest
	34, // 47: proto.sales_service.SalesService.GetSalesInvoiceGPMobileList:input_type -> proto.sales_service.GetSalesInvoiceGPMobileListRequest
	36, // 48: proto.sales_service.SalesService.GetSalesOrderListCronJob:input_type -> proto.sales_service.GetSalesOrderListCronjobRequest
	39, // 49: proto.sales_service.SalesService.UpdateSalesOrderRemindPayment:input_type -> proto.sales_service.UpdateSalesOrderRemindPaymentRequest
	41, // 50: proto.sales_service.SalesService.ExpiredSalesOrder:input_type -> proto.sales_service.ExpiredSalesOrderRequest
	44, // 51: proto.sales_service.SalesService.CreateSalesOrderPaid:input_type -> proto.sales_service.CreateSalesOrderPaidRequest
	49, // 52: proto.sales_service.SalesService.GetDeltaPrintSiEdnDetail:input_type -> proto.sales_service.GetDeltaPrintSiEdnDetailRequest
	51, // 53: proto.sales_service.SalesService.GetDeltaPrintSpEdnDetail:input_type -> proto.sales_service.GetDeltaPrintSpEdnDetailRequest
	53, // 54: proto.sales_service.SalesService.CreateDeltaPrintSiEdn:input_type -> proto.sales_service.CreateDeltaPrintSiEdnRequest
	57, // 55: proto.sales_service.SalesService.UpdateDeltaPrintSiEdn:input_type -> proto.sales_service.UpdateDeltaPrintSiEdnRequest
	55, // 56: proto.sales_service.SalesService.CreateDeltaPrintSpEdn:input_type -> proto.sales_service.CreateDeltaPrintSpEdnRequest
	59, // 57: proto.sales_service.SalesService.UpdateDeltaPrintSpEdn:input_type -> proto.sales_service.UpdateDeltaPrintSpEdnRequest
	2,  // 58: proto.sales_service.SalesService.GetSalesOrderList:output_type -> proto.sales_service.GetSalesOrderListResponse
	2,  // 59: proto.sales_service.SalesService.GetSalesOrderListMobile:output_type -> proto.sales_service.GetSalesOrderListResponse
	4,  // 60: proto.sales_service.SalesService.GetSalesOrderDetail:output_type -> proto.sales_service.GetSalesOrderDetailResponse
	7,  // 61: proto.sales_service.SalesService.GetSalesOrderItemList:output_type -> proto.sales_service.GetSalesOrderItemListResponse
	9,  // 62: proto.sales_service.SalesService.GetSalesOrderItemDetail:output_type -> proto.sales_service.GetSalesOrderItemDetailResponse
	11, // 63: proto.sales_service.SalesService.CreateSalesOrder:output_type -> proto.sales_service.CreateSalesOrderResponse
	13, // 64: proto.sales_service.SalesService.UpdateSalesOrder:output_type -> proto.sales_service.UpdateSalesOrderResponse
	16, // 65: proto.sales_service.SalesService.GetSalesOrderFeedbackList:output_type -> proto.sales_service.GetSalesOrderFeedbackListResponse
	20, // 66: proto.sales_service.SalesService.CreateSalesOrderFeedback:output_type -> proto.sales_service.CreateSalesOrderFeedbackResponse
	23, // 67: proto.sales_service.SalesService.GetPaymentMethodList:output_type -> proto.sales_service.GetPaymentMethodListResponse
	26, // 68: proto.sales_service.SalesService.GetPaymentChannelList:output_type -> proto.sales_service.GetPaymentChannelListResponse
	29, // 69: proto.sales_service.SalesService.GetPaymentGroupCombList:output_type -> proto.sales_service.GetPaymentGroupCombListResponse
	35, // 70: proto.sales_service.SalesService.GetSalesInvoiceGPMobileList:output_type -> proto.sales_service.GetSalesInvoiceGPMobileListResponse
	37, // 71: proto.sales_service.SalesService.GetSalesOrderListCronJob:output_type -> proto.sales_service.GetSalesOrderListCronjobResponse
	40, // 72: proto.sales_service.SalesService.UpdateSalesOrderRemindPayment:output_type -> proto.sales_service.UpdateSalesOrderRemindPaymentResponse
	42, // 73: proto.sales_service.SalesService.ExpiredSalesOrder:output_type -> proto.sales_service.ExpiredSalesOrderResponse
	45, // 74: proto.sales_service.SalesService.CreateSalesOrderPaid:output_type -> proto.sales_service.CreateSalesOrderPaidResponse
	50, // 75: proto.sales_service.SalesService.GetDeltaPrintSiEdnDetail:output_type -> proto.sales_service.GetDeltaPrintSiEdnDetailResponse
	52, // 76: proto.sales_service.SalesService.GetDeltaPrintSpEdnDetail:output_type -> proto.sales_service.GetDeltaPrintSpEdnDetailResponse
	54, // 77: proto.sales_service.SalesService.CreateDeltaPrintSiEdn:output_type -> proto.sales_service.CreateDeltaPrintSiEdnResponse
	58, // 78: proto.sales_service.SalesService.UpdateDeltaPrintSiEdn:output_type -> proto.sales_service.UpdateDeltaPrintSiEdnResponse
	56, // 79: proto.sales_service.SalesService.CreateDeltaPrintSpEdn:output_type -> proto.sales_service.CreateDeltaPrintSpEdnResponse
	60, // 80: proto.sales_service.SalesService.UpdateDeltaPrintSpEdn:output_type -> proto.sales_service.UpdateDeltaPrintSpEdnResponse
	58, // [58:81] is the sub-list for method output_type
	35, // [35:58] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_proto_sales_service_sales_service_proto_init() }
func file_proto_sales_service_sales_service_proto_init() {
	if File_proto_sales_service_sales_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_sales_service_sales_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderItemListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderItemListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderItemDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderItemDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSalesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSalesOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSalesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSalesOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesOrderFeedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderFeedbackListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderFeedbackListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderFeedbackDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderFeedbackDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSalesOrderFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSalesOrderFeedbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentMethodListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentMethodListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentChannelListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentChannelListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentGroupComb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGroupCombListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentGroupCombListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesInvoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoicePayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesInvoiceMobile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesInvoiceGPMobileListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesInvoiceGPMobileListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderListCronjobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderListCronjobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesOrderCronjob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSalesOrderRemindPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSalesOrderRemindPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpiredSalesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpiredSalesOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesOrderVoucher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSalesOrderPaidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSalesOrderPaidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesOrderPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeltaPrintSiEdn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeltaPrintSpEdn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeltaPrintSiEdnDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeltaPrintSiEdnDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeltaPrintSpEdnDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeltaPrintSpEdnDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeltaPrintSiEdnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeltaPrintSiEdnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeltaPrintSpEdnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeltaPrintSpEdnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeltaPrintSiEdnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeltaPrintSiEdnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeltaPrintSpEdnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sales_service_sales_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeltaPrintSpEdnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_sales_service_sales_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_sales_service_sales_service_proto_goTypes,
		DependencyIndexes: file_proto_sales_service_sales_service_proto_depIdxs,
		MessageInfos:      file_proto_sales_service_sales_service_proto_msgTypes,
	}.Build()
	File_proto_sales_service_sales_service_proto = out.File
	file_proto_sales_service_sales_service_proto_rawDesc = nil
	file_proto_sales_service_sales_service_proto_goTypes = nil
	file_proto_sales_service_sales_service_proto_depIdxs = nil
}
