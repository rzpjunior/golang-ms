// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: proto/crm_service/crm_service.proto

package crm_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProspectiveCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code                      string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	ArchetypeIdGp             string                 `protobuf:"bytes,3,opt,name=archetype_id_gp,json=archetypeIdGp,proto3" json:"archetype_id_gp,omitempty"`
	CustomerTypeIdGp          string                 `protobuf:"bytes,4,opt,name=customer_type_id_gp,json=customerTypeIdGp,proto3" json:"customer_type_id_gp,omitempty"`
	CompanyAdmDivisionIdGp    string                 `protobuf:"bytes,5,opt,name=company_adm_division_id_gp,json=companyAdmDivisionIdGp,proto3" json:"company_adm_division_id_gp,omitempty"`
	CustomerIdGp              string                 `protobuf:"bytes,6,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
	SalespersonIdGp           string                 `protobuf:"bytes,7,opt,name=salesperson_id_gp,json=salespersonIdGp,proto3" json:"salesperson_id_gp,omitempty"`
	Name                      string                 `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	BrandName                 string                 `protobuf:"bytes,9,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	CompanyStreetName         string                 `protobuf:"bytes,10,opt,name=company_street_name,json=companyStreetName,proto3" json:"company_street_name,omitempty"`
	CustomerUpgrade           int32                  `protobuf:"varint,11,opt,name=customer_upgrade,json=customerUpgrade,proto3" json:"customer_upgrade,omitempty"`
	UpgradeStatus             int32                  `protobuf:"varint,12,opt,name=upgrade_status,json=upgradeStatus,proto3" json:"upgrade_status,omitempty"`
	RegStatus                 int32                  `protobuf:"varint,13,opt,name=reg_status,json=regStatus,proto3" json:"reg_status,omitempty"`
	Application               int32                  `protobuf:"varint,14,opt,name=application,proto3" json:"application,omitempty"`
	CreatedAt                 *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                 *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ProcessedAt               *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	ProcessedBy               int64                  `protobuf:"varint,18,opt,name=processed_by,json=processedBy,proto3" json:"processed_by,omitempty"`
	DeclineType               int32                  `protobuf:"varint,19,opt,name=decline_type,json=declineType,proto3" json:"decline_type,omitempty"`
	DeclineNote               string                 `protobuf:"bytes,20,opt,name=decline_note,json=declineNote,proto3" json:"decline_note,omitempty"`
	ShipToStreetName          string                 `protobuf:"bytes,21,opt,name=ship_to_street_name,json=shipToStreetName,proto3" json:"ship_to_street_name,omitempty"`
	ShipToAdmDivisionIdGp     string                 `protobuf:"bytes,22,opt,name=ship_to_adm_division_id_gp,json=shipToAdmDivisionIdGp,proto3" json:"ship_to_adm_division_id_gp,omitempty"`
	SiteIdGp                  string                 `protobuf:"bytes,23,opt,name=site_id_gp,json=siteIdGp,proto3" json:"site_id_gp,omitempty"`
	BillToReferTo             int32                  `protobuf:"varint,24,opt,name=bill_to_refer_to,json=billToReferTo,proto3" json:"bill_to_refer_to,omitempty"`
	OutletImage               string                 `protobuf:"bytes,25,opt,name=outlet_image,json=outletImage,proto3" json:"outlet_image,omitempty"`
	TimeConsent               int32                  `protobuf:"varint,26,opt,name=time_consent,json=timeConsent,proto3" json:"time_consent,omitempty"`
	ReferenceInfo             int32                  `protobuf:"varint,27,opt,name=reference_info,json=referenceInfo,proto3" json:"reference_info,omitempty"`
	ReferrerCode              string                 `protobuf:"bytes,28,opt,name=referrer_code,json=referrerCode,proto3" json:"referrer_code,omitempty"`
	OwnerName                 string                 `protobuf:"bytes,29,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	OwnerRole                 string                 `protobuf:"bytes,30,opt,name=owner_role,json=ownerRole,proto3" json:"owner_role,omitempty"`
	Email                     string                 `protobuf:"bytes,31,opt,name=email,proto3" json:"email,omitempty"`
	BusinessTypeIdGp          string                 `protobuf:"bytes,32,opt,name=business_type_id_gp,json=businessTypeIdGp,proto3" json:"business_type_id_gp,omitempty"`
	PicOrderName              string                 `protobuf:"bytes,33,opt,name=pic_order_name,json=picOrderName,proto3" json:"pic_order_name,omitempty"`
	PicOrderContact           string                 `protobuf:"bytes,34,opt,name=pic_order_contact,json=picOrderContact,proto3" json:"pic_order_contact,omitempty"`
	PicFinanceName            string                 `protobuf:"bytes,35,opt,name=pic_finance_name,json=picFinanceName,proto3" json:"pic_finance_name,omitempty"`
	PicFinanceContact         string                 `protobuf:"bytes,36,opt,name=pic_finance_contact,json=picFinanceContact,proto3" json:"pic_finance_contact,omitempty"`
	IdCardDocName             string                 `protobuf:"bytes,37,opt,name=id_card_doc_name,json=idCardDocName,proto3" json:"id_card_doc_name,omitempty"`
	IdCardDocNumber           string                 `protobuf:"bytes,38,opt,name=id_card_doc_number,json=idCardDocNumber,proto3" json:"id_card_doc_number,omitempty"`
	IdCardDocUrl              string                 `protobuf:"bytes,39,opt,name=id_card_doc_url,json=idCardDocUrl,proto3" json:"id_card_doc_url,omitempty"`
	TaxpayerDocName           string                 `protobuf:"bytes,40,opt,name=taxpayer_doc_name,json=taxpayerDocName,proto3" json:"taxpayer_doc_name,omitempty"`
	TaxpayerDocNumber         string                 `protobuf:"bytes,41,opt,name=taxpayer_doc_number,json=taxpayerDocNumber,proto3" json:"taxpayer_doc_number,omitempty"`
	TaxpayerDocUrl            string                 `protobuf:"bytes,42,opt,name=taxpayer_doc_url,json=taxpayerDocUrl,proto3" json:"taxpayer_doc_url,omitempty"`
	CompanyContractDocName    string                 `protobuf:"bytes,43,opt,name=company_contract_doc_name,json=companyContractDocName,proto3" json:"company_contract_doc_name,omitempty"`
	CompanyContractDocUrl     string                 `protobuf:"bytes,44,opt,name=company_contract_doc_url,json=companyContractDocUrl,proto3" json:"company_contract_doc_url,omitempty"`
	NotarialDeedDocName       string                 `protobuf:"bytes,45,opt,name=notarial_deed_doc_name,json=notarialDeedDocName,proto3" json:"notarial_deed_doc_name,omitempty"`
	NotarialDeedDocUrl        string                 `protobuf:"bytes,46,opt,name=notarial_deed_doc_url,json=notarialDeedDocUrl,proto3" json:"notarial_deed_doc_url,omitempty"`
	TaxableEntrepeneurDocName string                 `protobuf:"bytes,47,opt,name=taxable_entrepeneur_doc_name,json=taxableEntrepeneurDocName,proto3" json:"taxable_entrepeneur_doc_name,omitempty"`
	TaxableEntrepeneurDocUrl  string                 `protobuf:"bytes,48,opt,name=taxable_entrepeneur_doc_url,json=taxableEntrepeneurDocUrl,proto3" json:"taxable_entrepeneur_doc_url,omitempty"`
	CompanyCertificateRegName string                 `protobuf:"bytes,49,opt,name=company_certificate_reg_name,json=companyCertificateRegName,proto3" json:"company_certificate_reg_name,omitempty"`
	CompanyCertificateRegUrl  string                 `protobuf:"bytes,50,opt,name=company_certificate_reg_url,json=companyCertificateRegUrl,proto3" json:"company_certificate_reg_url,omitempty"`
	BusinessLicenseDocName    string                 `protobuf:"bytes,51,opt,name=business_license_doc_name,json=businessLicenseDocName,proto3" json:"business_license_doc_name,omitempty"`
	BusinessLicenseDocUrl     string                 `protobuf:"bytes,52,opt,name=business_license_doc_url,json=businessLicenseDocUrl,proto3" json:"business_license_doc_url,omitempty"`
	PaymentTermIdGp           string                 `protobuf:"bytes,53,opt,name=payment_term_id_gp,json=paymentTermIdGp,proto3" json:"payment_term_id_gp,omitempty"`
	ExchangeInvoice           int32                  `protobuf:"varint,54,opt,name=exchange_invoice,json=exchangeInvoice,proto3" json:"exchange_invoice,omitempty"`
	ExchangeInvoiceTime       string                 `protobuf:"bytes,55,opt,name=exchange_invoice_time,json=exchangeInvoiceTime,proto3" json:"exchange_invoice_time,omitempty"`
	FinanceEmail              string                 `protobuf:"bytes,56,opt,name=finance_email,json=financeEmail,proto3" json:"finance_email,omitempty"`
	InvoiceTerm               int32                  `protobuf:"varint,57,opt,name=invoice_term,json=invoiceTerm,proto3" json:"invoice_term,omitempty"`
}

func (x *ProspectiveCustomer) Reset() {
	*x = ProspectiveCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProspectiveCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProspectiveCustomer) ProtoMessage() {}

func (x *ProspectiveCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProspectiveCustomer.ProtoReflect.Descriptor instead.
func (*ProspectiveCustomer) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{0}
}

func (x *ProspectiveCustomer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProspectiveCustomer) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProspectiveCustomer) GetArchetypeIdGp() string {
	if x != nil {
		return x.ArchetypeIdGp
	}
	return ""
}

func (x *ProspectiveCustomer) GetCustomerTypeIdGp() string {
	if x != nil {
		return x.CustomerTypeIdGp
	}
	return ""
}

func (x *ProspectiveCustomer) GetCompanyAdmDivisionIdGp() string {
	if x != nil {
		return x.CompanyAdmDivisionIdGp
	}
	return ""
}

func (x *ProspectiveCustomer) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

func (x *ProspectiveCustomer) GetSalespersonIdGp() string {
	if x != nil {
		return x.SalespersonIdGp
	}
	return ""
}

func (x *ProspectiveCustomer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProspectiveCustomer) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *ProspectiveCustomer) GetCompanyStreetName() string {
	if x != nil {
		return x.CompanyStreetName
	}
	return ""
}

func (x *ProspectiveCustomer) GetCustomerUpgrade() int32 {
	if x != nil {
		return x.CustomerUpgrade
	}
	return 0
}

func (x *ProspectiveCustomer) GetUpgradeStatus() int32 {
	if x != nil {
		return x.UpgradeStatus
	}
	return 0
}

func (x *ProspectiveCustomer) GetRegStatus() int32 {
	if x != nil {
		return x.RegStatus
	}
	return 0
}

func (x *ProspectiveCustomer) GetApplication() int32 {
	if x != nil {
		return x.Application
	}
	return 0
}

func (x *ProspectiveCustomer) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ProspectiveCustomer) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ProspectiveCustomer) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

func (x *ProspectiveCustomer) GetProcessedBy() int64 {
	if x != nil {
		return x.ProcessedBy
	}
	return 0
}

func (x *ProspectiveCustomer) GetDeclineType() int32 {
	if x != nil {
		return x.DeclineType
	}
	return 0
}

func (x *ProspectiveCustomer) GetDeclineNote() string {
	if x != nil {
		return x.DeclineNote
	}
	return ""
}

func (x *ProspectiveCustomer) GetShipToStreetName() string {
	if x != nil {
		return x.ShipToStreetName
	}
	return ""
}

func (x *ProspectiveCustomer) GetShipToAdmDivisionIdGp() string {
	if x != nil {
		return x.ShipToAdmDivisionIdGp
	}
	return ""
}

func (x *ProspectiveCustomer) GetSiteIdGp() string {
	if x != nil {
		return x.SiteIdGp
	}
	return ""
}

func (x *ProspectiveCustomer) GetBillToReferTo() int32 {
	if x != nil {
		return x.BillToReferTo
	}
	return 0
}

func (x *ProspectiveCustomer) GetOutletImage() string {
	if x != nil {
		return x.OutletImage
	}
	return ""
}

func (x *ProspectiveCustomer) GetTimeConsent() int32 {
	if x != nil {
		return x.TimeConsent
	}
	return 0
}

func (x *ProspectiveCustomer) GetReferenceInfo() int32 {
	if x != nil {
		return x.ReferenceInfo
	}
	return 0
}

func (x *ProspectiveCustomer) GetReferrerCode() string {
	if x != nil {
		return x.ReferrerCode
	}
	return ""
}

func (x *ProspectiveCustomer) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *ProspectiveCustomer) GetOwnerRole() string {
	if x != nil {
		return x.OwnerRole
	}
	return ""
}

func (x *ProspectiveCustomer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ProspectiveCustomer) GetBusinessTypeIdGp() string {
	if x != nil {
		return x.BusinessTypeIdGp
	}
	return ""
}

func (x *ProspectiveCustomer) GetPicOrderName() string {
	if x != nil {
		return x.PicOrderName
	}
	return ""
}

func (x *ProspectiveCustomer) GetPicOrderContact() string {
	if x != nil {
		return x.PicOrderContact
	}
	return ""
}

func (x *ProspectiveCustomer) GetPicFinanceName() string {
	if x != nil {
		return x.PicFinanceName
	}
	return ""
}

func (x *ProspectiveCustomer) GetPicFinanceContact() string {
	if x != nil {
		return x.PicFinanceContact
	}
	return ""
}

func (x *ProspectiveCustomer) GetIdCardDocName() string {
	if x != nil {
		return x.IdCardDocName
	}
	return ""
}

func (x *ProspectiveCustomer) GetIdCardDocNumber() string {
	if x != nil {
		return x.IdCardDocNumber
	}
	return ""
}

func (x *ProspectiveCustomer) GetIdCardDocUrl() string {
	if x != nil {
		return x.IdCardDocUrl
	}
	return ""
}

func (x *ProspectiveCustomer) GetTaxpayerDocName() string {
	if x != nil {
		return x.TaxpayerDocName
	}
	return ""
}

func (x *ProspectiveCustomer) GetTaxpayerDocNumber() string {
	if x != nil {
		return x.TaxpayerDocNumber
	}
	return ""
}

func (x *ProspectiveCustomer) GetTaxpayerDocUrl() string {
	if x != nil {
		return x.TaxpayerDocUrl
	}
	return ""
}

func (x *ProspectiveCustomer) GetCompanyContractDocName() string {
	if x != nil {
		return x.CompanyContractDocName
	}
	return ""
}

func (x *ProspectiveCustomer) GetCompanyContractDocUrl() string {
	if x != nil {
		return x.CompanyContractDocUrl
	}
	return ""
}

func (x *ProspectiveCustomer) GetNotarialDeedDocName() string {
	if x != nil {
		return x.NotarialDeedDocName
	}
	return ""
}

func (x *ProspectiveCustomer) GetNotarialDeedDocUrl() string {
	if x != nil {
		return x.NotarialDeedDocUrl
	}
	return ""
}

func (x *ProspectiveCustomer) GetTaxableEntrepeneurDocName() string {
	if x != nil {
		return x.TaxableEntrepeneurDocName
	}
	return ""
}

func (x *ProspectiveCustomer) GetTaxableEntrepeneurDocUrl() string {
	if x != nil {
		return x.TaxableEntrepeneurDocUrl
	}
	return ""
}

func (x *ProspectiveCustomer) GetCompanyCertificateRegName() string {
	if x != nil {
		return x.CompanyCertificateRegName
	}
	return ""
}

func (x *ProspectiveCustomer) GetCompanyCertificateRegUrl() string {
	if x != nil {
		return x.CompanyCertificateRegUrl
	}
	return ""
}

func (x *ProspectiveCustomer) GetBusinessLicenseDocName() string {
	if x != nil {
		return x.BusinessLicenseDocName
	}
	return ""
}

func (x *ProspectiveCustomer) GetBusinessLicenseDocUrl() string {
	if x != nil {
		return x.BusinessLicenseDocUrl
	}
	return ""
}

func (x *ProspectiveCustomer) GetPaymentTermIdGp() string {
	if x != nil {
		return x.PaymentTermIdGp
	}
	return ""
}

func (x *ProspectiveCustomer) GetExchangeInvoice() int32 {
	if x != nil {
		return x.ExchangeInvoice
	}
	return 0
}

func (x *ProspectiveCustomer) GetExchangeInvoiceTime() string {
	if x != nil {
		return x.ExchangeInvoiceTime
	}
	return ""
}

func (x *ProspectiveCustomer) GetFinanceEmail() string {
	if x != nil {
		return x.FinanceEmail
	}
	return ""
}

func (x *ProspectiveCustomer) GetInvoiceTerm() int32 {
	if x != nil {
		return x.InvoiceTerm
	}
	return 0
}

type GetProspectiveCustomerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit          int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status         int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search         string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy        string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	ArchetypeId    string `protobuf:"bytes,6,opt,name=archetype_id,json=archetypeId,proto3" json:"archetype_id,omitempty"`
	CustomerTypeId string `protobuf:"bytes,7,opt,name=customer_type_id,json=customerTypeId,proto3" json:"customer_type_id,omitempty"`
	RegionId       string `protobuf:"bytes,8,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	SubDistrictId  string `protobuf:"bytes,9,opt,name=sub_district_id,json=subDistrictId,proto3" json:"sub_district_id,omitempty"`
	SalespersonId  string `protobuf:"bytes,10,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
	RequestedBy    string `protobuf:"bytes,11,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
	CustomerId     string `protobuf:"bytes,12,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *GetProspectiveCustomerListRequest) Reset() {
	*x = GetProspectiveCustomerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProspectiveCustomerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProspectiveCustomerListRequest) ProtoMessage() {}

func (x *GetProspectiveCustomerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProspectiveCustomerListRequest.ProtoReflect.Descriptor instead.
func (*GetProspectiveCustomerListRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetProspectiveCustomerListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetProspectiveCustomerListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetProspectiveCustomerListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetProspectiveCustomerListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetProspectiveCustomerListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetProspectiveCustomerListRequest) GetArchetypeId() string {
	if x != nil {
		return x.ArchetypeId
	}
	return ""
}

func (x *GetProspectiveCustomerListRequest) GetCustomerTypeId() string {
	if x != nil {
		return x.CustomerTypeId
	}
	return ""
}

func (x *GetProspectiveCustomerListRequest) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetProspectiveCustomerListRequest) GetSubDistrictId() string {
	if x != nil {
		return x.SubDistrictId
	}
	return ""
}

func (x *GetProspectiveCustomerListRequest) GetSalespersonId() string {
	if x != nil {
		return x.SalespersonId
	}
	return ""
}

func (x *GetProspectiveCustomerListRequest) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

func (x *GetProspectiveCustomerListRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type GetProspectiveCustomerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ProspectiveCustomer `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetProspectiveCustomerListResponse) Reset() {
	*x = GetProspectiveCustomerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProspectiveCustomerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProspectiveCustomerListResponse) ProtoMessage() {}

func (x *GetProspectiveCustomerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProspectiveCustomerListResponse.ProtoReflect.Descriptor instead.
func (*GetProspectiveCustomerListResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetProspectiveCustomerListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetProspectiveCustomerListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProspectiveCustomerListResponse) GetData() []*ProspectiveCustomer {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetProspectiveCustomerDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetProspectiveCustomerDetailRequest) Reset() {
	*x = GetProspectiveCustomerDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProspectiveCustomerDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProspectiveCustomerDetailRequest) ProtoMessage() {}

func (x *GetProspectiveCustomerDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProspectiveCustomerDetailRequest.ProtoReflect.Descriptor instead.
func (*GetProspectiveCustomerDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetProspectiveCustomerDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetProspectiveCustomerDetailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetProspectiveCustomerDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ProspectiveCustomer `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetProspectiveCustomerDetailResponse) Reset() {
	*x = GetProspectiveCustomerDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProspectiveCustomerDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProspectiveCustomerDetailResponse) ProtoMessage() {}

func (x *GetProspectiveCustomerDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProspectiveCustomerDetailResponse.ProtoReflect.Descriptor instead.
func (*GetProspectiveCustomerDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetProspectiveCustomerDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetProspectiveCustomerDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetProspectiveCustomerDetailResponse) GetData() *ProspectiveCustomer {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteProspectiveCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code       string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	CustomerId int64  `protobuf:"varint,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *DeleteProspectiveCustomerRequest) Reset() {
	*x = DeleteProspectiveCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProspectiveCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProspectiveCustomerRequest) ProtoMessage() {}

func (x *DeleteProspectiveCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProspectiveCustomerRequest.ProtoReflect.Descriptor instead.
func (*DeleteProspectiveCustomerRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteProspectiveCustomerRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteProspectiveCustomerRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteProspectiveCustomerRequest) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

type DeleteProspectiveCustomerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteProspectiveCustomerResponse) Reset() {
	*x = DeleteProspectiveCustomerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProspectiveCustomerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProspectiveCustomerResponse) ProtoMessage() {}

func (x *DeleteProspectiveCustomerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProspectiveCustomerResponse.ProtoReflect.Descriptor instead.
func (*DeleteProspectiveCustomerResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteProspectiveCustomerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteProspectiveCustomerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SalesAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code        string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	TerritoryId int64                  `protobuf:"varint,3,opt,name=territory_id,json=territoryId,proto3" json:"territory_id,omitempty"`
	StartDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Status      int32                  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SalesAssignment) Reset() {
	*x = SalesAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesAssignment) ProtoMessage() {}

func (x *SalesAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesAssignment.ProtoReflect.Descriptor instead.
func (*SalesAssignment) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{7}
}

func (x *SalesAssignment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SalesAssignment) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SalesAssignment) GetTerritoryId() int64 {
	if x != nil {
		return x.TerritoryId
	}
	return 0
}

func (x *SalesAssignment) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *SalesAssignment) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *SalesAssignment) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetSalesAssignmentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status        int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search        string                 `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy       string                 `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	ArchetypeId   int64                  `protobuf:"varint,6,opt,name=archetype_id,json=archetypeId,proto3" json:"archetype_id,omitempty"`
	TeritoryId    int64                  `protobuf:"varint,7,opt,name=teritory_id,json=teritoryId,proto3" json:"teritory_id,omitempty"`
	StartDateFrom *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=start_date_from,json=startDateFrom,proto3" json:"start_date_from,omitempty"`
	StartDateTo   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=start_date_to,json=startDateTo,proto3" json:"start_date_to,omitempty"`
	EndDateFrom   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=end_date_from,json=endDateFrom,proto3" json:"end_date_from,omitempty"`
	EndDateTo     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=end_date_to,json=endDateTo,proto3" json:"end_date_to,omitempty"`
}

func (x *GetSalesAssignmentListRequest) Reset() {
	*x = GetSalesAssignmentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentListRequest) ProtoMessage() {}

func (x *GetSalesAssignmentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentListRequest.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentListRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetSalesAssignmentListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSalesAssignmentListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSalesAssignmentListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSalesAssignmentListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetSalesAssignmentListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetSalesAssignmentListRequest) GetArchetypeId() int64 {
	if x != nil {
		return x.ArchetypeId
	}
	return 0
}

func (x *GetSalesAssignmentListRequest) GetTeritoryId() int64 {
	if x != nil {
		return x.TeritoryId
	}
	return 0
}

func (x *GetSalesAssignmentListRequest) GetStartDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDateFrom
	}
	return nil
}

func (x *GetSalesAssignmentListRequest) GetStartDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDateTo
	}
	return nil
}

func (x *GetSalesAssignmentListRequest) GetEndDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDateFrom
	}
	return nil
}

func (x *GetSalesAssignmentListRequest) GetEndDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDateTo
	}
	return nil
}

type GetSalesAssignmentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*SalesAssignment `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesAssignmentListResponse) Reset() {
	*x = GetSalesAssignmentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentListResponse) ProtoMessage() {}

func (x *GetSalesAssignmentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentListResponse.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentListResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetSalesAssignmentListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesAssignmentListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesAssignmentListResponse) GetData() []*SalesAssignment {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSalesAssignmentDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code           string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Status         int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search         string                 `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	TaskType       int32                  `protobuf:"varint,5,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	FinishDateFrom *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=finish_date_from,json=finishDateFrom,proto3" json:"finish_date_from,omitempty"`
	FinishDateTo   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=finish_date_to,json=finishDateTo,proto3" json:"finish_date_to,omitempty"`
}

func (x *GetSalesAssignmentDetailRequest) Reset() {
	*x = GetSalesAssignmentDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentDetailRequest) ProtoMessage() {}

func (x *GetSalesAssignmentDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentDetailRequest.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetSalesAssignmentDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSalesAssignmentDetailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetSalesAssignmentDetailRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSalesAssignmentDetailRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetSalesAssignmentDetailRequest) GetTaskType() int32 {
	if x != nil {
		return x.TaskType
	}
	return 0
}

func (x *GetSalesAssignmentDetailRequest) GetFinishDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishDateFrom
	}
	return nil
}

func (x *GetSalesAssignmentDetailRequest) GetFinishDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishDateTo
	}
	return nil
}

type GetSalesAssignmentDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SalesAssignment `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesAssignmentDetailResponse) Reset() {
	*x = GetSalesAssignmentDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentDetailResponse) ProtoMessage() {}

func (x *GetSalesAssignmentDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentDetailResponse.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetSalesAssignmentDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesAssignmentDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesAssignmentDetailResponse) GetData() *SalesAssignment {
	if x != nil {
		return x.Data
	}
	return nil
}

type SalesAssignmentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SalesAssignmentId     *int64                       `protobuf:"varint,2,opt,name=sales_assignment_id,json=salesAssignmentId,proto3,oneof" json:"sales_assignment_id,omitempty"`
	SalesPersonId         int64                        `protobuf:"varint,3,opt,name=sales_person_id,json=salesPersonId,proto3" json:"sales_person_id,omitempty"`
	AddressId             int64                        `protobuf:"varint,4,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	CustomerAcquisitionId int64                        `protobuf:"varint,5,opt,name=customer_acquisition_id,json=customerAcquisitionId,proto3" json:"customer_acquisition_id,omitempty"`
	Latitude              float64                      `protobuf:"fixed64,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude             float64                      `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Task                  int32                        `protobuf:"varint,8,opt,name=task,proto3" json:"task,omitempty"`
	CustomerType          int32                        `protobuf:"varint,9,opt,name=customer_type,json=customerType,proto3" json:"customer_type,omitempty"`
	ObjectiveCodes        string                       `protobuf:"bytes,10,opt,name=objective_codes,json=objectiveCodes,proto3" json:"objective_codes,omitempty"`
	ActualDistance        float64                      `protobuf:"fixed64,11,opt,name=actual_distance,json=actualDistance,proto3" json:"actual_distance,omitempty"`
	OutOfRoute            int32                        `protobuf:"varint,12,opt,name=out_of_route,json=outOfRoute,proto3" json:"out_of_route,omitempty"`
	StartDate             *timestamppb.Timestamp       `protobuf:"bytes,13,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate               *timestamppb.Timestamp       `protobuf:"bytes,14,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	FinishDate            *timestamppb.Timestamp       `protobuf:"bytes,15,opt,name=finish_date,json=finishDate,proto3,oneof" json:"finish_date,omitempty"`
	SubmitDate            *timestamppb.Timestamp       `protobuf:"bytes,16,opt,name=submit_date,json=submitDate,proto3" json:"submit_date,omitempty"`
	TaskImageUrl          []string                     `protobuf:"bytes,17,rep,name=task_image_url,json=taskImageUrl,proto3" json:"task_image_url,omitempty"`
	TaskAnswer            int32                        `protobuf:"varint,18,opt,name=task_answer,json=taskAnswer,proto3" json:"task_answer,omitempty"`
	Status                int32                        `protobuf:"varint,19,opt,name=status,proto3" json:"status,omitempty"`
	EffectiveCall         int32                        `protobuf:"varint,20,opt,name=effective_call,json=effectiveCall,proto3" json:"effective_call,omitempty"`
	Address               *Address                     `protobuf:"bytes,21,opt,name=address,proto3" json:"address,omitempty"`
	Salesperson           *User                        `protobuf:"bytes,22,opt,name=salesperson,proto3" json:"salesperson,omitempty"`
	CustomerAcquisition   *CustomerAcquisitionResponse `protobuf:"bytes,23,opt,name=customer_acquisition,json=customerAcquisition,proto3" json:"customer_acquisition,omitempty"`
	ObectiveValues        []*SalesAssignmentObjective  `protobuf:"bytes,24,rep,name=obective_values,json=obectiveValues,proto3" json:"obective_values,omitempty"`
}

func (x *SalesAssignmentItem) Reset() {
	*x = SalesAssignmentItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesAssignmentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesAssignmentItem) ProtoMessage() {}

func (x *SalesAssignmentItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesAssignmentItem.ProtoReflect.Descriptor instead.
func (*SalesAssignmentItem) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{12}
}

func (x *SalesAssignmentItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SalesAssignmentItem) GetSalesAssignmentId() int64 {
	if x != nil && x.SalesAssignmentId != nil {
		return *x.SalesAssignmentId
	}
	return 0
}

func (x *SalesAssignmentItem) GetSalesPersonId() int64 {
	if x != nil {
		return x.SalesPersonId
	}
	return 0
}

func (x *SalesAssignmentItem) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *SalesAssignmentItem) GetCustomerAcquisitionId() int64 {
	if x != nil {
		return x.CustomerAcquisitionId
	}
	return 0
}

func (x *SalesAssignmentItem) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *SalesAssignmentItem) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *SalesAssignmentItem) GetTask() int32 {
	if x != nil {
		return x.Task
	}
	return 0
}

func (x *SalesAssignmentItem) GetCustomerType() int32 {
	if x != nil {
		return x.CustomerType
	}
	return 0
}

func (x *SalesAssignmentItem) GetObjectiveCodes() string {
	if x != nil {
		return x.ObjectiveCodes
	}
	return ""
}

func (x *SalesAssignmentItem) GetActualDistance() float64 {
	if x != nil {
		return x.ActualDistance
	}
	return 0
}

func (x *SalesAssignmentItem) GetOutOfRoute() int32 {
	if x != nil {
		return x.OutOfRoute
	}
	return 0
}

func (x *SalesAssignmentItem) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *SalesAssignmentItem) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *SalesAssignmentItem) GetFinishDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishDate
	}
	return nil
}

func (x *SalesAssignmentItem) GetSubmitDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDate
	}
	return nil
}

func (x *SalesAssignmentItem) GetTaskImageUrl() []string {
	if x != nil {
		return x.TaskImageUrl
	}
	return nil
}

func (x *SalesAssignmentItem) GetTaskAnswer() int32 {
	if x != nil {
		return x.TaskAnswer
	}
	return 0
}

func (x *SalesAssignmentItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SalesAssignmentItem) GetEffectiveCall() int32 {
	if x != nil {
		return x.EffectiveCall
	}
	return 0
}

func (x *SalesAssignmentItem) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SalesAssignmentItem) GetSalesperson() *User {
	if x != nil {
		return x.Salesperson
	}
	return nil
}

func (x *SalesAssignmentItem) GetCustomerAcquisition() *CustomerAcquisitionResponse {
	if x != nil {
		return x.CustomerAcquisition
	}
	return nil
}

func (x *SalesAssignmentItem) GetObectiveValues() []*SalesAssignmentObjective {
	if x != nil {
		return x.ObectiveValues
	}
	return nil
}

type GetSalesAssignmentItemListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit          int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status         int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search         string                 `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy        string                 `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	TeritoryId     int64                  `protobuf:"varint,7,opt,name=teritory_id,json=teritoryId,proto3" json:"teritory_id,omitempty"`
	SalespersonId  int64                  `protobuf:"varint,8,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
	Task           int32                  `protobuf:"varint,9,opt,name=task,proto3" json:"task,omitempty"`
	OutOfRoute     int32                  `protobuf:"varint,10,opt,name=out_of_route,json=outOfRoute,proto3" json:"out_of_route,omitempty"`
	SubmitDateFrom *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=submit_date_from,json=submitDateFrom,proto3" json:"submit_date_from,omitempty"`
	SubmitDateTo   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=submit_date_to,json=submitDateTo,proto3" json:"submit_date_to,omitempty"`
	StartDateFrom  *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=start_date_from,json=startDateFrom,proto3" json:"start_date_from,omitempty"`
	StartDateTo    *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=start_date_to,json=startDateTo,proto3" json:"start_date_to,omitempty"`
	EndDateFrom    *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=end_date_from,json=endDateFrom,proto3" json:"end_date_from,omitempty"`
	EndDateTo      *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=end_date_to,json=endDateTo,proto3" json:"end_date_to,omitempty"`
	CustomerType   int32                  `protobuf:"varint,17,opt,name=customer_type,json=customerType,proto3" json:"customer_type,omitempty"`
}

func (x *GetSalesAssignmentItemListRequest) Reset() {
	*x = GetSalesAssignmentItemListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentItemListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentItemListRequest) ProtoMessage() {}

func (x *GetSalesAssignmentItemListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentItemListRequest.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentItemListRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetSalesAssignmentItemListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSalesAssignmentItemListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSalesAssignmentItemListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSalesAssignmentItemListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetSalesAssignmentItemListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetSalesAssignmentItemListRequest) GetTeritoryId() int64 {
	if x != nil {
		return x.TeritoryId
	}
	return 0
}

func (x *GetSalesAssignmentItemListRequest) GetSalespersonId() int64 {
	if x != nil {
		return x.SalespersonId
	}
	return 0
}

func (x *GetSalesAssignmentItemListRequest) GetTask() int32 {
	if x != nil {
		return x.Task
	}
	return 0
}

func (x *GetSalesAssignmentItemListRequest) GetOutOfRoute() int32 {
	if x != nil {
		return x.OutOfRoute
	}
	return 0
}

func (x *GetSalesAssignmentItemListRequest) GetSubmitDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDateFrom
	}
	return nil
}

func (x *GetSalesAssignmentItemListRequest) GetSubmitDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDateTo
	}
	return nil
}

func (x *GetSalesAssignmentItemListRequest) GetStartDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDateFrom
	}
	return nil
}

func (x *GetSalesAssignmentItemListRequest) GetStartDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDateTo
	}
	return nil
}

func (x *GetSalesAssignmentItemListRequest) GetEndDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDateFrom
	}
	return nil
}

func (x *GetSalesAssignmentItemListRequest) GetEndDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDateTo
	}
	return nil
}

func (x *GetSalesAssignmentItemListRequest) GetCustomerType() int32 {
	if x != nil {
		return x.CustomerType
	}
	return 0
}

type GetSalesAssignmentItemListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*SalesAssignmentItem `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesAssignmentItemListResponse) Reset() {
	*x = GetSalesAssignmentItemListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentItemListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentItemListResponse) ProtoMessage() {}

func (x *GetSalesAssignmentItemListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentItemListResponse.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentItemListResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetSalesAssignmentItemListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesAssignmentItemListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesAssignmentItemListResponse) GetData() []*SalesAssignmentItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSalesAssignmentItemDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetSalesAssignmentItemDetailRequest) Reset() {
	*x = GetSalesAssignmentItemDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentItemDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentItemDetailRequest) ProtoMessage() {}

func (x *GetSalesAssignmentItemDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentItemDetailRequest.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentItemDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetSalesAssignmentItemDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSalesAssignmentItemDetailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetSalesAssignmentItemDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SalesAssignmentItem `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesAssignmentItemDetailResponse) Reset() {
	*x = GetSalesAssignmentItemDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentItemDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentItemDetailResponse) ProtoMessage() {}

func (x *GetSalesAssignmentItemDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentItemDetailResponse.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentItemDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetSalesAssignmentItemDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesAssignmentItemDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesAssignmentItemDetailResponse) GetData() *SalesAssignmentItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type SalesAssignmentObjective struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code       string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Name       string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Objective  string                 `protobuf:"bytes,4,opt,name=objective,proto3" json:"objective,omitempty"`
	SurveyLink string                 `protobuf:"bytes,5,opt,name=survey_link,json=surveyLink,proto3" json:"survey_link,omitempty"`
	Status     int32                  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy  int64                  `protobuf:"varint,8,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *SalesAssignmentObjective) Reset() {
	*x = SalesAssignmentObjective{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesAssignmentObjective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesAssignmentObjective) ProtoMessage() {}

func (x *SalesAssignmentObjective) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesAssignmentObjective.ProtoReflect.Descriptor instead.
func (*SalesAssignmentObjective) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{17}
}

func (x *SalesAssignmentObjective) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SalesAssignmentObjective) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SalesAssignmentObjective) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SalesAssignmentObjective) GetObjective() string {
	if x != nil {
		return x.Objective
	}
	return ""
}

func (x *SalesAssignmentObjective) GetSurveyLink() string {
	if x != nil {
		return x.SurveyLink
	}
	return ""
}

func (x *SalesAssignmentObjective) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SalesAssignmentObjective) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SalesAssignmentObjective) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *SalesAssignmentObjective) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetSalesAssignmentObjectiveListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int32    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status  int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search  string   `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	Codes   []string `protobuf:"bytes,5,rep,name=codes,proto3" json:"codes,omitempty"`
	OrderBy string   `protobuf:"bytes,6,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *GetSalesAssignmentObjectiveListRequest) Reset() {
	*x = GetSalesAssignmentObjectiveListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentObjectiveListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentObjectiveListRequest) ProtoMessage() {}

func (x *GetSalesAssignmentObjectiveListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentObjectiveListRequest.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentObjectiveListRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetSalesAssignmentObjectiveListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSalesAssignmentObjectiveListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSalesAssignmentObjectiveListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSalesAssignmentObjectiveListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetSalesAssignmentObjectiveListRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *GetSalesAssignmentObjectiveListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type GetSalesAssignmentObjectiveListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*SalesAssignmentObjective `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesAssignmentObjectiveListResponse) Reset() {
	*x = GetSalesAssignmentObjectiveListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentObjectiveListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentObjectiveListResponse) ProtoMessage() {}

func (x *GetSalesAssignmentObjectiveListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentObjectiveListResponse.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentObjectiveListResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetSalesAssignmentObjectiveListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesAssignmentObjectiveListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesAssignmentObjectiveListResponse) GetData() []*SalesAssignmentObjective {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSalesAssignmentObjectiveDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetSalesAssignmentObjectiveDetailRequest) Reset() {
	*x = GetSalesAssignmentObjectiveDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentObjectiveDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentObjectiveDetailRequest) ProtoMessage() {}

func (x *GetSalesAssignmentObjectiveDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentObjectiveDetailRequest.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentObjectiveDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetSalesAssignmentObjectiveDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSalesAssignmentObjectiveDetailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetSalesAssignmentObjectiveDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SalesAssignmentObjective `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesAssignmentObjectiveDetailResponse) Reset() {
	*x = GetSalesAssignmentObjectiveDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesAssignmentObjectiveDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesAssignmentObjectiveDetailResponse) ProtoMessage() {}

func (x *GetSalesAssignmentObjectiveDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesAssignmentObjectiveDetailResponse.ProtoReflect.Descriptor instead.
func (*GetSalesAssignmentObjectiveDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetSalesAssignmentObjectiveDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesAssignmentObjectiveDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesAssignmentObjectiveDetailResponse) GetData() *SalesAssignmentObjective {
	if x != nil {
		return x.Data
	}
	return nil
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	CustomerName  string                 `protobuf:"bytes,3,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	ArchetypeId   int64                  `protobuf:"varint,4,opt,name=archetype_id,json=archetypeId,proto3" json:"archetype_id,omitempty"`
	AdmDivisionId int64                  `protobuf:"varint,5,opt,name=adm_division_id,json=admDivisionId,proto3" json:"adm_division_id,omitempty"`
	SiteId        int64                  `protobuf:"varint,6,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	SalespersonId int64                  `protobuf:"varint,7,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
	TerritoryId   int64                  `protobuf:"varint,8,opt,name=territory_id,json=territoryId,proto3" json:"territory_id,omitempty"`
	AddressCode   string                 `protobuf:"bytes,9,opt,name=address_code,json=addressCode,proto3" json:"address_code,omitempty"`
	AddressName   string                 `protobuf:"bytes,10,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,33,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{22}
}

func (x *Address) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Address) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Address) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *Address) GetArchetypeId() int64 {
	if x != nil {
		return x.ArchetypeId
	}
	return 0
}

func (x *Address) GetAdmDivisionId() int64 {
	if x != nil {
		return x.AdmDivisionId
	}
	return 0
}

func (x *Address) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *Address) GetSalespersonId() int64 {
	if x != nil {
		return x.SalespersonId
	}
	return 0
}

func (x *Address) GetTerritoryId() int64 {
	if x != nil {
		return x.TerritoryId
	}
	return 0
}

func (x *Address) GetAddressCode() string {
	if x != nil {
		return x.AddressCode
	}
	return ""
}

func (x *Address) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *Address) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Email        string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	RegionId     int64  `protobuf:"varint,3,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	ParentId     int64  `protobuf:"varint,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	SiteId       int64  `protobuf:"varint,5,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	TerritoryId  int64  `protobuf:"varint,6,opt,name=territory_id,json=territoryId,proto3" json:"territory_id,omitempty"`
	EmployeeCode string `protobuf:"bytes,7,opt,name=employee_code,json=employeeCode,proto3" json:"employee_code,omitempty"`
	Name         string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Nickname     string `protobuf:"bytes,9,opt,name=nickname,proto3" json:"nickname,omitempty"`
	PhoneNumber  string `protobuf:"bytes,10,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Status       int32  `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{23}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetRegionId() int64 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

func (x *User) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *User) GetSiteId() int64 {
	if x != nil {
		return x.SiteId
	}
	return 0
}

func (x *User) GetTerritoryId() int64 {
	if x != nil {
		return x.TerritoryId
	}
	return 0
}

func (x *User) GetEmployeeCode() string {
	if x != nil {
		return x.EmployeeCode
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *User) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *User) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type BooleanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Existed bool `protobuf:"varint,1,opt,name=existed,proto3" json:"existed,omitempty"`
}

func (x *BooleanResponse) Reset() {
	*x = BooleanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanResponse) ProtoMessage() {}

func (x *BooleanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanResponse.ProtoReflect.Descriptor instead.
func (*BooleanResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{24}
}

func (x *BooleanResponse) GetExisted() bool {
	if x != nil {
		return x.Existed
	}
	return false
}

type CheckTaskCustomerAcquisitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalespersonId int64 `protobuf:"varint,1,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
}

func (x *CheckTaskCustomerAcquisitionRequest) Reset() {
	*x = CheckTaskCustomerAcquisitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTaskCustomerAcquisitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskCustomerAcquisitionRequest) ProtoMessage() {}

func (x *CheckTaskCustomerAcquisitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskCustomerAcquisitionRequest.ProtoReflect.Descriptor instead.
func (*CheckTaskCustomerAcquisitionRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{25}
}

func (x *CheckTaskCustomerAcquisitionRequest) GetSalespersonId() int64 {
	if x != nil {
		return x.SalespersonId
	}
	return 0
}

type CheckTaskCustomerAcquisitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *BooleanResponse `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CheckTaskCustomerAcquisitionResponse) Reset() {
	*x = CheckTaskCustomerAcquisitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTaskCustomerAcquisitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskCustomerAcquisitionResponse) ProtoMessage() {}

func (x *CheckTaskCustomerAcquisitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskCustomerAcquisitionResponse.ProtoReflect.Descriptor instead.
func (*CheckTaskCustomerAcquisitionResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{26}
}

func (x *CheckTaskCustomerAcquisitionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckTaskCustomerAcquisitionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckTaskCustomerAcquisitionResponse) GetData() *BooleanResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckTaskSalesAssignmentItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalespersonId int64 `protobuf:"varint,1,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
}

func (x *CheckTaskSalesAssignmentItemRequest) Reset() {
	*x = CheckTaskSalesAssignmentItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTaskSalesAssignmentItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskSalesAssignmentItemRequest) ProtoMessage() {}

func (x *CheckTaskSalesAssignmentItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskSalesAssignmentItemRequest.ProtoReflect.Descriptor instead.
func (*CheckTaskSalesAssignmentItemRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{27}
}

func (x *CheckTaskSalesAssignmentItemRequest) GetSalespersonId() int64 {
	if x != nil {
		return x.SalespersonId
	}
	return 0
}

type CheckTaskSalesAssignmentItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *BooleanResponse `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CheckTaskSalesAssignmentItemResponse) Reset() {
	*x = CheckTaskSalesAssignmentItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTaskSalesAssignmentItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskSalesAssignmentItemResponse) ProtoMessage() {}

func (x *CheckTaskSalesAssignmentItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskSalesAssignmentItemResponse.ProtoReflect.Descriptor instead.
func (*CheckTaskSalesAssignmentItemResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{28}
}

func (x *CheckTaskSalesAssignmentItemResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckTaskSalesAssignmentItemResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckTaskSalesAssignmentItemResponse) GetData() *BooleanResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateSubmitTaskVisitFURequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AddressId             int64   `protobuf:"varint,2,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	CustomerAcquisitionId int64   `protobuf:"varint,3,opt,name=customer_acquisition_id,json=customerAcquisitionId,proto3" json:"customer_acquisition_id,omitempty"`
	TaskAnswer            int64   `protobuf:"varint,4,opt,name=task_answer,json=taskAnswer,proto3" json:"task_answer,omitempty"`
	TaskImageUrls         string  `protobuf:"bytes,5,opt,name=task_image_urls,json=taskImageUrls,proto3" json:"task_image_urls,omitempty"`
	Latitude              float64 `protobuf:"fixed64,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude             float64 `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	ActualDistance        float64 `protobuf:"fixed64,8,opt,name=actual_distance,json=actualDistance,proto3" json:"actual_distance,omitempty"`
}

func (x *UpdateSubmitTaskVisitFURequest) Reset() {
	*x = UpdateSubmitTaskVisitFURequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubmitTaskVisitFURequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubmitTaskVisitFURequest) ProtoMessage() {}

func (x *UpdateSubmitTaskVisitFURequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubmitTaskVisitFURequest.ProtoReflect.Descriptor instead.
func (*UpdateSubmitTaskVisitFURequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateSubmitTaskVisitFURequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSubmitTaskVisitFURequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *UpdateSubmitTaskVisitFURequest) GetCustomerAcquisitionId() int64 {
	if x != nil {
		return x.CustomerAcquisitionId
	}
	return 0
}

func (x *UpdateSubmitTaskVisitFURequest) GetTaskAnswer() int64 {
	if x != nil {
		return x.TaskAnswer
	}
	return 0
}

func (x *UpdateSubmitTaskVisitFURequest) GetTaskImageUrls() string {
	if x != nil {
		return x.TaskImageUrls
	}
	return ""
}

func (x *UpdateSubmitTaskVisitFURequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UpdateSubmitTaskVisitFURequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *UpdateSubmitTaskVisitFURequest) GetActualDistance() float64 {
	if x != nil {
		return x.ActualDistance
	}
	return 0
}

type UpdateSubmitTaskVisitFUResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SalesAssignmentItem `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateSubmitTaskVisitFUResponse) Reset() {
	*x = UpdateSubmitTaskVisitFUResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubmitTaskVisitFUResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubmitTaskVisitFUResponse) ProtoMessage() {}

func (x *UpdateSubmitTaskVisitFUResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubmitTaskVisitFUResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubmitTaskVisitFUResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateSubmitTaskVisitFUResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateSubmitTaskVisitFUResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateSubmitTaskVisitFUResponse) GetData() *SalesAssignmentItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckoutTaskVisitFURequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Task                int32 `protobuf:"varint,2,opt,name=task,proto3" json:"task,omitempty"`
	CustomerAcquisition bool  `protobuf:"varint,3,opt,name=customer_acquisition,json=customerAcquisition,proto3" json:"customer_acquisition,omitempty"`
}

func (x *CheckoutTaskVisitFURequest) Reset() {
	*x = CheckoutTaskVisitFURequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutTaskVisitFURequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutTaskVisitFURequest) ProtoMessage() {}

func (x *CheckoutTaskVisitFURequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutTaskVisitFURequest.ProtoReflect.Descriptor instead.
func (*CheckoutTaskVisitFURequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{31}
}

func (x *CheckoutTaskVisitFURequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CheckoutTaskVisitFURequest) GetTask() int32 {
	if x != nil {
		return x.Task
	}
	return 0
}

func (x *CheckoutTaskVisitFURequest) GetCustomerAcquisition() bool {
	if x != nil {
		return x.CustomerAcquisition
	}
	return false
}

type CheckoutTaskVisitFUResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *string `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *CheckoutTaskVisitFUResponse) Reset() {
	*x = CheckoutTaskVisitFUResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutTaskVisitFUResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutTaskVisitFUResponse) ProtoMessage() {}

func (x *CheckoutTaskVisitFUResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutTaskVisitFUResponse.ProtoReflect.Descriptor instead.
func (*CheckoutTaskVisitFUResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{32}
}

func (x *CheckoutTaskVisitFUResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckoutTaskVisitFUResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckoutTaskVisitFUResponse) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type BulkCheckoutTaskVisitFURequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalespersonId int64 `protobuf:"varint,1,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
}

func (x *BulkCheckoutTaskVisitFURequest) Reset() {
	*x = BulkCheckoutTaskVisitFURequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCheckoutTaskVisitFURequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCheckoutTaskVisitFURequest) ProtoMessage() {}

func (x *BulkCheckoutTaskVisitFURequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCheckoutTaskVisitFURequest.ProtoReflect.Descriptor instead.
func (*BulkCheckoutTaskVisitFURequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{33}
}

func (x *BulkCheckoutTaskVisitFURequest) GetSalespersonId() int64 {
	if x != nil {
		return x.SalespersonId
	}
	return 0
}

type BulkCheckoutTaskVisitFUResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *string `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *BulkCheckoutTaskVisitFUResponse) Reset() {
	*x = BulkCheckoutTaskVisitFUResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCheckoutTaskVisitFUResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCheckoutTaskVisitFUResponse) ProtoMessage() {}

func (x *BulkCheckoutTaskVisitFUResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCheckoutTaskVisitFUResponse.ProtoReflect.Descriptor instead.
func (*BulkCheckoutTaskVisitFUResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{34}
}

func (x *BulkCheckoutTaskVisitFUResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BulkCheckoutTaskVisitFUResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BulkCheckoutTaskVisitFUResponse) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type CustomerAcquisitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code             string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Task             int32                  `protobuf:"varint,3,opt,name=task,proto3" json:"task,omitempty"`
	Name             string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	PhoneNumber      string                 `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Latitude         float64                `protobuf:"fixed64,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude        float64                `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	AddressName      string                 `protobuf:"bytes,8,opt,name=address_name,json=addressName,proto3" json:"address_name,omitempty"`
	FoodApp          int32                  `protobuf:"varint,9,opt,name=food_app,json=foodApp,proto3" json:"food_app,omitempty"`
	PotentialRevenue float64                `protobuf:"fixed64,10,opt,name=potential_revenue,json=potentialRevenue,proto3" json:"potential_revenue,omitempty"`
	TaskImageUrl     string                 `protobuf:"bytes,11,opt,name=task_image_url,json=taskImageUrl,proto3" json:"task_image_url,omitempty"`
	SalespersonId    int64                  `protobuf:"varint,12,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
	TerritoryId      int64                  `protobuf:"varint,13,opt,name=territory_id,json=territoryId,proto3" json:"territory_id,omitempty"`
	FinishDate       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=finish_date,json=finishDate,proto3" json:"finish_date,omitempty"`
	SubmitDate       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=submit_date,json=submitDate,proto3" json:"submit_date,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status           int32                  `protobuf:"varint,18,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CustomerAcquisitionResponse) Reset() {
	*x = CustomerAcquisitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerAcquisitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerAcquisitionResponse) ProtoMessage() {}

func (x *CustomerAcquisitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerAcquisitionResponse.ProtoReflect.Descriptor instead.
func (*CustomerAcquisitionResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{35}
}

func (x *CustomerAcquisitionResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomerAcquisitionResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CustomerAcquisitionResponse) GetTask() int32 {
	if x != nil {
		return x.Task
	}
	return 0
}

func (x *CustomerAcquisitionResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomerAcquisitionResponse) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CustomerAcquisitionResponse) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CustomerAcquisitionResponse) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CustomerAcquisitionResponse) GetAddressName() string {
	if x != nil {
		return x.AddressName
	}
	return ""
}

func (x *CustomerAcquisitionResponse) GetFoodApp() int32 {
	if x != nil {
		return x.FoodApp
	}
	return 0
}

func (x *CustomerAcquisitionResponse) GetPotentialRevenue() float64 {
	if x != nil {
		return x.PotentialRevenue
	}
	return 0
}

func (x *CustomerAcquisitionResponse) GetTaskImageUrl() string {
	if x != nil {
		return x.TaskImageUrl
	}
	return ""
}

func (x *CustomerAcquisitionResponse) GetSalespersonId() int64 {
	if x != nil {
		return x.SalespersonId
	}
	return 0
}

func (x *CustomerAcquisitionResponse) GetTerritoryId() int64 {
	if x != nil {
		return x.TerritoryId
	}
	return 0
}

func (x *CustomerAcquisitionResponse) GetFinishDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishDate
	}
	return nil
}

func (x *CustomerAcquisitionResponse) GetSubmitDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDate
	}
	return nil
}

func (x *CustomerAcquisitionResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CustomerAcquisitionResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CustomerAcquisitionResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CustomerAcquisitionItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerAcquisitionId int64                  `protobuf:"varint,2,opt,name=customer_acquisition_id,json=customerAcquisitionId,proto3" json:"customer_acquisition_id,omitempty"`
	ItemId                int64                  `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	IsTop                 int32                  `protobuf:"varint,4,opt,name=is_top,json=isTop,proto3" json:"is_top,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CustomerAcquisitionItemResponse) Reset() {
	*x = CustomerAcquisitionItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerAcquisitionItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerAcquisitionItemResponse) ProtoMessage() {}

func (x *CustomerAcquisitionItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerAcquisitionItemResponse.ProtoReflect.Descriptor instead.
func (*CustomerAcquisitionItemResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{36}
}

func (x *CustomerAcquisitionItemResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomerAcquisitionItemResponse) GetCustomerAcquisitionId() int64 {
	if x != nil {
		return x.CustomerAcquisitionId
	}
	return 0
}

func (x *CustomerAcquisitionItemResponse) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *CustomerAcquisitionItemResponse) GetIsTop() int32 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *CustomerAcquisitionItemResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CustomerAcquisitionItemResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SubmitTaskCustomerAcquisitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalespersonId            int64                 `protobuf:"varint,1,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
	CustomerName             string                `protobuf:"bytes,2,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	PhoneNumber              string                `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	AddressDetail            string                `protobuf:"bytes,4,opt,name=address_detail,json=addressDetail,proto3" json:"address_detail,omitempty"`
	FoodApp                  int32                 `protobuf:"varint,5,opt,name=food_app,json=foodApp,proto3" json:"food_app,omitempty"`
	UserLatitude             float64               `protobuf:"fixed64,6,opt,name=userLatitude,proto3" json:"userLatitude,omitempty"`
	UserLongitude            float64               `protobuf:"fixed64,7,opt,name=user_longitude,json=userLongitude,proto3" json:"user_longitude,omitempty"`
	PotentialRevenue         float64               `protobuf:"fixed64,8,opt,name=potential_revenue,json=potentialRevenue,proto3" json:"potential_revenue,omitempty"`
	CustomerAcquisitionPhoto string                `protobuf:"bytes,9,opt,name=customer_acquisition_photo,json=customerAcquisitionPhoto,proto3" json:"customer_acquisition_photo,omitempty"`
	Product                  []*CustomerAcqProduct `protobuf:"bytes,10,rep,name=product,proto3" json:"product,omitempty"`
}

func (x *SubmitTaskCustomerAcquisitionRequest) Reset() {
	*x = SubmitTaskCustomerAcquisitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTaskCustomerAcquisitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskCustomerAcquisitionRequest) ProtoMessage() {}

func (x *SubmitTaskCustomerAcquisitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskCustomerAcquisitionRequest.ProtoReflect.Descriptor instead.
func (*SubmitTaskCustomerAcquisitionRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{37}
}

func (x *SubmitTaskCustomerAcquisitionRequest) GetSalespersonId() int64 {
	if x != nil {
		return x.SalespersonId
	}
	return 0
}

func (x *SubmitTaskCustomerAcquisitionRequest) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *SubmitTaskCustomerAcquisitionRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SubmitTaskCustomerAcquisitionRequest) GetAddressDetail() string {
	if x != nil {
		return x.AddressDetail
	}
	return ""
}

func (x *SubmitTaskCustomerAcquisitionRequest) GetFoodApp() int32 {
	if x != nil {
		return x.FoodApp
	}
	return 0
}

func (x *SubmitTaskCustomerAcquisitionRequest) GetUserLatitude() float64 {
	if x != nil {
		return x.UserLatitude
	}
	return 0
}

func (x *SubmitTaskCustomerAcquisitionRequest) GetUserLongitude() float64 {
	if x != nil {
		return x.UserLongitude
	}
	return 0
}

func (x *SubmitTaskCustomerAcquisitionRequest) GetPotentialRevenue() float64 {
	if x != nil {
		return x.PotentialRevenue
	}
	return 0
}

func (x *SubmitTaskCustomerAcquisitionRequest) GetCustomerAcquisitionPhoto() string {
	if x != nil {
		return x.CustomerAcquisitionPhoto
	}
	return ""
}

func (x *SubmitTaskCustomerAcquisitionRequest) GetProduct() []*CustomerAcqProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

type CustomerAcqProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Top int32 `protobuf:"varint,2,opt,name=top,proto3" json:"top,omitempty"`
}

func (x *CustomerAcqProduct) Reset() {
	*x = CustomerAcqProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerAcqProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerAcqProduct) ProtoMessage() {}

func (x *CustomerAcqProduct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerAcqProduct.ProtoReflect.Descriptor instead.
func (*CustomerAcqProduct) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{38}
}

func (x *CustomerAcqProduct) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomerAcqProduct) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

type SubmitTaskCustomerAcquisitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                    int32                              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message                 string                             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CustomerAcquisition     *CustomerAcquisitionResponse       `protobuf:"bytes,3,opt,name=customer_acquisition,json=customerAcquisition,proto3" json:"customer_acquisition,omitempty"`
	CustomerAcquisitionItem []*CustomerAcquisitionItemResponse `protobuf:"bytes,4,rep,name=customer_acquisition_item,json=customerAcquisitionItem,proto3" json:"customer_acquisition_item,omitempty"`
}

func (x *SubmitTaskCustomerAcquisitionResponse) Reset() {
	*x = SubmitTaskCustomerAcquisitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTaskCustomerAcquisitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskCustomerAcquisitionResponse) ProtoMessage() {}

func (x *SubmitTaskCustomerAcquisitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskCustomerAcquisitionResponse.ProtoReflect.Descriptor instead.
func (*SubmitTaskCustomerAcquisitionResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{39}
}

func (x *SubmitTaskCustomerAcquisitionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SubmitTaskCustomerAcquisitionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SubmitTaskCustomerAcquisitionResponse) GetCustomerAcquisition() *CustomerAcquisitionResponse {
	if x != nil {
		return x.CustomerAcquisition
	}
	return nil
}

func (x *SubmitTaskCustomerAcquisitionResponse) GetCustomerAcquisitionItem() []*CustomerAcquisitionItemResponse {
	if x != nil {
		return x.CustomerAcquisitionItem
	}
	return nil
}

type SalesFailedVisitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SalesAssignmentItemId int64    `protobuf:"varint,2,opt,name=sales_assignment_item_id,json=salesAssignmentItemId,proto3" json:"sales_assignment_item_id,omitempty"`
	FailedStatus          int64    `protobuf:"varint,3,opt,name=failed_status,json=failedStatus,proto3" json:"failed_status,omitempty"`
	DescriptionFailed     *string  `protobuf:"bytes,4,opt,name=description_failed,json=descriptionFailed,proto3,oneof" json:"description_failed,omitempty"`
	FailedImage           []string `protobuf:"bytes,5,rep,name=failed_image,json=failedImage,proto3" json:"failed_image,omitempty"`
}

func (x *SalesFailedVisitResponse) Reset() {
	*x = SalesFailedVisitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesFailedVisitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesFailedVisitResponse) ProtoMessage() {}

func (x *SalesFailedVisitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesFailedVisitResponse.ProtoReflect.Descriptor instead.
func (*SalesFailedVisitResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{40}
}

func (x *SalesFailedVisitResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SalesFailedVisitResponse) GetSalesAssignmentItemId() int64 {
	if x != nil {
		return x.SalesAssignmentItemId
	}
	return 0
}

func (x *SalesFailedVisitResponse) GetFailedStatus() int64 {
	if x != nil {
		return x.FailedStatus
	}
	return 0
}

func (x *SalesFailedVisitResponse) GetDescriptionFailed() string {
	if x != nil && x.DescriptionFailed != nil {
		return *x.DescriptionFailed
	}
	return ""
}

func (x *SalesFailedVisitResponse) GetFailedImage() []string {
	if x != nil {
		return x.FailedImage
	}
	return nil
}

type SubmitTaskFailedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *SalesFailedVisitResponse `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SubmitTaskFailedResponse) Reset() {
	*x = SubmitTaskFailedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTaskFailedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskFailedResponse) ProtoMessage() {}

func (x *SubmitTaskFailedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskFailedResponse.ProtoReflect.Descriptor instead.
func (*SubmitTaskFailedResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{41}
}

func (x *SubmitTaskFailedResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SubmitTaskFailedResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SubmitTaskFailedResponse) GetData() *SalesFailedVisitResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type SubmitTaskFailedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesAssignmentItemId int64   `protobuf:"varint,1,opt,name=sales_assignment_item_id,json=salesAssignmentItemId,proto3" json:"sales_assignment_item_id,omitempty"`
	FailedStatus          int64   `protobuf:"varint,2,opt,name=failed_status,json=failedStatus,proto3" json:"failed_status,omitempty"`
	DescriptionFailed     *string `protobuf:"bytes,3,opt,name=description_failed,json=descriptionFailed,proto3,oneof" json:"description_failed,omitempty"`
	FailedImage           string  `protobuf:"bytes,4,opt,name=failed_image,json=failedImage,proto3" json:"failed_image,omitempty"`
}

func (x *SubmitTaskFailedRequest) Reset() {
	*x = SubmitTaskFailedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitTaskFailedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskFailedRequest) ProtoMessage() {}

func (x *SubmitTaskFailedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskFailedRequest.ProtoReflect.Descriptor instead.
func (*SubmitTaskFailedRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{42}
}

func (x *SubmitTaskFailedRequest) GetSalesAssignmentItemId() int64 {
	if x != nil {
		return x.SalesAssignmentItemId
	}
	return 0
}

func (x *SubmitTaskFailedRequest) GetFailedStatus() int64 {
	if x != nil {
		return x.FailedStatus
	}
	return 0
}

func (x *SubmitTaskFailedRequest) GetDescriptionFailed() string {
	if x != nil && x.DescriptionFailed != nil {
		return *x.DescriptionFailed
	}
	return ""
}

func (x *SubmitTaskFailedRequest) GetFailedImage() string {
	if x != nil {
		return x.FailedImage
	}
	return ""
}

type CreateSalesAssignmentItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesAssignmentId     *int64                 `protobuf:"varint,1,opt,name=sales_assignment_id,json=salesAssignmentId,proto3,oneof" json:"sales_assignment_id,omitempty"`
	CustomerAcquisitionId int64                  `protobuf:"varint,2,opt,name=customer_acquisition_id,json=customerAcquisitionId,proto3" json:"customer_acquisition_id,omitempty"`
	AddressId             int64                  `protobuf:"varint,3,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	Latitude              float64                `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude             float64                `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Task                  int32                  `protobuf:"varint,6,opt,name=task,proto3" json:"task,omitempty"`
	CustomerType          int32                  `protobuf:"varint,7,opt,name=customer_type,json=customerType,proto3" json:"customer_type,omitempty"`
	ObjectiveCodes        string                 `protobuf:"bytes,8,opt,name=objective_codes,json=objectiveCodes,proto3" json:"objective_codes,omitempty"`
	ActualDistance        float64                `protobuf:"fixed64,9,opt,name=actual_distance,json=actualDistance,proto3" json:"actual_distance,omitempty"`
	OutOfRoute            int32                  `protobuf:"varint,10,opt,name=out_of_route,json=outOfRoute,proto3" json:"out_of_route,omitempty"`
	StartDate             *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate               *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	FinishDate            *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=finish_date,json=finishDate,proto3,oneof" json:"finish_date,omitempty"`
	SubmitDate            *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=submit_date,json=submitDate,proto3" json:"submit_date,omitempty"`
	TaskImageUrls         string                 `protobuf:"bytes,15,opt,name=task_image_urls,json=taskImageUrls,proto3" json:"task_image_urls,omitempty"`
	TaskAnswer            int32                  `protobuf:"varint,16,opt,name=task_answer,json=taskAnswer,proto3" json:"task_answer,omitempty"`
	Status                int32                  `protobuf:"varint,17,opt,name=status,proto3" json:"status,omitempty"`
	StatusConvert         string                 `protobuf:"bytes,18,opt,name=status_convert,json=statusConvert,proto3" json:"status_convert,omitempty"`
	EffectiveCall         int32                  `protobuf:"varint,19,opt,name=effective_call,json=effectiveCall,proto3" json:"effective_call,omitempty"`
	SalesersonId          int64                  `protobuf:"varint,20,opt,name=saleserson_id,json=salesersonId,proto3" json:"saleserson_id,omitempty"`
}

func (x *CreateSalesAssignmentItemRequest) Reset() {
	*x = CreateSalesAssignmentItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSalesAssignmentItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSalesAssignmentItemRequest) ProtoMessage() {}

func (x *CreateSalesAssignmentItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSalesAssignmentItemRequest.ProtoReflect.Descriptor instead.
func (*CreateSalesAssignmentItemRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{43}
}

func (x *CreateSalesAssignmentItemRequest) GetSalesAssignmentId() int64 {
	if x != nil && x.SalesAssignmentId != nil {
		return *x.SalesAssignmentId
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetCustomerAcquisitionId() int64 {
	if x != nil {
		return x.CustomerAcquisitionId
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetTask() int32 {
	if x != nil {
		return x.Task
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetCustomerType() int32 {
	if x != nil {
		return x.CustomerType
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetObjectiveCodes() string {
	if x != nil {
		return x.ObjectiveCodes
	}
	return ""
}

func (x *CreateSalesAssignmentItemRequest) GetActualDistance() float64 {
	if x != nil {
		return x.ActualDistance
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetOutOfRoute() int32 {
	if x != nil {
		return x.OutOfRoute
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreateSalesAssignmentItemRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *CreateSalesAssignmentItemRequest) GetFinishDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishDate
	}
	return nil
}

func (x *CreateSalesAssignmentItemRequest) GetSubmitDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDate
	}
	return nil
}

func (x *CreateSalesAssignmentItemRequest) GetTaskImageUrls() string {
	if x != nil {
		return x.TaskImageUrls
	}
	return ""
}

func (x *CreateSalesAssignmentItemRequest) GetTaskAnswer() int32 {
	if x != nil {
		return x.TaskAnswer
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetStatusConvert() string {
	if x != nil {
		return x.StatusConvert
	}
	return ""
}

func (x *CreateSalesAssignmentItemRequest) GetEffectiveCall() int32 {
	if x != nil {
		return x.EffectiveCall
	}
	return 0
}

func (x *CreateSalesAssignmentItemRequest) GetSalesersonId() int64 {
	if x != nil {
		return x.SalesersonId
	}
	return 0
}

type GetCustomerAcquisitionByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCustomerAcquisitionByIdRequest) Reset() {
	*x = GetCustomerAcquisitionByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerAcquisitionByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerAcquisitionByIdRequest) ProtoMessage() {}

func (x *GetCustomerAcquisitionByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerAcquisitionByIdRequest.ProtoReflect.Descriptor instead.
func (*GetCustomerAcquisitionByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{44}
}

func (x *GetCustomerAcquisitionByIdRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCustomerAcquisitionDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *CustomerAcquisitionResponse `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCustomerAcquisitionDetailResponse) Reset() {
	*x = GetCustomerAcquisitionDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerAcquisitionDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerAcquisitionDetailResponse) ProtoMessage() {}

func (x *GetCustomerAcquisitionDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerAcquisitionDetailResponse.ProtoReflect.Descriptor instead.
func (*GetCustomerAcquisitionDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{45}
}

func (x *GetCustomerAcquisitionDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCustomerAcquisitionDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCustomerAcquisitionDetailResponse) GetData() *CustomerAcquisitionResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCustomerAcquisitionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit          int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status         int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search         string                 `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy        string                 `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	TeritoryId     int64                  `protobuf:"varint,7,opt,name=teritory_id,json=teritoryId,proto3" json:"teritory_id,omitempty"`
	SalespersonId  int64                  `protobuf:"varint,8,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
	SubmitDateFrom *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=submit_date_from,json=submitDateFrom,proto3" json:"submit_date_from,omitempty"`
	SubmitDateTo   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=submit_date_to,json=submitDateTo,proto3" json:"submit_date_to,omitempty"`
}

func (x *GetCustomerAcquisitionListRequest) Reset() {
	*x = GetCustomerAcquisitionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerAcquisitionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerAcquisitionListRequest) ProtoMessage() {}

func (x *GetCustomerAcquisitionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerAcquisitionListRequest.ProtoReflect.Descriptor instead.
func (*GetCustomerAcquisitionListRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{46}
}

func (x *GetCustomerAcquisitionListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetCustomerAcquisitionListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetCustomerAcquisitionListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetCustomerAcquisitionListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetCustomerAcquisitionListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetCustomerAcquisitionListRequest) GetTeritoryId() int64 {
	if x != nil {
		return x.TeritoryId
	}
	return 0
}

func (x *GetCustomerAcquisitionListRequest) GetSalespersonId() int64 {
	if x != nil {
		return x.SalespersonId
	}
	return 0
}

func (x *GetCustomerAcquisitionListRequest) GetSubmitDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDateFrom
	}
	return nil
}

func (x *GetCustomerAcquisitionListRequest) GetSubmitDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDateTo
	}
	return nil
}

type GetCustomerAcquisitionListWithExcludedIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit          int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status         int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search         string                 `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy        string                 `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	TeritoryId     int64                  `protobuf:"varint,7,opt,name=teritory_id,json=teritoryId,proto3" json:"teritory_id,omitempty"`
	SalespersonId  int64                  `protobuf:"varint,8,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
	SubmitDateFrom *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=submit_date_from,json=submitDateFrom,proto3" json:"submit_date_from,omitempty"`
	SubmitDateTo   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=submit_date_to,json=submitDateTo,proto3" json:"submit_date_to,omitempty"`
	ExcludedIds    []int64                `protobuf:"varint,14,rep,packed,name=excluded_ids,json=excludedIds,proto3" json:"excluded_ids,omitempty"`
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) Reset() {
	*x = GetCustomerAcquisitionListWithExcludedIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerAcquisitionListWithExcludedIdsRequest) ProtoMessage() {}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerAcquisitionListWithExcludedIdsRequest.ProtoReflect.Descriptor instead.
func (*GetCustomerAcquisitionListWithExcludedIdsRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{47}
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) GetTeritoryId() int64 {
	if x != nil {
		return x.TeritoryId
	}
	return 0
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) GetSalespersonId() int64 {
	if x != nil {
		return x.SalespersonId
	}
	return 0
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) GetSubmitDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDateFrom
	}
	return nil
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) GetSubmitDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDateTo
	}
	return nil
}

func (x *GetCustomerAcquisitionListWithExcludedIdsRequest) GetExcludedIds() []int64 {
	if x != nil {
		return x.ExcludedIds
	}
	return nil
}

type GetCustomerAcquisitionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*CustomerAcquisitionResponse `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCustomerAcquisitionListResponse) Reset() {
	*x = GetCustomerAcquisitionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerAcquisitionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerAcquisitionListResponse) ProtoMessage() {}

func (x *GetCustomerAcquisitionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerAcquisitionListResponse.ProtoReflect.Descriptor instead.
func (*GetCustomerAcquisitionListResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{48}
}

func (x *GetCustomerAcquisitionListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCustomerAcquisitionListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCustomerAcquisitionListResponse) GetData() []*CustomerAcquisitionResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetCountCustomerAcquisitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalespersonId  int64                  `protobuf:"varint,1,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
	SubmitDateFrom *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=submit_date_from,json=submitDateFrom,proto3" json:"submit_date_from,omitempty"`
	SubmitDateTo   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=submit_date_to,json=submitDateTo,proto3" json:"submit_date_to,omitempty"`
}

func (x *GetCountCustomerAcquisitionRequest) Reset() {
	*x = GetCountCustomerAcquisitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountCustomerAcquisitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountCustomerAcquisitionRequest) ProtoMessage() {}

func (x *GetCountCustomerAcquisitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountCustomerAcquisitionRequest.ProtoReflect.Descriptor instead.
func (*GetCountCustomerAcquisitionRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{49}
}

func (x *GetCountCustomerAcquisitionRequest) GetSalespersonId() int64 {
	if x != nil {
		return x.SalespersonId
	}
	return 0
}

func (x *GetCountCustomerAcquisitionRequest) GetSubmitDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDateFrom
	}
	return nil
}

func (x *GetCountCustomerAcquisitionRequest) GetSubmitDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDateTo
	}
	return nil
}

type GetCountCustomerAcquisitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *CountCustomerAcquisitionResponse `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCountCustomerAcquisitionResponse) Reset() {
	*x = GetCountCustomerAcquisitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountCustomerAcquisitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountCustomerAcquisitionResponse) ProtoMessage() {}

func (x *GetCountCustomerAcquisitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountCustomerAcquisitionResponse.ProtoReflect.Descriptor instead.
func (*GetCountCustomerAcquisitionResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{50}
}

func (x *GetCountCustomerAcquisitionResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCountCustomerAcquisitionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCountCustomerAcquisitionResponse) GetData() *CountCustomerAcquisitionResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type CountCustomerAcquisitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountCustomerAcquisitionResponse) Reset() {
	*x = CountCustomerAcquisitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountCustomerAcquisitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountCustomerAcquisitionResponse) ProtoMessage() {}

func (x *CountCustomerAcquisitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountCustomerAcquisitionResponse.ProtoReflect.Descriptor instead.
func (*CountCustomerAcquisitionResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{51}
}

func (x *CountCustomerAcquisitionResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetSalesSubmissionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit          int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status         int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search         string                 `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy        string                 `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	TerritoryId    int64                  `protobuf:"varint,7,opt,name=territory_id,json=territoryId,proto3" json:"territory_id,omitempty"`
	SalespersonId  int64                  `protobuf:"varint,8,opt,name=salesperson_id,json=salespersonId,proto3" json:"salesperson_id,omitempty"`
	Task           int32                  `protobuf:"varint,9,opt,name=task,proto3" json:"task,omitempty"`
	OutOfRoute     int32                  `protobuf:"varint,10,opt,name=out_of_route,json=outOfRoute,proto3" json:"out_of_route,omitempty"`
	SubmitDateFrom *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=submit_date_from,json=submitDateFrom,proto3" json:"submit_date_from,omitempty"`
	SubmitDateTo   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=submit_date_to,json=submitDateTo,proto3" json:"submit_date_to,omitempty"`
}

func (x *GetSalesSubmissionListRequest) Reset() {
	*x = GetSalesSubmissionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesSubmissionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesSubmissionListRequest) ProtoMessage() {}

func (x *GetSalesSubmissionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesSubmissionListRequest.ProtoReflect.Descriptor instead.
func (*GetSalesSubmissionListRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{52}
}

func (x *GetSalesSubmissionListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSalesSubmissionListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSalesSubmissionListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSalesSubmissionListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetSalesSubmissionListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *GetSalesSubmissionListRequest) GetTerritoryId() int64 {
	if x != nil {
		return x.TerritoryId
	}
	return 0
}

func (x *GetSalesSubmissionListRequest) GetSalespersonId() int64 {
	if x != nil {
		return x.SalespersonId
	}
	return 0
}

func (x *GetSalesSubmissionListRequest) GetTask() int32 {
	if x != nil {
		return x.Task
	}
	return 0
}

func (x *GetSalesSubmissionListRequest) GetOutOfRoute() int32 {
	if x != nil {
		return x.OutOfRoute
	}
	return 0
}

func (x *GetSalesSubmissionListRequest) GetSubmitDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDateFrom
	}
	return nil
}

func (x *GetSalesSubmissionListRequest) GetSubmitDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmitDateTo
	}
	return nil
}

type Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerIdGp            string                 `protobuf:"bytes,2,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
	ProspectiveCustomerId   int64                  `protobuf:"varint,3,opt,name=prospective_customer_id,json=prospectiveCustomerId,proto3" json:"prospective_customer_id,omitempty"`
	MembershipLevelId       int64                  `protobuf:"varint,4,opt,name=membership_level_id,json=membershipLevelId,proto3" json:"membership_level_id,omitempty"`
	MembershipCheckpointId  int64                  `protobuf:"varint,5,opt,name=membership_checkpoint_id,json=membershipCheckpointId,proto3" json:"membership_checkpoint_id,omitempty"`
	TotalPoint              int64                  `protobuf:"varint,6,opt,name=total_point,json=totalPoint,proto3" json:"total_point,omitempty"`
	ProfileCode             string                 `protobuf:"bytes,7,opt,name=profile_code,json=profileCode,proto3" json:"profile_code,omitempty"`
	Email                   string                 `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	ReferenceInfo           string                 `protobuf:"bytes,9,opt,name=reference_info,json=referenceInfo,proto3" json:"reference_info,omitempty"`
	UpgradeStatus           int32                  `protobuf:"varint,10,opt,name=upgrade_status,json=upgradeStatus,proto3" json:"upgrade_status,omitempty"`
	KtpPhotosUrl            string                 `protobuf:"bytes,11,opt,name=ktp_photos_url,json=ktpPhotosUrl,proto3" json:"ktp_photos_url,omitempty"`
	CustomerPhotosUrl       string                 `protobuf:"bytes,12,opt,name=customer_photos_url,json=customerPhotosUrl,proto3" json:"customer_photos_url,omitempty"`
	CustomerSelfieUrl       string                 `protobuf:"bytes,13,opt,name=customer_selfie_url,json=customerSelfieUrl,proto3" json:"customer_selfie_url,omitempty"`
	CreatedAt               *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt               *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	MembershipRewardId      int64                  `protobuf:"varint,16,opt,name=membership_reward_id,json=membershipRewardId,proto3" json:"membership_reward_id,omitempty"`
	MembershipRewardAmmount float64                `protobuf:"fixed64,17,opt,name=membership_reward_ammount,json=membershipRewardAmmount,proto3" json:"membership_reward_ammount,omitempty"`
	ReferralCode            string                 `protobuf:"bytes,18,opt,name=referral_code,json=referralCode,proto3" json:"referral_code,omitempty"`
	ReferrerId              int64                  `protobuf:"varint,19,opt,name=referrer_id,json=referrerId,proto3" json:"referrer_id,omitempty"`
	ReferrerCode            string                 `protobuf:"bytes,20,opt,name=referrer_code,json=referrerCode,proto3" json:"referrer_code,omitempty"`
	Gender                  int32                  `protobuf:"varint,21,opt,name=gender,proto3" json:"gender,omitempty"`
	BirthDate               string                 `protobuf:"bytes,22,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
}

func (x *Customer) Reset() {
	*x = Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{53}
}

func (x *Customer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Customer) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

func (x *Customer) GetProspectiveCustomerId() int64 {
	if x != nil {
		return x.ProspectiveCustomerId
	}
	return 0
}

func (x *Customer) GetMembershipLevelId() int64 {
	if x != nil {
		return x.MembershipLevelId
	}
	return 0
}

func (x *Customer) GetMembershipCheckpointId() int64 {
	if x != nil {
		return x.MembershipCheckpointId
	}
	return 0
}

func (x *Customer) GetTotalPoint() int64 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

func (x *Customer) GetProfileCode() string {
	if x != nil {
		return x.ProfileCode
	}
	return ""
}

func (x *Customer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Customer) GetReferenceInfo() string {
	if x != nil {
		return x.ReferenceInfo
	}
	return ""
}

func (x *Customer) GetUpgradeStatus() int32 {
	if x != nil {
		return x.UpgradeStatus
	}
	return 0
}

func (x *Customer) GetKtpPhotosUrl() string {
	if x != nil {
		return x.KtpPhotosUrl
	}
	return ""
}

func (x *Customer) GetCustomerPhotosUrl() string {
	if x != nil {
		return x.CustomerPhotosUrl
	}
	return ""
}

func (x *Customer) GetCustomerSelfieUrl() string {
	if x != nil {
		return x.CustomerSelfieUrl
	}
	return ""
}

func (x *Customer) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Customer) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Customer) GetMembershipRewardId() int64 {
	if x != nil {
		return x.MembershipRewardId
	}
	return 0
}

func (x *Customer) GetMembershipRewardAmmount() float64 {
	if x != nil {
		return x.MembershipRewardAmmount
	}
	return 0
}

func (x *Customer) GetReferralCode() string {
	if x != nil {
		return x.ReferralCode
	}
	return ""
}

func (x *Customer) GetReferrerId() int64 {
	if x != nil {
		return x.ReferrerId
	}
	return 0
}

func (x *Customer) GetReferrerCode() string {
	if x != nil {
		return x.ReferrerCode
	}
	return ""
}

func (x *Customer) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *Customer) GetBirthDate() string {
	if x != nil {
		return x.BirthDate
	}
	return ""
}

type GetCustomerDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerIdGp string `protobuf:"bytes,2,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
	ReferrerCode string `protobuf:"bytes,3,opt,name=referrer_code,json=referrerCode,proto3" json:"referrer_code,omitempty"`
	Email        string `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GetCustomerDetailRequest) Reset() {
	*x = GetCustomerDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerDetailRequest) ProtoMessage() {}

func (x *GetCustomerDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerDetailRequest.ProtoReflect.Descriptor instead.
func (*GetCustomerDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{54}
}

func (x *GetCustomerDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCustomerDetailRequest) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

func (x *GetCustomerDetailRequest) GetReferrerCode() string {
	if x != nil {
		return x.ReferrerCode
	}
	return ""
}

func (x *GetCustomerDetailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GetCustomerDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Customer `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCustomerDetailResponse) Reset() {
	*x = GetCustomerDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerDetailResponse) ProtoMessage() {}

func (x *GetCustomerDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerDetailResponse.ProtoReflect.Descriptor instead.
func (*GetCustomerDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{55}
}

func (x *GetCustomerDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCustomerDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCustomerDetailResponse) GetData() *Customer {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerIdGp           string   `protobuf:"bytes,2,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
	ProspectiveCustomerId  int64    `protobuf:"varint,3,opt,name=prospective_customer_id,json=prospectiveCustomerId,proto3" json:"prospective_customer_id,omitempty"`
	MembershipLevelId      int64    `protobuf:"varint,4,opt,name=membership_level_id,json=membershipLevelId,proto3" json:"membership_level_id,omitempty"`
	MembershipCheckpointId int64    `protobuf:"varint,5,opt,name=membership_checkpoint_id,json=membershipCheckpointId,proto3" json:"membership_checkpoint_id,omitempty"`
	TotalPoint             int64    `protobuf:"varint,6,opt,name=total_point,json=totalPoint,proto3" json:"total_point,omitempty"`
	ProfileCode            string   `protobuf:"bytes,7,opt,name=profile_code,json=profileCode,proto3" json:"profile_code,omitempty"`
	ReferenceInfo          string   `protobuf:"bytes,8,opt,name=reference_info,json=referenceInfo,proto3" json:"reference_info,omitempty"`
	UpgradeStatus          int32    `protobuf:"varint,9,opt,name=upgrade_status,json=upgradeStatus,proto3" json:"upgrade_status,omitempty"`
	FieldUpdate            []string `protobuf:"bytes,10,rep,name=field_update,json=fieldUpdate,proto3" json:"field_update,omitempty"`
}

func (x *UpdateCustomerRequest) Reset() {
	*x = UpdateCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerRequest) ProtoMessage() {}

func (x *UpdateCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerRequest.ProtoReflect.Descriptor instead.
func (*UpdateCustomerRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateCustomerRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCustomerRequest) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

func (x *UpdateCustomerRequest) GetProspectiveCustomerId() int64 {
	if x != nil {
		return x.ProspectiveCustomerId
	}
	return 0
}

func (x *UpdateCustomerRequest) GetMembershipLevelId() int64 {
	if x != nil {
		return x.MembershipLevelId
	}
	return 0
}

func (x *UpdateCustomerRequest) GetMembershipCheckpointId() int64 {
	if x != nil {
		return x.MembershipCheckpointId
	}
	return 0
}

func (x *UpdateCustomerRequest) GetTotalPoint() int64 {
	if x != nil {
		return x.TotalPoint
	}
	return 0
}

func (x *UpdateCustomerRequest) GetProfileCode() string {
	if x != nil {
		return x.ProfileCode
	}
	return ""
}

func (x *UpdateCustomerRequest) GetReferenceInfo() string {
	if x != nil {
		return x.ReferenceInfo
	}
	return ""
}

func (x *UpdateCustomerRequest) GetUpgradeStatus() int32 {
	if x != nil {
		return x.UpgradeStatus
	}
	return 0
}

func (x *UpdateCustomerRequest) GetFieldUpdate() []string {
	if x != nil {
		return x.FieldUpdate
	}
	return nil
}

type UpdateCustomerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateCustomerResponse) Reset() {
	*x = UpdateCustomerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerResponse) ProtoMessage() {}

func (x *UpdateCustomerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerResponse.ProtoReflect.Descriptor instead.
func (*UpdateCustomerResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateCustomerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateCustomerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Customer `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateCustomerRequest) Reset() {
	*x = CreateCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomerRequest) ProtoMessage() {}

func (x *CreateCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomerRequest.ProtoReflect.Descriptor instead.
func (*CreateCustomerRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{58}
}

func (x *CreateCustomerRequest) GetData() *Customer {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateCustomerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Customer `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateCustomerResponse) Reset() {
	*x = CreateCustomerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomerResponse) ProtoMessage() {}

func (x *CreateCustomerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomerResponse.ProtoReflect.Descriptor instead.
func (*CreateCustomerResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{59}
}

func (x *CreateCustomerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateCustomerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateCustomerResponse) GetData() *Customer {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateProspectiveCustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ProspectiveCustomer `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateProspectiveCustomerRequest) Reset() {
	*x = CreateProspectiveCustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProspectiveCustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProspectiveCustomerRequest) ProtoMessage() {}

func (x *CreateProspectiveCustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProspectiveCustomerRequest.ProtoReflect.Descriptor instead.
func (*CreateProspectiveCustomerRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{60}
}

func (x *CreateProspectiveCustomerRequest) GetData() *ProspectiveCustomer {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateProspectiveCustomerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ProspectiveCustomer `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateProspectiveCustomerResponse) Reset() {
	*x = CreateProspectiveCustomerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProspectiveCustomerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProspectiveCustomerResponse) ProtoMessage() {}

func (x *CreateProspectiveCustomerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProspectiveCustomerResponse.ProtoReflect.Descriptor instead.
func (*CreateProspectiveCustomerResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{61}
}

func (x *CreateProspectiveCustomerResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateProspectiveCustomerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateProspectiveCustomerResponse) GetData() *ProspectiveCustomer {
	if x != nil {
		return x.Data
	}
	return nil
}

type CustomerID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId   int64  `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CustomerIdGp string `protobuf:"bytes,2,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
}

func (x *CustomerID) Reset() {
	*x = CustomerID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerID) ProtoMessage() {}

func (x *CustomerID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerID.ProtoReflect.Descriptor instead.
func (*CustomerID) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{62}
}

func (x *CustomerID) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *CustomerID) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

type GetCustomerIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerIdGp []string `protobuf:"bytes,1,rep,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
}

func (x *GetCustomerIDRequest) Reset() {
	*x = GetCustomerIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerIDRequest) ProtoMessage() {}

func (x *GetCustomerIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerIDRequest.ProtoReflect.Descriptor instead.
func (*GetCustomerIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{63}
}

func (x *GetCustomerIDRequest) GetCustomerIdGp() []string {
	if x != nil {
		return x.CustomerIdGp
	}
	return nil
}

type GetCustomerIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*CustomerID `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCustomerIDResponse) Reset() {
	*x = GetCustomerIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomerIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerIDResponse) ProtoMessage() {}

func (x *GetCustomerIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerIDResponse.ProtoReflect.Descriptor instead.
func (*GetCustomerIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{64}
}

func (x *GetCustomerIDResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCustomerIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCustomerIDResponse) GetData() []*CustomerID {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateFixedVaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerIdGp   string `protobuf:"bytes,1,opt,name=customer_id_gp,json=customerIdGp,proto3" json:"customer_id_gp,omitempty"`
	FixedVaBca     bool   `protobuf:"varint,2,opt,name=fixed_va_bca,json=fixedVaBca,proto3" json:"fixed_va_bca,omitempty"`
	FixedVaPermata bool   `protobuf:"varint,3,opt,name=fixed_va_permata,json=fixedVaPermata,proto3" json:"fixed_va_permata,omitempty"`
}

func (x *UpdateFixedVaRequest) Reset() {
	*x = UpdateFixedVaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFixedVaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFixedVaRequest) ProtoMessage() {}

func (x *UpdateFixedVaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFixedVaRequest.ProtoReflect.Descriptor instead.
func (*UpdateFixedVaRequest) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{65}
}

func (x *UpdateFixedVaRequest) GetCustomerIdGp() string {
	if x != nil {
		return x.CustomerIdGp
	}
	return ""
}

func (x *UpdateFixedVaRequest) GetFixedVaBca() bool {
	if x != nil {
		return x.FixedVaBca
	}
	return false
}

func (x *UpdateFixedVaRequest) GetFixedVaPermata() bool {
	if x != nil {
		return x.FixedVaPermata
	}
	return false
}

type UpdateFixedVaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateFixedVaResponse) Reset() {
	*x = UpdateFixedVaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_crm_service_crm_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFixedVaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFixedVaResponse) ProtoMessage() {}

func (x *UpdateFixedVaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_crm_service_crm_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFixedVaResponse.ProtoReflect.Descriptor instead.
func (*UpdateFixedVaResponse) Descriptor() ([]byte, []int) {
	return file_proto_crm_service_crm_service_proto_rawDescGZIP(), []int{66}
}

func (x *UpdateFixedVaResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateFixedVaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_crm_service_crm_service_proto protoreflect.FileDescriptor

var file_proto_crm_service_crm_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x13, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x47, 0x70, 0x12, 0x2d, 0x0a,
	0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x5f, 0x67, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x47, 0x70, 0x12, 0x3a, 0x0a, 0x1a,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61, 0x64, 0x6d, 0x5f, 0x64, 0x69, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64, 0x6d, 0x44, 0x69, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x47, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x47, 0x70, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x5f, 0x67, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x47, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x63, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x2d,
	0x0a, 0x13, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x69,
	0x70, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a,
	0x1a, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x6d, 0x5f, 0x64, 0x69, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x73, 0x68, 0x69, 0x70, 0x54, 0x6f, 0x41, 0x64, 0x6d, 0x44, 0x69, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x47, 0x70, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69,
	0x74, 0x65, 0x49, 0x64, 0x47, 0x70, 0x12, 0x27, 0x0a, 0x10, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x74,
	0x6f, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x52, 0x65, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x12,
	0x21, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x6c, 0x65, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2d, 0x0a, 0x13, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x47, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x69, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x69,
	0x63, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x69,
	0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x69, 0x63, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x69, 0x63, 0x5f, 0x66, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x69, 0x63, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x70, 0x69, 0x63, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70,
	0x69, 0x63, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x27, 0x0a, 0x10, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x44, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x64, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x44, 0x6f, 0x63,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0f, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x44, 0x6f, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a,
	0x11, 0x74, 0x61, 0x78, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x78, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x61, 0x78,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x61, 0x78, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x6f, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x78,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x78, 0x70, 0x61, 0x79, 0x65, 0x72, 0x44, 0x6f, 0x63,
	0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37,
	0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x44, 0x6f, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x33, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x61, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x61, 0x72, 0x69, 0x61,
	0x6c, 0x44, 0x65, 0x65, 0x64, 0x44, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15,
	0x6e, 0x6f, 0x74, 0x61, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x65, 0x64, 0x5f, 0x64, 0x6f,
	0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x6f, 0x74,
	0x61, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x65, 0x64, 0x44, 0x6f, 0x63, 0x55, 0x72, 0x6c, 0x12,
	0x3f, 0x0a, 0x1c, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x65,
	0x70, 0x65, 0x6e, 0x65, 0x75, 0x72, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x65, 0x70, 0x65, 0x6e, 0x65, 0x75, 0x72, 0x44, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x1b, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x65, 0x70, 0x65, 0x6e, 0x65, 0x75, 0x72, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x65, 0x70, 0x65, 0x6e, 0x65, 0x75, 0x72, 0x44, 0x6f, 0x63, 0x55, 0x72, 0x6c, 0x12,
	0x3f, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x55, 0x72, 0x6c, 0x12,
	0x39, 0x0a, 0x19, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x5f, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x44, 0x6f, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x64,
	0x6f, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x44, 0x6f, 0x63,
	0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x65, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x49, 0x64, 0x47, 0x70,
	0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x18, 0x39, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x22, 0x99, 0x03, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72,
	0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x90, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x67, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x21, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe2,
	0x01, 0x0a, 0x0f, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x65,
	0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xdc, 0x03, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x3e, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9a, 0x02, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x44, 0x0a, 0x10, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x40, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x22, 0x88, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x89, 0x09, 0x0a, 0x13, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x13, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x11, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x4f,
	0x66, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x34, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x61,
	0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x54, 0x0a, 0x0f, 0x6f, 0x62, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0e, 0x6f, 0x62, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x22,
	0xc7, 0x05, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x65, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75,
	0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x66, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x10,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x12, 0x42, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x3e, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3a, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x22, 0x47, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x23, 0x47, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbe, 0x02, 0x0a, 0x18, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x26, 0x47, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x22, 0x98, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4e,
	0x0a, 0x28, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x9a,
	0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81, 0x03, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x72, 0x63, 0x68, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x64, 0x6d, 0x5f, 0x64, 0x69, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x64,
	0x6d, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xb2, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x2b, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x69, 0x73, 0x74, 0x65,
	0x64, 0x22, 0x4c, 0x0a, 0x23, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x8c, 0x01, 0x0a, 0x24, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c,
	0x0a, 0x23, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a,
	0x24, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb3, 0x02, 0x0a, 0x1e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x17, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x8b, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x73, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x56,
	0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x73,
	0x6b, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x63,
	0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x1e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x1f,
	0x42, 0x75, 0x6c, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa8, 0x05, 0x0a, 0x1b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f,
	0x6f, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x6f,
	0x6f, 0x64, 0x41, 0x70, 0x70, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e,
	0x75, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x3b, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8f, 0x02, 0x0a, 0x1f, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36,
	0x0a, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xce, 0x03, 0x0a,
	0x24, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x6f, 0x6f, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66,
	0x6f, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x6f, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x70, 0x6f,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x3c,
	0x0a, 0x1a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x3f, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x36, 0x0a,
	0x12, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x74, 0x6f, 0x70, 0x22, 0xa8, 0x02, 0x0a, 0x25, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x61, 0x0a,
	0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x6e, 0x0a, 0x19, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x71,
	0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x22, 0xf6, 0x01, 0x0a, 0x18, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a,
	0x18, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x15, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x12, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x18, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x56, 0x69, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe5, 0x01, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x18, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x15, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x32, 0x0a, 0x12, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0x82, 0x07,
	0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x13, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x11, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x66,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x22, 0x33, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xec, 0x02, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x10, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x40, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x22, 0x9e, 0x03, 0x0a, 0x30, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x49, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x40, 0x0a,
	0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12,
	0x21, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x49,
	0x64, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd3, 0x01, 0x0a, 0x22,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x10, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x40, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x38, 0x0a, 0x20, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa0, 0x03, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x65, 0x72, 0x72, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x65, 0x72,
	0x72, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x4f, 0x66,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x40, 0x0a, 0x0e, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x22, 0x96, 0x07,
	0x0a, 0x08, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x47, 0x70,
	0x12, 0x36, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6b, 0x74,
	0x70, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6b, 0x74, 0x70, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x55, 0x72, 0x6c,
	0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x55, 0x72, 0x6c,
	0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6c,
	0x66, 0x69, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x6d,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x47, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0x7a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xa4, 0x03, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x47, 0x70,
	0x12, 0x36, 0x0a, 0x17, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a,
	0x0e, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x48, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x77, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x5e, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x53, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x5f, 0x67, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x47, 0x70, 0x22, 0x3c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x67,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x47, 0x70, 0x22, 0x78, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x88, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x56,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x47, 0x70, 0x12, 0x20,
	0x0a, 0x0c, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x5f, 0x62, 0x63, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x69, 0x78, 0x65, 0x64, 0x56, 0x61, 0x42, 0x63, 0x61,
	0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x5f, 0x70, 0x65, 0x72,
	0x6d, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x56, 0x61, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x74, 0x61, 0x22, 0x45, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x56, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0xe3, 0x1d, 0x0a, 0x0a, 0x43, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x8b, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x12, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85,
	0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x32, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9a, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa0, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x22, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63,
	0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71,
	0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x97, 0x01, 0x0a, 0x22, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x11,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46,
	0x55, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x13, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46,
	0x55, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x17, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x12, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x46, 0x55, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x94, 0x01, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63,
	0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d,
	0x0a, 0x10, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x33, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa9, 0x01, 0x0a, 0x29, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x64, 0x49, 0x64, 0x73, 0x12, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x88, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x33,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x12, 0x27, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72,
	0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x56, 0x61, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x56, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x78, 0x65, 0x64, 0x56, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x58, 0x5a, 0x50, 0x67, 0x69, 0x74, 0x2e, 0x65,
	0x64, 0x65, 0x6e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x69, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x33, 0x2f, 0x65, 0x72, 0x70, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x72, 0x70, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0xa2, 0x02, 0x03, 0x45, 0x4f,
	0x50, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_crm_service_crm_service_proto_rawDescOnce sync.Once
	file_proto_crm_service_crm_service_proto_rawDescData = file_proto_crm_service_crm_service_proto_rawDesc
)

func file_proto_crm_service_crm_service_proto_rawDescGZIP() []byte {
	file_proto_crm_service_crm_service_proto_rawDescOnce.Do(func() {
		file_proto_crm_service_crm_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_crm_service_crm_service_proto_rawDescData)
	})
	return file_proto_crm_service_crm_service_proto_rawDescData
}

var file_proto_crm_service_crm_service_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_proto_crm_service_crm_service_proto_goTypes = []interface{}{
	(*ProspectiveCustomer)(nil),                       // 0: proto.crm_service.ProspectiveCustomer
	(*GetProspectiveCustomerListRequest)(nil),         // 1: proto.crm_service.GetProspectiveCustomerListRequest
	(*GetProspectiveCustomerListResponse)(nil),        // 2: proto.crm_service.GetProspectiveCustomerListResponse
	(*GetProspectiveCustomerDetailRequest)(nil),       // 3: proto.crm_service.GetProspectiveCustomerDetailRequest
	(*GetProspectiveCustomerDetailResponse)(nil),      // 4: proto.crm_service.GetProspectiveCustomerDetailResponse
	(*DeleteProspectiveCustomerRequest)(nil),          // 5: proto.crm_service.DeleteProspectiveCustomerRequest
	(*DeleteProspectiveCustomerResponse)(nil),         // 6: proto.crm_service.DeleteProspectiveCustomerResponse
	(*SalesAssignment)(nil),                           // 7: proto.crm_service.SalesAssignment
	(*GetSalesAssignmentListRequest)(nil),             // 8: proto.crm_service.GetSalesAssignmentListRequest
	(*GetSalesAssignmentListResponse)(nil),            // 9: proto.crm_service.GetSalesAssignmentListResponse
	(*GetSalesAssignmentDetailRequest)(nil),           // 10: proto.crm_service.GetSalesAssignmentDetailRequest
	(*GetSalesAssignmentDetailResponse)(nil),          // 11: proto.crm_service.GetSalesAssignmentDetailResponse
	(*SalesAssignmentItem)(nil),                       // 12: proto.crm_service.SalesAssignmentItem
	(*GetSalesAssignmentItemListRequest)(nil),         // 13: proto.crm_service.GetSalesAssignmentItemListRequest
	(*GetSalesAssignmentItemListResponse)(nil),        // 14: proto.crm_service.GetSalesAssignmentItemListResponse
	(*GetSalesAssignmentItemDetailRequest)(nil),       // 15: proto.crm_service.GetSalesAssignmentItemDetailRequest
	(*GetSalesAssignmentItemDetailResponse)(nil),      // 16: proto.crm_service.GetSalesAssignmentItemDetailResponse
	(*SalesAssignmentObjective)(nil),                  // 17: proto.crm_service.SalesAssignmentObjective
	(*GetSalesAssignmentObjectiveListRequest)(nil),    // 18: proto.crm_service.GetSalesAssignmentObjectiveListRequest
	(*GetSalesAssignmentObjectiveListResponse)(nil),   // 19: proto.crm_service.GetSalesAssignmentObjectiveListResponse
	(*GetSalesAssignmentObjectiveDetailRequest)(nil),  // 20: proto.crm_service.GetSalesAssignmentObjectiveDetailRequest
	(*GetSalesAssignmentObjectiveDetailResponse)(nil), // 21: proto.crm_service.GetSalesAssignmentObjectiveDetailResponse
	(*Address)(nil),         // 22: proto.crm_service.Address
	(*User)(nil),            // 23: proto.crm_service.User
	(*BooleanResponse)(nil), // 24: proto.crm_service.BooleanResponse
	(*CheckTaskCustomerAcquisitionRequest)(nil),              // 25: proto.crm_service.CheckTaskCustomerAcquisitionRequest
	(*CheckTaskCustomerAcquisitionResponse)(nil),             // 26: proto.crm_service.CheckTaskCustomerAcquisitionResponse
	(*CheckTaskSalesAssignmentItemRequest)(nil),              // 27: proto.crm_service.CheckTaskSalesAssignmentItemRequest
	(*CheckTaskSalesAssignmentItemResponse)(nil),             // 28: proto.crm_service.CheckTaskSalesAssignmentItemResponse
	(*UpdateSubmitTaskVisitFURequest)(nil),                   // 29: proto.crm_service.UpdateSubmitTaskVisitFURequest
	(*UpdateSubmitTaskVisitFUResponse)(nil),                  // 30: proto.crm_service.UpdateSubmitTaskVisitFUResponse
	(*CheckoutTaskVisitFURequest)(nil),                       // 31: proto.crm_service.CheckoutTaskVisitFURequest
	(*CheckoutTaskVisitFUResponse)(nil),                      // 32: proto.crm_service.CheckoutTaskVisitFUResponse
	(*BulkCheckoutTaskVisitFURequest)(nil),                   // 33: proto.crm_service.BulkCheckoutTaskVisitFURequest
	(*BulkCheckoutTaskVisitFUResponse)(nil),                  // 34: proto.crm_service.BulkCheckoutTaskVisitFUResponse
	(*CustomerAcquisitionResponse)(nil),                      // 35: proto.crm_service.CustomerAcquisitionResponse
	(*CustomerAcquisitionItemResponse)(nil),                  // 36: proto.crm_service.CustomerAcquisitionItemResponse
	(*SubmitTaskCustomerAcquisitionRequest)(nil),             // 37: proto.crm_service.SubmitTaskCustomerAcquisitionRequest
	(*CustomerAcqProduct)(nil),                               // 38: proto.crm_service.CustomerAcqProduct
	(*SubmitTaskCustomerAcquisitionResponse)(nil),            // 39: proto.crm_service.SubmitTaskCustomerAcquisitionResponse
	(*SalesFailedVisitResponse)(nil),                         // 40: proto.crm_service.SalesFailedVisitResponse
	(*SubmitTaskFailedResponse)(nil),                         // 41: proto.crm_service.SubmitTaskFailedResponse
	(*SubmitTaskFailedRequest)(nil),                          // 42: proto.crm_service.SubmitTaskFailedRequest
	(*CreateSalesAssignmentItemRequest)(nil),                 // 43: proto.crm_service.CreateSalesAssignmentItemRequest
	(*GetCustomerAcquisitionByIdRequest)(nil),                // 44: proto.crm_service.GetCustomerAcquisitionByIdRequest
	(*GetCustomerAcquisitionDetailResponse)(nil),             // 45: proto.crm_service.GetCustomerAcquisitionDetailResponse
	(*GetCustomerAcquisitionListRequest)(nil),                // 46: proto.crm_service.GetCustomerAcquisitionListRequest
	(*GetCustomerAcquisitionListWithExcludedIdsRequest)(nil), // 47: proto.crm_service.GetCustomerAcquisitionListWithExcludedIdsRequest
	(*GetCustomerAcquisitionListResponse)(nil),               // 48: proto.crm_service.GetCustomerAcquisitionListResponse
	(*GetCountCustomerAcquisitionRequest)(nil),               // 49: proto.crm_service.GetCountCustomerAcquisitionRequest
	(*GetCountCustomerAcquisitionResponse)(nil),              // 50: proto.crm_service.GetCountCustomerAcquisitionResponse
	(*CountCustomerAcquisitionResponse)(nil),                 // 51: proto.crm_service.CountCustomerAcquisitionResponse
	(*GetSalesSubmissionListRequest)(nil),                    // 52: proto.crm_service.GetSalesSubmissionListRequest
	(*Customer)(nil),                                         // 53: proto.crm_service.Customer
	(*GetCustomerDetailRequest)(nil),                         // 54: proto.crm_service.GetCustomerDetailRequest
	(*GetCustomerDetailResponse)(nil),                        // 55: proto.crm_service.GetCustomerDetailResponse
	(*UpdateCustomerRequest)(nil),                            // 56: proto.crm_service.UpdateCustomerRequest
	(*UpdateCustomerResponse)(nil),                           // 57: proto.crm_service.UpdateCustomerResponse
	(*CreateCustomerRequest)(nil),                            // 58: proto.crm_service.CreateCustomerRequest
	(*CreateCustomerResponse)(nil),                           // 59: proto.crm_service.CreateCustomerResponse
	(*CreateProspectiveCustomerRequest)(nil),                 // 60: proto.crm_service.CreateProspectiveCustomerRequest
	(*CreateProspectiveCustomerResponse)(nil),                // 61: proto.crm_service.CreateProspectiveCustomerResponse
	(*CustomerID)(nil),                                       // 62: proto.crm_service.CustomerID
	(*GetCustomerIDRequest)(nil),                             // 63: proto.crm_service.GetCustomerIDRequest
	(*GetCustomerIDResponse)(nil),                            // 64: proto.crm_service.GetCustomerIDResponse
	(*UpdateFixedVaRequest)(nil),                             // 65: proto.crm_service.UpdateFixedVaRequest
	(*UpdateFixedVaResponse)(nil),                            // 66: proto.crm_service.UpdateFixedVaResponse
	(*timestamppb.Timestamp)(nil),                            // 67: google.protobuf.Timestamp
}
var file_proto_crm_service_crm_service_proto_depIdxs = []int32{
	67,  // 0: proto.crm_service.ProspectiveCustomer.created_at:type_name -> google.protobuf.Timestamp
	67,  // 1: proto.crm_service.ProspectiveCustomer.updated_at:type_name -> google.protobuf.Timestamp
	67,  // 2: proto.crm_service.ProspectiveCustomer.processed_at:type_name -> google.protobuf.Timestamp
	0,   // 3: proto.crm_service.GetProspectiveCustomerListResponse.data:type_name -> proto.crm_service.ProspectiveCustomer
	0,   // 4: proto.crm_service.GetProspectiveCustomerDetailResponse.data:type_name -> proto.crm_service.ProspectiveCustomer
	67,  // 5: proto.crm_service.SalesAssignment.start_date:type_name -> google.protobuf.Timestamp
	67,  // 6: proto.crm_service.SalesAssignment.end_date:type_name -> google.protobuf.Timestamp
	67,  // 7: proto.crm_service.GetSalesAssignmentListRequest.start_date_from:type_name -> google.protobuf.Timestamp
	67,  // 8: proto.crm_service.GetSalesAssignmentListRequest.start_date_to:type_name -> google.protobuf.Timestamp
	67,  // 9: proto.crm_service.GetSalesAssignmentListRequest.end_date_from:type_name -> google.protobuf.Timestamp
	67,  // 10: proto.crm_service.GetSalesAssignmentListRequest.end_date_to:type_name -> google.protobuf.Timestamp
	7,   // 11: proto.crm_service.GetSalesAssignmentListResponse.data:type_name -> proto.crm_service.SalesAssignment
	67,  // 12: proto.crm_service.GetSalesAssignmentDetailRequest.finish_date_from:type_name -> google.protobuf.Timestamp
	67,  // 13: proto.crm_service.GetSalesAssignmentDetailRequest.finish_date_to:type_name -> google.protobuf.Timestamp
	7,   // 14: proto.crm_service.GetSalesAssignmentDetailResponse.data:type_name -> proto.crm_service.SalesAssignment
	67,  // 15: proto.crm_service.SalesAssignmentItem.start_date:type_name -> google.protobuf.Timestamp
	67,  // 16: proto.crm_service.SalesAssignmentItem.end_date:type_name -> google.protobuf.Timestamp
	67,  // 17: proto.crm_service.SalesAssignmentItem.finish_date:type_name -> google.protobuf.Timestamp
	67,  // 18: proto.crm_service.SalesAssignmentItem.submit_date:type_name -> google.protobuf.Timestamp
	22,  // 19: proto.crm_service.SalesAssignmentItem.address:type_name -> proto.crm_service.Address
	23,  // 20: proto.crm_service.SalesAssignmentItem.salesperson:type_name -> proto.crm_service.User
	35,  // 21: proto.crm_service.SalesAssignmentItem.customer_acquisition:type_name -> proto.crm_service.CustomerAcquisitionResponse
	17,  // 22: proto.crm_service.SalesAssignmentItem.obective_values:type_name -> proto.crm_service.SalesAssignmentObjective
	67,  // 23: proto.crm_service.GetSalesAssignmentItemListRequest.submit_date_from:type_name -> google.protobuf.Timestamp
	67,  // 24: proto.crm_service.GetSalesAssignmentItemListRequest.submit_date_to:type_name -> google.protobuf.Timestamp
	67,  // 25: proto.crm_service.GetSalesAssignmentItemListRequest.start_date_from:type_name -> google.protobuf.Timestamp
	67,  // 26: proto.crm_service.GetSalesAssignmentItemListRequest.start_date_to:type_name -> google.protobuf.Timestamp
	67,  // 27: proto.crm_service.GetSalesAssignmentItemListRequest.end_date_from:type_name -> google.protobuf.Timestamp
	67,  // 28: proto.crm_service.GetSalesAssignmentItemListRequest.end_date_to:type_name -> google.protobuf.Timestamp
	12,  // 29: proto.crm_service.GetSalesAssignmentItemListResponse.data:type_name -> proto.crm_service.SalesAssignmentItem
	12,  // 30: proto.crm_service.GetSalesAssignmentItemDetailResponse.data:type_name -> proto.crm_service.SalesAssignmentItem
	67,  // 31: proto.crm_service.SalesAssignmentObjective.created_at:type_name -> google.protobuf.Timestamp
	67,  // 32: proto.crm_service.SalesAssignmentObjective.updated_at:type_name -> google.protobuf.Timestamp
	17,  // 33: proto.crm_service.GetSalesAssignmentObjectiveListResponse.data:type_name -> proto.crm_service.SalesAssignmentObjective
	17,  // 34: proto.crm_service.GetSalesAssignmentObjectiveDetailResponse.data:type_name -> proto.crm_service.SalesAssignmentObjective
	67,  // 35: proto.crm_service.Address.updated_at:type_name -> google.protobuf.Timestamp
	24,  // 36: proto.crm_service.CheckTaskCustomerAcquisitionResponse.data:type_name -> proto.crm_service.BooleanResponse
	24,  // 37: proto.crm_service.CheckTaskSalesAssignmentItemResponse.data:type_name -> proto.crm_service.BooleanResponse
	12,  // 38: proto.crm_service.UpdateSubmitTaskVisitFUResponse.data:type_name -> proto.crm_service.SalesAssignmentItem
	67,  // 39: proto.crm_service.CustomerAcquisitionResponse.finish_date:type_name -> google.protobuf.Timestamp
	67,  // 40: proto.crm_service.CustomerAcquisitionResponse.submit_date:type_name -> google.protobuf.Timestamp
	67,  // 41: proto.crm_service.CustomerAcquisitionResponse.created_at:type_name -> google.protobuf.Timestamp
	67,  // 42: proto.crm_service.CustomerAcquisitionResponse.updated_at:type_name -> google.protobuf.Timestamp
	67,  // 43: proto.crm_service.CustomerAcquisitionItemResponse.created_at:type_name -> google.protobuf.Timestamp
	67,  // 44: proto.crm_service.CustomerAcquisitionItemResponse.updated_at:type_name -> google.protobuf.Timestamp
	38,  // 45: proto.crm_service.SubmitTaskCustomerAcquisitionRequest.product:type_name -> proto.crm_service.CustomerAcqProduct
	35,  // 46: proto.crm_service.SubmitTaskCustomerAcquisitionResponse.customer_acquisition:type_name -> proto.crm_service.CustomerAcquisitionResponse
	36,  // 47: proto.crm_service.SubmitTaskCustomerAcquisitionResponse.customer_acquisition_item:type_name -> proto.crm_service.CustomerAcquisitionItemResponse
	40,  // 48: proto.crm_service.SubmitTaskFailedResponse.data:type_name -> proto.crm_service.SalesFailedVisitResponse
	67,  // 49: proto.crm_service.CreateSalesAssignmentItemRequest.start_date:type_name -> google.protobuf.Timestamp
	67,  // 50: proto.crm_service.CreateSalesAssignmentItemRequest.end_date:type_name -> google.protobuf.Timestamp
	67,  // 51: proto.crm_service.CreateSalesAssignmentItemRequest.finish_date:type_name -> google.protobuf.Timestamp
	67,  // 52: proto.crm_service.CreateSalesAssignmentItemRequest.submit_date:type_name -> google.protobuf.Timestamp
	35,  // 53: proto.crm_service.GetCustomerAcquisitionDetailResponse.data:type_name -> proto.crm_service.CustomerAcquisitionResponse
	67,  // 54: proto.crm_service.GetCustomerAcquisitionListRequest.submit_date_from:type_name -> google.protobuf.Timestamp
	67,  // 55: proto.crm_service.GetCustomerAcquisitionListRequest.submit_date_to:type_name -> google.protobuf.Timestamp
	67,  // 56: proto.crm_service.GetCustomerAcquisitionListWithExcludedIdsRequest.submit_date_from:type_name -> google.protobuf.Timestamp
	67,  // 57: proto.crm_service.GetCustomerAcquisitionListWithExcludedIdsRequest.submit_date_to:type_name -> google.protobuf.Timestamp
	35,  // 58: proto.crm_service.GetCustomerAcquisitionListResponse.data:type_name -> proto.crm_service.CustomerAcquisitionResponse
	67,  // 59: proto.crm_service.GetCountCustomerAcquisitionRequest.submit_date_from:type_name -> google.protobuf.Timestamp
	67,  // 60: proto.crm_service.GetCountCustomerAcquisitionRequest.submit_date_to:type_name -> google.protobuf.Timestamp
	51,  // 61: proto.crm_service.GetCountCustomerAcquisitionResponse.data:type_name -> proto.crm_service.CountCustomerAcquisitionResponse
	67,  // 62: proto.crm_service.GetSalesSubmissionListRequest.submit_date_from:type_name -> google.protobuf.Timestamp
	67,  // 63: proto.crm_service.GetSalesSubmissionListRequest.submit_date_to:type_name -> google.protobuf.Timestamp
	67,  // 64: proto.crm_service.Customer.created_at:type_name -> google.protobuf.Timestamp
	67,  // 65: proto.crm_service.Customer.updated_at:type_name -> google.protobuf.Timestamp
	53,  // 66: proto.crm_service.GetCustomerDetailResponse.data:type_name -> proto.crm_service.Customer
	53,  // 67: proto.crm_service.CreateCustomerRequest.data:type_name -> proto.crm_service.Customer
	53,  // 68: proto.crm_service.CreateCustomerResponse.data:type_name -> proto.crm_service.Customer
	0,   // 69: proto.crm_service.CreateProspectiveCustomerRequest.data:type_name -> proto.crm_service.ProspectiveCustomer
	0,   // 70: proto.crm_service.CreateProspectiveCustomerResponse.data:type_name -> proto.crm_service.ProspectiveCustomer
	62,  // 71: proto.crm_service.GetCustomerIDResponse.data:type_name -> proto.crm_service.CustomerID
	1,   // 72: proto.crm_service.CrmService.GetProspectiveCustomerList:input_type -> proto.crm_service.GetProspectiveCustomerListRequest
	3,   // 73: proto.crm_service.CrmService.GetProspectiveCustomerDetail:input_type -> proto.crm_service.GetProspectiveCustomerDetailRequest
	5,   // 74: proto.crm_service.CrmService.DeleteProspectiveCustomer:input_type -> proto.crm_service.DeleteProspectiveCustomerRequest
	8,   // 75: proto.crm_service.CrmService.GetSalesAssignmentList:input_type -> proto.crm_service.GetSalesAssignmentListRequest
	10,  // 76: proto.crm_service.CrmService.GetSalesAssignmentDetail:input_type -> proto.crm_service.GetSalesAssignmentDetailRequest
	13,  // 77: proto.crm_service.CrmService.GetSalesAssignmentItemList:input_type -> proto.crm_service.GetSalesAssignmentItemListRequest
	15,  // 78: proto.crm_service.CrmService.GetSalesAssignmentItemDetail:input_type -> proto.crm_service.GetSalesAssignmentItemDetailRequest
	18,  // 79: proto.crm_service.CrmService.GetSalesAssignmentObjectiveList:input_type -> proto.crm_service.GetSalesAssignmentObjectiveListRequest
	20,  // 80: proto.crm_service.CrmService.GetSalesAssignmentObjectiveDetail:input_type -> proto.crm_service.GetSalesAssignmentObjectiveDetailRequest
	25,  // 81: proto.crm_service.CrmService.CheckTaskCustomerAcquisitionActive:input_type -> proto.crm_service.CheckTaskCustomerAcquisitionRequest
	27,  // 82: proto.crm_service.CrmService.CheckTaskSalesAssignmentItemActive:input_type -> proto.crm_service.CheckTaskSalesAssignmentItemRequest
	29,  // 83: proto.crm_service.CrmService.SubmitTaskVisitFU:input_type -> proto.crm_service.UpdateSubmitTaskVisitFURequest
	31,  // 84: proto.crm_service.CrmService.CheckoutTaskVisitFU:input_type -> proto.crm_service.CheckoutTaskVisitFURequest
	33,  // 85: proto.crm_service.CrmService.BulkCheckoutTaskVisitFU:input_type -> proto.crm_service.BulkCheckoutTaskVisitFURequest
	37,  // 86: proto.crm_service.CrmService.SubmitTaskCustomerAcquisition:input_type -> proto.crm_service.SubmitTaskCustomerAcquisitionRequest
	42,  // 87: proto.crm_service.CrmService.SubmitTaskFailed:input_type -> proto.crm_service.SubmitTaskFailedRequest
	43,  // 88: proto.crm_service.CrmService.CreateSalesAssignmentItem:input_type -> proto.crm_service.CreateSalesAssignmentItemRequest
	44,  // 89: proto.crm_service.CrmService.GetCustomerAcquisitionById:input_type -> proto.crm_service.GetCustomerAcquisitionByIdRequest
	46,  // 90: proto.crm_service.CrmService.GetCustomerAcquisitionList:input_type -> proto.crm_service.GetCustomerAcquisitionListRequest
	47,  // 91: proto.crm_service.CrmService.GetCustomerAcquisitionListWithExcludedIds:input_type -> proto.crm_service.GetCustomerAcquisitionListWithExcludedIdsRequest
	49,  // 92: proto.crm_service.CrmService.GetCountCustomerAcquisition:input_type -> proto.crm_service.GetCountCustomerAcquisitionRequest
	52,  // 93: proto.crm_service.CrmService.GetSalesSubmissionList:input_type -> proto.crm_service.GetSalesSubmissionListRequest
	54,  // 94: proto.crm_service.CrmService.GetCustomerDetail:input_type -> proto.crm_service.GetCustomerDetailRequest
	56,  // 95: proto.crm_service.CrmService.UpdateCustomer:input_type -> proto.crm_service.UpdateCustomerRequest
	58,  // 96: proto.crm_service.CrmService.CreateCustomer:input_type -> proto.crm_service.CreateCustomerRequest
	60,  // 97: proto.crm_service.CrmService.CreateProspectiveCustomer:input_type -> proto.crm_service.CreateProspectiveCustomerRequest
	63,  // 98: proto.crm_service.CrmService.GetCustomerID:input_type -> proto.crm_service.GetCustomerIDRequest
	65,  // 99: proto.crm_service.CrmService.UpdateFixedVa:input_type -> proto.crm_service.UpdateFixedVaRequest
	2,   // 100: proto.crm_service.CrmService.GetProspectiveCustomerList:output_type -> proto.crm_service.GetProspectiveCustomerListResponse
	4,   // 101: proto.crm_service.CrmService.GetProspectiveCustomerDetail:output_type -> proto.crm_service.GetProspectiveCustomerDetailResponse
	6,   // 102: proto.crm_service.CrmService.DeleteProspectiveCustomer:output_type -> proto.crm_service.DeleteProspectiveCustomerResponse
	9,   // 103: proto.crm_service.CrmService.GetSalesAssignmentList:output_type -> proto.crm_service.GetSalesAssignmentListResponse
	11,  // 104: proto.crm_service.CrmService.GetSalesAssignmentDetail:output_type -> proto.crm_service.GetSalesAssignmentDetailResponse
	14,  // 105: proto.crm_service.CrmService.GetSalesAssignmentItemList:output_type -> proto.crm_service.GetSalesAssignmentItemListResponse
	16,  // 106: proto.crm_service.CrmService.GetSalesAssignmentItemDetail:output_type -> proto.crm_service.GetSalesAssignmentItemDetailResponse
	19,  // 107: proto.crm_service.CrmService.GetSalesAssignmentObjectiveList:output_type -> proto.crm_service.GetSalesAssignmentObjectiveListResponse
	21,  // 108: proto.crm_service.CrmService.GetSalesAssignmentObjectiveDetail:output_type -> proto.crm_service.GetSalesAssignmentObjectiveDetailResponse
	26,  // 109: proto.crm_service.CrmService.CheckTaskCustomerAcquisitionActive:output_type -> proto.crm_service.CheckTaskCustomerAcquisitionResponse
	28,  // 110: proto.crm_service.CrmService.CheckTaskSalesAssignmentItemActive:output_type -> proto.crm_service.CheckTaskSalesAssignmentItemResponse
	30,  // 111: proto.crm_service.CrmService.SubmitTaskVisitFU:output_type -> proto.crm_service.UpdateSubmitTaskVisitFUResponse
	32,  // 112: proto.crm_service.CrmService.CheckoutTaskVisitFU:output_type -> proto.crm_service.CheckoutTaskVisitFUResponse
	34,  // 113: proto.crm_service.CrmService.BulkCheckoutTaskVisitFU:output_type -> proto.crm_service.BulkCheckoutTaskVisitFUResponse
	39,  // 114: proto.crm_service.CrmService.SubmitTaskCustomerAcquisition:output_type -> proto.crm_service.SubmitTaskCustomerAcquisitionResponse
	41,  // 115: proto.crm_service.CrmService.SubmitTaskFailed:output_type -> proto.crm_service.SubmitTaskFailedResponse
	16,  // 116: proto.crm_service.CrmService.CreateSalesAssignmentItem:output_type -> proto.crm_service.GetSalesAssignmentItemDetailResponse
	45,  // 117: proto.crm_service.CrmService.GetCustomerAcquisitionById:output_type -> proto.crm_service.GetCustomerAcquisitionDetailResponse
	48,  // 118: proto.crm_service.CrmService.GetCustomerAcquisitionList:output_type -> proto.crm_service.GetCustomerAcquisitionListResponse
	48,  // 119: proto.crm_service.CrmService.GetCustomerAcquisitionListWithExcludedIds:output_type -> proto.crm_service.GetCustomerAcquisitionListResponse
	50,  // 120: proto.crm_service.CrmService.GetCountCustomerAcquisition:output_type -> proto.crm_service.GetCountCustomerAcquisitionResponse
	14,  // 121: proto.crm_service.CrmService.GetSalesSubmissionList:output_type -> proto.crm_service.GetSalesAssignmentItemListResponse
	55,  // 122: proto.crm_service.CrmService.GetCustomerDetail:output_type -> proto.crm_service.GetCustomerDetailResponse
	57,  // 123: proto.crm_service.CrmService.UpdateCustomer:output_type -> proto.crm_service.UpdateCustomerResponse
	59,  // 124: proto.crm_service.CrmService.CreateCustomer:output_type -> proto.crm_service.CreateCustomerResponse
	61,  // 125: proto.crm_service.CrmService.CreateProspectiveCustomer:output_type -> proto.crm_service.CreateProspectiveCustomerResponse
	64,  // 126: proto.crm_service.CrmService.GetCustomerID:output_type -> proto.crm_service.GetCustomerIDResponse
	66,  // 127: proto.crm_service.CrmService.UpdateFixedVa:output_type -> proto.crm_service.UpdateFixedVaResponse
	100, // [100:128] is the sub-list for method output_type
	72,  // [72:100] is the sub-list for method input_type
	72,  // [72:72] is the sub-list for extension type_name
	72,  // [72:72] is the sub-list for extension extendee
	0,   // [0:72] is the sub-list for field type_name
}

func init() { file_proto_crm_service_crm_service_proto_init() }
func file_proto_crm_service_crm_service_proto_init() {
	if File_proto_crm_service_crm_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_crm_service_crm_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProspectiveCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProspectiveCustomerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProspectiveCustomerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProspectiveCustomerDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProspectiveCustomerDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProspectiveCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProspectiveCustomerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesAssignmentItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentItemListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentItemListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentItemDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentItemDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesAssignmentObjective); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentObjectiveListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentObjectiveListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentObjectiveDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesAssignmentObjectiveDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTaskCustomerAcquisitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTaskCustomerAcquisitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTaskSalesAssignmentItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTaskSalesAssignmentItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubmitTaskVisitFURequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubmitTaskVisitFUResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutTaskVisitFURequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutTaskVisitFUResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCheckoutTaskVisitFURequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCheckoutTaskVisitFUResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerAcquisitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerAcquisitionItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTaskCustomerAcquisitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerAcqProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTaskCustomerAcquisitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesFailedVisitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTaskFailedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitTaskFailedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSalesAssignmentItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerAcquisitionByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerAcquisitionDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerAcquisitionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerAcquisitionListWithExcludedIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerAcquisitionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountCustomerAcquisitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountCustomerAcquisitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountCustomerAcquisitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesSubmissionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProspectiveCustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProspectiveCustomerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomerIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFixedVaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_crm_service_crm_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFixedVaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_crm_service_crm_service_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_proto_crm_service_crm_service_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_proto_crm_service_crm_service_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_proto_crm_service_crm_service_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_proto_crm_service_crm_service_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_proto_crm_service_crm_service_proto_msgTypes[43].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_crm_service_crm_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_crm_service_crm_service_proto_goTypes,
		DependencyIndexes: file_proto_crm_service_crm_service_proto_depIdxs,
		MessageInfos:      file_proto_crm_service_crm_service_proto_msgTypes,
	}.Build()
	File_proto_crm_service_crm_service_proto = out.File
	file_proto_crm_service_crm_service_proto_rawDesc = nil
	file_proto_crm_service_crm_service_proto_goTypes = nil
	file_proto_crm_service_crm_service_proto_depIdxs = nil
}
