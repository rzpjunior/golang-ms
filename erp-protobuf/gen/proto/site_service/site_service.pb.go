// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: proto/site_service/site_service.proto

package site_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Koli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Value  string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Name   string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Note   string `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`
	Status int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Koli) Reset() {
	*x = Koli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Koli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Koli) ProtoMessage() {}

func (x *Koli) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Koli.ProtoReflect.Descriptor instead.
func (*Koli) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{0}
}

func (x *Koli) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Koli) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Koli) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Koli) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Koli) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Koli) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DeliveryKoli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SalesOrderCode string  `protobuf:"bytes,2,opt,name=sales_order_code,json=salesOrderCode,proto3" json:"sales_order_code,omitempty"`
	KoliId         int64   `protobuf:"varint,3,opt,name=koli_id,json=koliId,proto3" json:"koli_id,omitempty"`
	Name           string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Quantity       float64 `protobuf:"fixed64,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *DeliveryKoli) Reset() {
	*x = DeliveryKoli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryKoli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryKoli) ProtoMessage() {}

func (x *DeliveryKoli) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryKoli.ProtoReflect.Descriptor instead.
func (*DeliveryKoli) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{1}
}

func (x *DeliveryKoli) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeliveryKoli) GetSalesOrderCode() string {
	if x != nil {
		return x.SalesOrderCode
	}
	return ""
}

func (x *DeliveryKoli) GetKoliId() int64 {
	if x != nil {
		return x.KoliId
	}
	return 0
}

func (x *DeliveryKoli) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeliveryKoli) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type GetKoliListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status  int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Search  string `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	OrderBy string `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *GetKoliListRequest) Reset() {
	*x = GetKoliListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKoliListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKoliListRequest) ProtoMessage() {}

func (x *GetKoliListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKoliListRequest.ProtoReflect.Descriptor instead.
func (*GetKoliListRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetKoliListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetKoliListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetKoliListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetKoliListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetKoliListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type GetKoliListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Koli `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetKoliListResponse) Reset() {
	*x = GetKoliListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKoliListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKoliListResponse) ProtoMessage() {}

func (x *GetKoliListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKoliListResponse.ProtoReflect.Descriptor instead.
func (*GetKoliListResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetKoliListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetKoliListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetKoliListResponse) GetData() []*Koli {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetKoliDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetKoliDetailRequest) Reset() {
	*x = GetKoliDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKoliDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKoliDetailRequest) ProtoMessage() {}

func (x *GetKoliDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKoliDetailRequest.ProtoReflect.Descriptor instead.
func (*GetKoliDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetKoliDetailRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetKoliDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Koli  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetKoliDetailResponse) Reset() {
	*x = GetKoliDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKoliDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKoliDetailResponse) ProtoMessage() {}

func (x *GetKoliDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKoliDetailResponse.ProtoReflect.Descriptor instead.
func (*GetKoliDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetKoliDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetKoliDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetKoliDetailResponse) GetData() *Koli {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSalesOrderDeliveryKoliRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber string `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
}

func (x *GetSalesOrderDeliveryKoliRequest) Reset() {
	*x = GetSalesOrderDeliveryKoliRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderDeliveryKoliRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderDeliveryKoliRequest) ProtoMessage() {}

func (x *GetSalesOrderDeliveryKoliRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderDeliveryKoliRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderDeliveryKoliRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetSalesOrderDeliveryKoliRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

type GetSalesOrderDeliveryKoliResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*DeliveryKoli `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesOrderDeliveryKoliResponse) Reset() {
	*x = GetSalesOrderDeliveryKoliResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderDeliveryKoliResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderDeliveryKoliResponse) ProtoMessage() {}

func (x *GetSalesOrderDeliveryKoliResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderDeliveryKoliResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderDeliveryKoliResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetSalesOrderDeliveryKoliResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSalesOrderDeliveryKoliResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSalesOrderDeliveryKoliResponse) GetData() []*DeliveryKoli {
	if x != nil {
		return x.Data
	}
	return nil
}

type PickingOrderHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocNumber       string `protobuf:"bytes,1,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
	PickerId        string `protobuf:"bytes,2,opt,name=picker_id,json=pickerId,proto3" json:"picker_id,omitempty"`
	DocDate         string `protobuf:"bytes,3,opt,name=doc_date,json=docDate,proto3" json:"doc_date,omitempty"`
	Status          int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	TotalSalesOrder int64  `protobuf:"varint,5,opt,name=total_sales_order,json=totalSalesOrder,proto3" json:"total_sales_order,omitempty"`
	Note            string `protobuf:"bytes,6,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *PickingOrderHeader) Reset() {
	*x = PickingOrderHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickingOrderHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickingOrderHeader) ProtoMessage() {}

func (x *PickingOrderHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickingOrderHeader.ProtoReflect.Descriptor instead.
func (*PickingOrderHeader) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{8}
}

func (x *PickingOrderHeader) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

func (x *PickingOrderHeader) GetPickerId() string {
	if x != nil {
		return x.PickerId
	}
	return ""
}

func (x *PickingOrderHeader) GetDocDate() string {
	if x != nil {
		return x.DocDate
	}
	return ""
}

func (x *PickingOrderHeader) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PickingOrderHeader) GetTotalSalesOrder() int64 {
	if x != nil {
		return x.TotalSalesOrder
	}
	return 0
}

func (x *PickingOrderHeader) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type PickingOrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocNumber string               `protobuf:"bytes,1,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
	Status    int32                `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Product   []*AggregatedProduct `protobuf:"bytes,3,rep,name=Product,proto3" json:"Product,omitempty"`
}

func (x *PickingOrderDetail) Reset() {
	*x = PickingOrderDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickingOrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickingOrderDetail) ProtoMessage() {}

func (x *PickingOrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickingOrderDetail.ProtoReflect.Descriptor instead.
func (*PickingOrderDetail) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{9}
}

func (x *PickingOrderDetail) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

func (x *PickingOrderDetail) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PickingOrderDetail) GetProduct() []*AggregatedProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

type AggregatedProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemNumber      string  `protobuf:"bytes,1,opt,name=item_number,json=itemNumber,proto3" json:"item_number,omitempty"`
	ItemName        string  `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	Picture         string  `protobuf:"bytes,3,opt,name=picture,proto3" json:"picture,omitempty"`
	UomDescription  string  `protobuf:"bytes,4,opt,name=uom_description,json=uomDescription,proto3" json:"uom_description,omitempty"`
	TotalOrderQty   float64 `protobuf:"fixed64,5,opt,name=total_order_qty,json=totalOrderQty,proto3" json:"total_order_qty,omitempty"`
	TotalPickedQty  float64 `protobuf:"fixed64,6,opt,name=total_picked_qty,json=totalPickedQty,proto3" json:"total_picked_qty,omitempty"`
	TotalSalesOrder int32   `protobuf:"varint,7,opt,name=total_sales_order,json=totalSalesOrder,proto3" json:"total_sales_order,omitempty"`
	Status          int32   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AggregatedProduct) Reset() {
	*x = AggregatedProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedProduct) ProtoMessage() {}

func (x *AggregatedProduct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedProduct.ProtoReflect.Descriptor instead.
func (*AggregatedProduct) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{10}
}

func (x *AggregatedProduct) GetItemNumber() string {
	if x != nil {
		return x.ItemNumber
	}
	return ""
}

func (x *AggregatedProduct) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *AggregatedProduct) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *AggregatedProduct) GetUomDescription() string {
	if x != nil {
		return x.UomDescription
	}
	return ""
}

func (x *AggregatedProduct) GetTotalOrderQty() float64 {
	if x != nil {
		return x.TotalOrderQty
	}
	return 0
}

func (x *AggregatedProduct) GetTotalPickedQty() float64 {
	if x != nil {
		return x.TotalPickedQty
	}
	return 0
}

func (x *AggregatedProduct) GetTotalSalesOrder() int32 {
	if x != nil {
		return x.TotalSalesOrder
	}
	return 0
}

func (x *AggregatedProduct) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type AggregatedProductSalesOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemNumber     string                   `protobuf:"bytes,1,opt,name=item_number,json=itemNumber,proto3" json:"item_number,omitempty"`
	ItemName       string                   `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	UomDescription string                   `protobuf:"bytes,3,opt,name=uom_description,json=uomDescription,proto3" json:"uom_description,omitempty"`
	Picture        string                   `protobuf:"bytes,4,opt,name=picture,proto3" json:"picture,omitempty"`
	SalesOrder     []*SalesOrderInformation `protobuf:"bytes,5,rep,name=sales_order,json=salesOrder,proto3" json:"sales_order,omitempty"`
}

func (x *AggregatedProductSalesOrder) Reset() {
	*x = AggregatedProductSalesOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregatedProductSalesOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregatedProductSalesOrder) ProtoMessage() {}

func (x *AggregatedProductSalesOrder) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregatedProductSalesOrder.ProtoReflect.Descriptor instead.
func (*AggregatedProductSalesOrder) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{11}
}

func (x *AggregatedProductSalesOrder) GetItemNumber() string {
	if x != nil {
		return x.ItemNumber
	}
	return ""
}

func (x *AggregatedProductSalesOrder) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *AggregatedProductSalesOrder) GetUomDescription() string {
	if x != nil {
		return x.UomDescription
	}
	return ""
}

func (x *AggregatedProductSalesOrder) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *AggregatedProductSalesOrder) GetSalesOrder() []*SalesOrderInformation {
	if x != nil {
		return x.SalesOrder
	}
	return nil
}

type SalesOrderInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SopNumber     string  `protobuf:"bytes,2,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	MerchantName  string  `protobuf:"bytes,3,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`
	Wrt           string  `protobuf:"bytes,4,opt,name=wrt,proto3" json:"wrt,omitempty"`
	OrderQty      float64 `protobuf:"fixed64,6,opt,name=order_qty,json=orderQty,proto3" json:"order_qty,omitempty"`
	PickedQty     float64 `protobuf:"fixed64,7,opt,name=picked_qty,json=pickedQty,proto3" json:"picked_qty,omitempty"`
	UnfulfillNote string  `protobuf:"bytes,8,opt,name=unfulfill_note,json=unfulfillNote,proto3" json:"unfulfill_note,omitempty"`
	Status        int32   `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SalesOrderInformation) Reset() {
	*x = SalesOrderInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesOrderInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrderInformation) ProtoMessage() {}

func (x *SalesOrderInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrderInformation.ProtoReflect.Descriptor instead.
func (*SalesOrderInformation) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{12}
}

func (x *SalesOrderInformation) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SalesOrderInformation) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *SalesOrderInformation) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *SalesOrderInformation) GetWrt() string {
	if x != nil {
		return x.Wrt
	}
	return ""
}

func (x *SalesOrderInformation) GetOrderQty() float64 {
	if x != nil {
		return x.OrderQty
	}
	return 0
}

func (x *SalesOrderInformation) GetPickedQty() float64 {
	if x != nil {
		return x.PickedQty
	}
	return 0
}

func (x *SalesOrderInformation) GetUnfulfillNote() string {
	if x != nil {
		return x.UnfulfillNote
	}
	return ""
}

func (x *SalesOrderInformation) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type PickingOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DocNumber string `protobuf:"bytes,2,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
	Status    int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PickingOrder) Reset() {
	*x = PickingOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickingOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickingOrder) ProtoMessage() {}

func (x *PickingOrder) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickingOrder.ProtoReflect.Descriptor instead.
func (*PickingOrder) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{13}
}

func (x *PickingOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PickingOrder) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

func (x *PickingOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type PickingOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PickingOrderAssignId int64   `protobuf:"varint,2,opt,name=picking_order_assign_id,json=pickingOrderAssignId,proto3" json:"picking_order_assign_id,omitempty"`
	ItemNumber           string  `protobuf:"bytes,3,opt,name=item_number,json=itemNumber,proto3" json:"item_number,omitempty"`
	ItemName             string  `protobuf:"bytes,4,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	Picture              string  `protobuf:"bytes,5,opt,name=picture,proto3" json:"picture,omitempty"`
	OrderQty             float64 `protobuf:"fixed64,6,opt,name=order_qty,json=orderQty,proto3" json:"order_qty,omitempty"`
	PickQty              float64 `protobuf:"fixed64,7,opt,name=pick_qty,json=pickQty,proto3" json:"pick_qty,omitempty"`
	CheckQty             float64 `protobuf:"fixed64,8,opt,name=check_qty,json=checkQty,proto3" json:"check_qty,omitempty"`
	ExcessQty            float64 `protobuf:"fixed64,9,opt,name=excess_qty,json=excessQty,proto3" json:"excess_qty,omitempty"`
	UnfulfillNote        string  `protobuf:"bytes,10,opt,name=unfulfill_note,json=unfulfillNote,proto3" json:"unfulfill_note,omitempty"`
	Uom                  string  `protobuf:"bytes,11,opt,name=uom,proto3" json:"uom,omitempty"`
	Status               int32   `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PickingOrderItem) Reset() {
	*x = PickingOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickingOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickingOrderItem) ProtoMessage() {}

func (x *PickingOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickingOrderItem.ProtoReflect.Descriptor instead.
func (*PickingOrderItem) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{14}
}

func (x *PickingOrderItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PickingOrderItem) GetPickingOrderAssignId() int64 {
	if x != nil {
		return x.PickingOrderAssignId
	}
	return 0
}

func (x *PickingOrderItem) GetItemNumber() string {
	if x != nil {
		return x.ItemNumber
	}
	return ""
}

func (x *PickingOrderItem) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *PickingOrderItem) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *PickingOrderItem) GetOrderQty() float64 {
	if x != nil {
		return x.OrderQty
	}
	return 0
}

func (x *PickingOrderItem) GetPickQty() float64 {
	if x != nil {
		return x.PickQty
	}
	return 0
}

func (x *PickingOrderItem) GetCheckQty() float64 {
	if x != nil {
		return x.CheckQty
	}
	return 0
}

func (x *PickingOrderItem) GetExcessQty() float64 {
	if x != nil {
		return x.ExcessQty
	}
	return 0
}

func (x *PickingOrderItem) GetUnfulfillNote() string {
	if x != nil {
		return x.UnfulfillNote
	}
	return ""
}

func (x *PickingOrderItem) GetUom() string {
	if x != nil {
		return x.Uom
	}
	return ""
}

func (x *PickingOrderItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SalesOrderPicking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber        string  `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	MerchantName     string  `protobuf:"bytes,2,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`
	SopNote          string  `protobuf:"bytes,3,opt,name=sop_note,json=sopNote,proto3" json:"sop_note,omitempty"`
	TotalKoli        float64 `protobuf:"fixed64,4,opt,name=total_koli,json=totalKoli,proto3" json:"total_koli,omitempty"`
	Status           int32   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	ReadyToPack      bool    `protobuf:"varint,6,opt,name=ready_to_pack,json=readyToPack,proto3" json:"ready_to_pack,omitempty"`
	ContainUnfulfill bool    `protobuf:"varint,7,opt,name=contain_unfulfill,json=containUnfulfill,proto3" json:"contain_unfulfill,omitempty"`
}

func (x *SalesOrderPicking) Reset() {
	*x = SalesOrderPicking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesOrderPicking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrderPicking) ProtoMessage() {}

func (x *SalesOrderPicking) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrderPicking.ProtoReflect.Descriptor instead.
func (*SalesOrderPicking) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{15}
}

func (x *SalesOrderPicking) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *SalesOrderPicking) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *SalesOrderPicking) GetSopNote() string {
	if x != nil {
		return x.SopNote
	}
	return ""
}

func (x *SalesOrderPicking) GetTotalKoli() float64 {
	if x != nil {
		return x.TotalKoli
	}
	return 0
}

func (x *SalesOrderPicking) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SalesOrderPicking) GetReadyToPack() bool {
	if x != nil {
		return x.ReadyToPack
	}
	return false
}

func (x *SalesOrderPicking) GetContainUnfulfill() bool {
	if x != nil {
		return x.ContainUnfulfill
	}
	return false
}

type SalesOrderToCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber           string  `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	MerchantName        string  `protobuf:"bytes,2,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`
	DeliveryDate        string  `protobuf:"bytes,3,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	Wrt                 string  `protobuf:"bytes,4,opt,name=wrt,proto3" json:"wrt,omitempty"`
	SopNote             string  `protobuf:"bytes,5,opt,name=sop_note,json=sopNote,proto3" json:"sop_note,omitempty"`
	TotalItemOnProgress int64   `protobuf:"varint,6,opt,name=total_item_on_progress,json=totalItemOnProgress,proto3" json:"total_item_on_progress,omitempty"`
	TotalItem           int64   `protobuf:"varint,7,opt,name=total_item,json=totalItem,proto3" json:"total_item,omitempty"`
	TotalKoli           float64 `protobuf:"fixed64,8,opt,name=total_koli,json=totalKoli,proto3" json:"total_koli,omitempty"`
	CheckerName         string  `protobuf:"bytes,9,opt,name=checker_name,json=checkerName,proto3" json:"checker_name,omitempty"`
	PickerName          string  `protobuf:"bytes,10,opt,name=picker_name,json=pickerName,proto3" json:"picker_name,omitempty"`
	Status              int32   `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	CountPrintDo        int32   `protobuf:"varint,12,opt,name=count_print_do,json=countPrintDo,proto3" json:"count_print_do,omitempty"`
	CountPrintSi        int32   `protobuf:"varint,13,opt,name=count_print_si,json=countPrintSi,proto3" json:"count_print_si,omitempty"`
}

func (x *SalesOrderToCheck) Reset() {
	*x = SalesOrderToCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesOrderToCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesOrderToCheck) ProtoMessage() {}

func (x *SalesOrderToCheck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesOrderToCheck.ProtoReflect.Descriptor instead.
func (*SalesOrderToCheck) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{16}
}

func (x *SalesOrderToCheck) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *SalesOrderToCheck) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *SalesOrderToCheck) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *SalesOrderToCheck) GetWrt() string {
	if x != nil {
		return x.Wrt
	}
	return ""
}

func (x *SalesOrderToCheck) GetSopNote() string {
	if x != nil {
		return x.SopNote
	}
	return ""
}

func (x *SalesOrderToCheck) GetTotalItemOnProgress() int64 {
	if x != nil {
		return x.TotalItemOnProgress
	}
	return 0
}

func (x *SalesOrderToCheck) GetTotalItem() int64 {
	if x != nil {
		return x.TotalItem
	}
	return 0
}

func (x *SalesOrderToCheck) GetTotalKoli() float64 {
	if x != nil {
		return x.TotalKoli
	}
	return 0
}

func (x *SalesOrderToCheck) GetCheckerName() string {
	if x != nil {
		return x.CheckerName
	}
	return ""
}

func (x *SalesOrderToCheck) GetPickerName() string {
	if x != nil {
		return x.PickerName
	}
	return ""
}

func (x *SalesOrderToCheck) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SalesOrderToCheck) GetCountPrintDo() int32 {
	if x != nil {
		return x.CountPrintDo
	}
	return 0
}

func (x *SalesOrderToCheck) GetCountPrintSi() int32 {
	if x != nil {
		return x.CountPrintSi
	}
	return 0
}

type GetPickingOrderHeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit            int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset           int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Locncode         string `protobuf:"bytes,3,opt,name=locncode,proto3" json:"locncode,omitempty"`
	Sopnumbe         string `protobuf:"bytes,4,opt,name=sopnumbe,proto3" json:"sopnumbe,omitempty"`
	Docnumbr         string `protobuf:"bytes,5,opt,name=docnumbr,proto3" json:"docnumbr,omitempty"`
	Itemnmbr         string `protobuf:"bytes,6,opt,name=itemnmbr,proto3" json:"itemnmbr,omitempty"`
	GnlHelperId      string `protobuf:"bytes,7,opt,name=gnl_helper_id,json=gnlHelperId,proto3" json:"gnl_helper_id,omitempty"`
	WmsPickingStatus int32  `protobuf:"varint,8,opt,name=wms_picking_status,json=wmsPickingStatus,proto3" json:"wms_picking_status,omitempty"`
	Custname         string `protobuf:"bytes,9,opt,name=custname,proto3" json:"custname,omitempty"`
}

func (x *GetPickingOrderHeaderRequest) Reset() {
	*x = GetPickingOrderHeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPickingOrderHeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPickingOrderHeaderRequest) ProtoMessage() {}

func (x *GetPickingOrderHeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPickingOrderHeaderRequest.ProtoReflect.Descriptor instead.
func (*GetPickingOrderHeaderRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetPickingOrderHeaderRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetPickingOrderHeaderRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetPickingOrderHeaderRequest) GetLocncode() string {
	if x != nil {
		return x.Locncode
	}
	return ""
}

func (x *GetPickingOrderHeaderRequest) GetSopnumbe() string {
	if x != nil {
		return x.Sopnumbe
	}
	return ""
}

func (x *GetPickingOrderHeaderRequest) GetDocnumbr() string {
	if x != nil {
		return x.Docnumbr
	}
	return ""
}

func (x *GetPickingOrderHeaderRequest) GetItemnmbr() string {
	if x != nil {
		return x.Itemnmbr
	}
	return ""
}

func (x *GetPickingOrderHeaderRequest) GetGnlHelperId() string {
	if x != nil {
		return x.GnlHelperId
	}
	return ""
}

func (x *GetPickingOrderHeaderRequest) GetWmsPickingStatus() int32 {
	if x != nil {
		return x.WmsPickingStatus
	}
	return 0
}

func (x *GetPickingOrderHeaderRequest) GetCustname() string {
	if x != nil {
		return x.Custname
	}
	return ""
}

type GetPickingOrderHeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*PickingOrderHeader `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPickingOrderHeaderResponse) Reset() {
	*x = GetPickingOrderHeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPickingOrderHeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPickingOrderHeaderResponse) ProtoMessage() {}

func (x *GetPickingOrderHeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPickingOrderHeaderResponse.ProtoReflect.Descriptor instead.
func (*GetPickingOrderHeaderResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetPickingOrderHeaderResponse) GetData() []*PickingOrderHeader {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPickingOrderDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemName string `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
}

func (x *GetPickingOrderDetailRequest) Reset() {
	*x = GetPickingOrderDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPickingOrderDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPickingOrderDetailRequest) ProtoMessage() {}

func (x *GetPickingOrderDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPickingOrderDetailRequest.ProtoReflect.Descriptor instead.
func (*GetPickingOrderDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetPickingOrderDetailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPickingOrderDetailRequest) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

type GetPickingOrderDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PickingOrderDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPickingOrderDetailResponse) Reset() {
	*x = GetPickingOrderDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPickingOrderDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPickingOrderDetailResponse) ProtoMessage() {}

func (x *GetPickingOrderDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPickingOrderDetailResponse.ProtoReflect.Descriptor instead.
func (*GetPickingOrderDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetPickingOrderDetailResponse) GetData() *PickingOrderDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAggregatedProductSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemNumber string `protobuf:"bytes,2,opt,name=item_number,json=itemNumber,proto3" json:"item_number,omitempty"`
}

func (x *GetAggregatedProductSalesOrderRequest) Reset() {
	*x = GetAggregatedProductSalesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregatedProductSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregatedProductSalesOrderRequest) ProtoMessage() {}

func (x *GetAggregatedProductSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregatedProductSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*GetAggregatedProductSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetAggregatedProductSalesOrderRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAggregatedProductSalesOrderRequest) GetItemNumber() string {
	if x != nil {
		return x.ItemNumber
	}
	return ""
}

type GetAggregatedProductSalesOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *AggregatedProductSalesOrder `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAggregatedProductSalesOrderResponse) Reset() {
	*x = GetAggregatedProductSalesOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregatedProductSalesOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregatedProductSalesOrderResponse) ProtoMessage() {}

func (x *GetAggregatedProductSalesOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregatedProductSalesOrderResponse.ProtoReflect.Descriptor instead.
func (*GetAggregatedProductSalesOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetAggregatedProductSalesOrderResponse) GetData() *AggregatedProductSalesOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

type StartPickingOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocNumber string `protobuf:"bytes,1,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
}

func (x *StartPickingOrderRequest) Reset() {
	*x = StartPickingOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPickingOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPickingOrderRequest) ProtoMessage() {}

func (x *StartPickingOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPickingOrderRequest.ProtoReflect.Descriptor instead.
func (*StartPickingOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{23}
}

func (x *StartPickingOrderRequest) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

type SubmitPickingModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PickQty       float64 `protobuf:"fixed64,2,opt,name=pick_qty,json=pickQty,proto3" json:"pick_qty,omitempty"`
	UnfulfillNote string  `protobuf:"bytes,3,opt,name=unfulfill_note,json=unfulfillNote,proto3" json:"unfulfill_note,omitempty"`
}

func (x *SubmitPickingModel) Reset() {
	*x = SubmitPickingModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitPickingModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitPickingModel) ProtoMessage() {}

func (x *SubmitPickingModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitPickingModel.ProtoReflect.Descriptor instead.
func (*SubmitPickingModel) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{24}
}

func (x *SubmitPickingModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubmitPickingModel) GetPickQty() float64 {
	if x != nil {
		return x.PickQty
	}
	return 0
}

func (x *SubmitPickingModel) GetUnfulfillNote() string {
	if x != nil {
		return x.UnfulfillNote
	}
	return ""
}

type SubmitPickingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request []*SubmitPickingModel `protobuf:"bytes,1,rep,name=request,proto3" json:"request,omitempty"`
}

func (x *SubmitPickingRequest) Reset() {
	*x = SubmitPickingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitPickingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitPickingRequest) ProtoMessage() {}

func (x *SubmitPickingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitPickingRequest.ProtoReflect.Descriptor instead.
func (*SubmitPickingRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{25}
}

func (x *SubmitPickingRequest) GetRequest() []*SubmitPickingModel {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetSalesOrderPickingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocNumber string `protobuf:"bytes,1,opt,name=doc_number,json=docNumber,proto3" json:"doc_number,omitempty"`
}

func (x *GetSalesOrderPickingRequest) Reset() {
	*x = GetSalesOrderPickingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderPickingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderPickingRequest) ProtoMessage() {}

func (x *GetSalesOrderPickingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderPickingRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderPickingRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetSalesOrderPickingRequest) GetDocNumber() string {
	if x != nil {
		return x.DocNumber
	}
	return ""
}

type GetSalesOrderPickingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SalesOrderPicking `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesOrderPickingResponse) Reset() {
	*x = GetSalesOrderPickingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderPickingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderPickingResponse) ProtoMessage() {}

func (x *GetSalesOrderPickingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderPickingResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderPickingResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetSalesOrderPickingResponse) GetData() []*SalesOrderPicking {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSalesOrderPickingDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber string `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
}

func (x *GetSalesOrderPickingDetailRequest) Reset() {
	*x = GetSalesOrderPickingDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderPickingDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderPickingDetailRequest) ProtoMessage() {}

func (x *GetSalesOrderPickingDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderPickingDetailRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderPickingDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetSalesOrderPickingDetailRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

type GetSalesOrderPickingDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber           string              `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	MerchantName        string              `protobuf:"bytes,2,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`
	Wrt                 string              `protobuf:"bytes,3,opt,name=wrt,proto3" json:"wrt,omitempty"`
	DeliveryDate        string              `protobuf:"bytes,4,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	TotalKoli           float64             `protobuf:"fixed64,5,opt,name=total_koli,json=totalKoli,proto3" json:"total_koli,omitempty"`
	TotalItemOnProgress int64               `protobuf:"varint,6,opt,name=total_item_on_progress,json=totalItemOnProgress,proto3" json:"total_item_on_progress,omitempty"`
	TotalItem           int64               `protobuf:"varint,7,opt,name=total_item,json=totalItem,proto3" json:"total_item,omitempty"`
	SopNote             string              `protobuf:"bytes,8,opt,name=sop_note,json=sopNote,proto3" json:"sop_note,omitempty"`
	Item                []*PickingOrderItem `protobuf:"bytes,9,rep,name=item,proto3" json:"item,omitempty"`
	Status              int32               `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	HelperId            string              `protobuf:"bytes,11,opt,name=helper_id,json=helperId,proto3" json:"helper_id,omitempty"`
	HelperName          string              `protobuf:"bytes,12,opt,name=helper_name,json=helperName,proto3" json:"helper_name,omitempty"`
}

func (x *GetSalesOrderPickingDetailResponse) Reset() {
	*x = GetSalesOrderPickingDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderPickingDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderPickingDetailResponse) ProtoMessage() {}

func (x *GetSalesOrderPickingDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderPickingDetailResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderPickingDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetSalesOrderPickingDetailResponse) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *GetSalesOrderPickingDetailResponse) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *GetSalesOrderPickingDetailResponse) GetWrt() string {
	if x != nil {
		return x.Wrt
	}
	return ""
}

func (x *GetSalesOrderPickingDetailResponse) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *GetSalesOrderPickingDetailResponse) GetTotalKoli() float64 {
	if x != nil {
		return x.TotalKoli
	}
	return 0
}

func (x *GetSalesOrderPickingDetailResponse) GetTotalItemOnProgress() int64 {
	if x != nil {
		return x.TotalItemOnProgress
	}
	return 0
}

func (x *GetSalesOrderPickingDetailResponse) GetTotalItem() int64 {
	if x != nil {
		return x.TotalItem
	}
	return 0
}

func (x *GetSalesOrderPickingDetailResponse) GetSopNote() string {
	if x != nil {
		return x.SopNote
	}
	return ""
}

func (x *GetSalesOrderPickingDetailResponse) GetItem() []*PickingOrderItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetSalesOrderPickingDetailResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSalesOrderPickingDetailResponse) GetHelperId() string {
	if x != nil {
		return x.HelperId
	}
	return ""
}

func (x *GetSalesOrderPickingDetailResponse) GetHelperName() string {
	if x != nil {
		return x.HelperName
	}
	return ""
}

type RequestDeliveryKoli struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Quantity float64 `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *RequestDeliveryKoli) Reset() {
	*x = RequestDeliveryKoli{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestDeliveryKoli) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDeliveryKoli) ProtoMessage() {}

func (x *RequestDeliveryKoli) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDeliveryKoli.ProtoReflect.Descriptor instead.
func (*RequestDeliveryKoli) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{30}
}

func (x *RequestDeliveryKoli) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RequestDeliveryKoli) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type SubmitSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber string                 `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	Request   []*RequestDeliveryKoli `protobuf:"bytes,2,rep,name=request,proto3" json:"request,omitempty"`
	PickerId  string                 `protobuf:"bytes,3,opt,name=picker_id,json=pickerId,proto3" json:"picker_id,omitempty"`
}

func (x *SubmitSalesOrderRequest) Reset() {
	*x = SubmitSalesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitSalesOrderRequest) ProtoMessage() {}

func (x *SubmitSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*SubmitSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{31}
}

func (x *SubmitSalesOrderRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *SubmitSalesOrderRequest) GetRequest() []*RequestDeliveryKoli {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *SubmitSalesOrderRequest) GetPickerId() string {
	if x != nil {
		return x.PickerId
	}
	return ""
}

type HistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	PickerId  string `protobuf:"bytes,3,opt,name=picker_id,json=pickerId,proto3" json:"picker_id,omitempty"`
	SopNumber string `protobuf:"bytes,4,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	Custname  string `protobuf:"bytes,5,opt,name=custname,proto3" json:"custname,omitempty"`
}

func (x *HistoryRequest) Reset() {
	*x = HistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryRequest) ProtoMessage() {}

func (x *HistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryRequest.ProtoReflect.Descriptor instead.
func (*HistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{32}
}

func (x *HistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *HistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *HistoryRequest) GetPickerId() string {
	if x != nil {
		return x.PickerId
	}
	return ""
}

func (x *HistoryRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *HistoryRequest) GetCustname() string {
	if x != nil {
		return x.Custname
	}
	return ""
}

type HistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SalesOrderToCheck `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *HistoryResponse) Reset() {
	*x = HistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryResponse) ProtoMessage() {}

func (x *HistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryResponse.ProtoReflect.Descriptor instead.
func (*HistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{33}
}

func (x *HistoryResponse) GetData() []*SalesOrderToCheck {
	if x != nil {
		return x.Data
	}
	return nil
}

type HistoryDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber string `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
}

func (x *HistoryDetailRequest) Reset() {
	*x = HistoryDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryDetailRequest) ProtoMessage() {}

func (x *HistoryDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryDetailRequest.ProtoReflect.Descriptor instead.
func (*HistoryDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{34}
}

func (x *HistoryDetailRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

type HistoryDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber           string              `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	MerchantName        string              `protobuf:"bytes,2,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`
	Wrt                 string              `protobuf:"bytes,3,opt,name=wrt,proto3" json:"wrt,omitempty"`
	DeliveryDate        string              `protobuf:"bytes,4,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	TotalKoli           float64             `protobuf:"fixed64,5,opt,name=total_koli,json=totalKoli,proto3" json:"total_koli,omitempty"`
	TotalItemOnProgress int64               `protobuf:"varint,6,opt,name=total_item_on_progress,json=totalItemOnProgress,proto3" json:"total_item_on_progress,omitempty"`
	TotalItem           int64               `protobuf:"varint,7,opt,name=total_item,json=totalItem,proto3" json:"total_item,omitempty"`
	SopNote             string              `protobuf:"bytes,8,opt,name=sop_note,json=sopNote,proto3" json:"sop_note,omitempty"`
	Item                []*PickingOrderItem `protobuf:"bytes,9,rep,name=item,proto3" json:"item,omitempty"`
	Status              int32               `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *HistoryDetailResponse) Reset() {
	*x = HistoryDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryDetailResponse) ProtoMessage() {}

func (x *HistoryDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryDetailResponse.ProtoReflect.Descriptor instead.
func (*HistoryDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{35}
}

func (x *HistoryDetailResponse) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *HistoryDetailResponse) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *HistoryDetailResponse) GetWrt() string {
	if x != nil {
		return x.Wrt
	}
	return ""
}

func (x *HistoryDetailResponse) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *HistoryDetailResponse) GetTotalKoli() float64 {
	if x != nil {
		return x.TotalKoli
	}
	return 0
}

func (x *HistoryDetailResponse) GetTotalItemOnProgress() int64 {
	if x != nil {
		return x.TotalItemOnProgress
	}
	return 0
}

func (x *HistoryDetailResponse) GetTotalItem() int64 {
	if x != nil {
		return x.TotalItem
	}
	return 0
}

func (x *HistoryDetailResponse) GetSopNote() string {
	if x != nil {
		return x.SopNote
	}
	return ""
}

func (x *HistoryDetailResponse) GetItem() []*PickingOrderItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *HistoryDetailResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetSalesOrderToCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    int32    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SiteId    string   `protobuf:"bytes,3,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	SopNumber string   `protobuf:"bytes,4,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	Status    []int32  `protobuf:"varint,5,rep,packed,name=status,proto3" json:"status,omitempty"`
	WrtIds    []string `protobuf:"bytes,6,rep,name=wrt_ids,json=wrtIds,proto3" json:"wrt_ids,omitempty"`
	Custname  string   `protobuf:"bytes,7,opt,name=custname,proto3" json:"custname,omitempty"`
}

func (x *GetSalesOrderToCheckRequest) Reset() {
	*x = GetSalesOrderToCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderToCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderToCheckRequest) ProtoMessage() {}

func (x *GetSalesOrderToCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderToCheckRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderToCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetSalesOrderToCheckRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSalesOrderToCheckRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetSalesOrderToCheckRequest) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *GetSalesOrderToCheckRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *GetSalesOrderToCheckRequest) GetStatus() []int32 {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetSalesOrderToCheckRequest) GetWrtIds() []string {
	if x != nil {
		return x.WrtIds
	}
	return nil
}

func (x *GetSalesOrderToCheckRequest) GetCustname() string {
	if x != nil {
		return x.Custname
	}
	return ""
}

type GetSalesOrderToCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SalesOrderToCheck `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetSalesOrderToCheckResponse) Reset() {
	*x = GetSalesOrderToCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderToCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderToCheckResponse) ProtoMessage() {}

func (x *GetSalesOrderToCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderToCheckResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderToCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetSalesOrderToCheckResponse) GetData() []*SalesOrderToCheck {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetSalesOrderToCheckDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber string `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	CheckerId string `protobuf:"bytes,2,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
}

func (x *GetSalesOrderToCheckDetailRequest) Reset() {
	*x = GetSalesOrderToCheckDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderToCheckDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderToCheckDetailRequest) ProtoMessage() {}

func (x *GetSalesOrderToCheckDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderToCheckDetailRequest.ProtoReflect.Descriptor instead.
func (*GetSalesOrderToCheckDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{38}
}

func (x *GetSalesOrderToCheckDetailRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *GetSalesOrderToCheckDetailRequest) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

type GetSalesOrderToCheckDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber           string              `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	DeliveryDate        string              `protobuf:"bytes,2,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	MerchantName        string              `protobuf:"bytes,3,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`
	SopNote             string              `protobuf:"bytes,4,opt,name=sop_note,json=sopNote,proto3" json:"sop_note,omitempty"`
	Wrt                 string              `protobuf:"bytes,5,opt,name=wrt,proto3" json:"wrt,omitempty"`
	PickerName          string              `protobuf:"bytes,6,opt,name=picker_name,json=pickerName,proto3" json:"picker_name,omitempty"`
	TotalKoli           float64             `protobuf:"fixed64,7,opt,name=total_koli,json=totalKoli,proto3" json:"total_koli,omitempty"`
	TotalItemOnProgress int64               `protobuf:"varint,8,opt,name=total_item_on_progress,json=totalItemOnProgress,proto3" json:"total_item_on_progress,omitempty"`
	TotalItem           int64               `protobuf:"varint,9,opt,name=total_item,json=totalItem,proto3" json:"total_item,omitempty"`
	Item                []*PickingOrderItem `protobuf:"bytes,10,rep,name=item,proto3" json:"item,omitempty"`
	Status              int32               `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetSalesOrderToCheckDetailResponse) Reset() {
	*x = GetSalesOrderToCheckDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSalesOrderToCheckDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSalesOrderToCheckDetailResponse) ProtoMessage() {}

func (x *GetSalesOrderToCheckDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSalesOrderToCheckDetailResponse.ProtoReflect.Descriptor instead.
func (*GetSalesOrderToCheckDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{39}
}

func (x *GetSalesOrderToCheckDetailResponse) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *GetSalesOrderToCheckDetailResponse) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *GetSalesOrderToCheckDetailResponse) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *GetSalesOrderToCheckDetailResponse) GetSopNote() string {
	if x != nil {
		return x.SopNote
	}
	return ""
}

func (x *GetSalesOrderToCheckDetailResponse) GetWrt() string {
	if x != nil {
		return x.Wrt
	}
	return ""
}

func (x *GetSalesOrderToCheckDetailResponse) GetPickerName() string {
	if x != nil {
		return x.PickerName
	}
	return ""
}

func (x *GetSalesOrderToCheckDetailResponse) GetTotalKoli() float64 {
	if x != nil {
		return x.TotalKoli
	}
	return 0
}

func (x *GetSalesOrderToCheckDetailResponse) GetTotalItemOnProgress() int64 {
	if x != nil {
		return x.TotalItemOnProgress
	}
	return 0
}

func (x *GetSalesOrderToCheckDetailResponse) GetTotalItem() int64 {
	if x != nil {
		return x.TotalItem
	}
	return 0
}

func (x *GetSalesOrderToCheckDetailResponse) GetItem() []*PickingOrderItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GetSalesOrderToCheckDetailResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SPVRejectSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber string `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	SpvId     string `protobuf:"bytes,2,opt,name=spv_id,json=spvId,proto3" json:"spv_id,omitempty"`
}

func (x *SPVRejectSalesOrderRequest) Reset() {
	*x = SPVRejectSalesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPVRejectSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPVRejectSalesOrderRequest) ProtoMessage() {}

func (x *SPVRejectSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPVRejectSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*SPVRejectSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{40}
}

func (x *SPVRejectSalesOrderRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *SPVRejectSalesOrderRequest) GetSpvId() string {
	if x != nil {
		return x.SpvId
	}
	return ""
}

type SPVAcceptSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber string `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	SpvId     string `protobuf:"bytes,2,opt,name=spv_id,json=spvId,proto3" json:"spv_id,omitempty"`
}

func (x *SPVAcceptSalesOrderRequest) Reset() {
	*x = SPVAcceptSalesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPVAcceptSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPVAcceptSalesOrderRequest) ProtoMessage() {}

func (x *SPVAcceptSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPVAcceptSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*SPVAcceptSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{41}
}

func (x *SPVAcceptSalesOrderRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *SPVAcceptSalesOrderRequest) GetSpvId() string {
	if x != nil {
		return x.SpvId
	}
	return ""
}

type CheckerStartCheckingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber string `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	CheckerId string `protobuf:"bytes,2,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
}

func (x *CheckerStartCheckingRequest) Reset() {
	*x = CheckerStartCheckingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerStartCheckingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerStartCheckingRequest) ProtoMessage() {}

func (x *CheckerStartCheckingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerStartCheckingRequest.ProtoReflect.Descriptor instead.
func (*CheckerStartCheckingRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{42}
}

func (x *CheckerStartCheckingRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *CheckerStartCheckingRequest) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

type CheckerSubmitCheckingModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemNumber string  `protobuf:"bytes,1,opt,name=item_number,json=itemNumber,proto3" json:"item_number,omitempty"`
	CheckQty   float64 `protobuf:"fixed64,2,opt,name=check_qty,json=checkQty,proto3" json:"check_qty,omitempty"`
}

func (x *CheckerSubmitCheckingModel) Reset() {
	*x = CheckerSubmitCheckingModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerSubmitCheckingModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerSubmitCheckingModel) ProtoMessage() {}

func (x *CheckerSubmitCheckingModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerSubmitCheckingModel.ProtoReflect.Descriptor instead.
func (*CheckerSubmitCheckingModel) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{43}
}

func (x *CheckerSubmitCheckingModel) GetItemNumber() string {
	if x != nil {
		return x.ItemNumber
	}
	return ""
}

func (x *CheckerSubmitCheckingModel) GetCheckQty() float64 {
	if x != nil {
		return x.CheckQty
	}
	return 0
}

type CheckerSubmitCheckingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber string                        `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	Request   []*CheckerSubmitCheckingModel `protobuf:"bytes,2,rep,name=request,proto3" json:"request,omitempty"`
	CheckerId string                        `protobuf:"bytes,3,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
}

func (x *CheckerSubmitCheckingRequest) Reset() {
	*x = CheckerSubmitCheckingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerSubmitCheckingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerSubmitCheckingRequest) ProtoMessage() {}

func (x *CheckerSubmitCheckingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerSubmitCheckingRequest.ProtoReflect.Descriptor instead.
func (*CheckerSubmitCheckingRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{44}
}

func (x *CheckerSubmitCheckingRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *CheckerSubmitCheckingRequest) GetRequest() []*CheckerSubmitCheckingModel {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *CheckerSubmitCheckingRequest) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

type CheckerRejectSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber        string   `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	ItemNumberReject []string `protobuf:"bytes,2,rep,name=item_number_reject,json=itemNumberReject,proto3" json:"item_number_reject,omitempty"`
	CheckerId        string   `protobuf:"bytes,3,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
}

func (x *CheckerRejectSalesOrderRequest) Reset() {
	*x = CheckerRejectSalesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerRejectSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerRejectSalesOrderRequest) ProtoMessage() {}

func (x *CheckerRejectSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerRejectSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*CheckerRejectSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{45}
}

func (x *CheckerRejectSalesOrderRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *CheckerRejectSalesOrderRequest) GetItemNumberReject() []string {
	if x != nil {
		return x.ItemNumberReject
	}
	return nil
}

func (x *CheckerRejectSalesOrderRequest) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

type CheckerGetDeliveryKoliRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber string `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
}

func (x *CheckerGetDeliveryKoliRequest) Reset() {
	*x = CheckerGetDeliveryKoliRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerGetDeliveryKoliRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerGetDeliveryKoliRequest) ProtoMessage() {}

func (x *CheckerGetDeliveryKoliRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerGetDeliveryKoliRequest.ProtoReflect.Descriptor instead.
func (*CheckerGetDeliveryKoliRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{46}
}

func (x *CheckerGetDeliveryKoliRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

type CheckerGetDeliveryKoliResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DeliveryKoli `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CheckerGetDeliveryKoliResponse) Reset() {
	*x = CheckerGetDeliveryKoliResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerGetDeliveryKoliResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerGetDeliveryKoliResponse) ProtoMessage() {}

func (x *CheckerGetDeliveryKoliResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerGetDeliveryKoliResponse.ProtoReflect.Descriptor instead.
func (*CheckerGetDeliveryKoliResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{47}
}

func (x *CheckerGetDeliveryKoliResponse) GetData() []*DeliveryKoli {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckerAcceptSalesOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber string                 `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	Koli      []*RequestDeliveryKoli `protobuf:"bytes,2,rep,name=koli,proto3" json:"koli,omitempty"`
	CheckerId string                 `protobuf:"bytes,3,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
}

func (x *CheckerAcceptSalesOrderRequest) Reset() {
	*x = CheckerAcceptSalesOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerAcceptSalesOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerAcceptSalesOrderRequest) ProtoMessage() {}

func (x *CheckerAcceptSalesOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerAcceptSalesOrderRequest.ProtoReflect.Descriptor instead.
func (*CheckerAcceptSalesOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{48}
}

func (x *CheckerAcceptSalesOrderRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *CheckerAcceptSalesOrderRequest) GetKoli() []*RequestDeliveryKoli {
	if x != nil {
		return x.Koli
	}
	return nil
}

func (x *CheckerAcceptSalesOrderRequest) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

type CheckerAcceptSalesOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	DeliveryOrder string `protobuf:"bytes,2,opt,name=delivery_order,json=deliveryOrder,proto3" json:"delivery_order,omitempty"`
	SalesInvoice  string `protobuf:"bytes,3,opt,name=sales_invoice,json=salesInvoice,proto3" json:"sales_invoice,omitempty"`
}

func (x *CheckerAcceptSalesOrderResponse) Reset() {
	*x = CheckerAcceptSalesOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerAcceptSalesOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerAcceptSalesOrderResponse) ProtoMessage() {}

func (x *CheckerAcceptSalesOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerAcceptSalesOrderResponse.ProtoReflect.Descriptor instead.
func (*CheckerAcceptSalesOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{49}
}

func (x *CheckerAcceptSalesOrderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CheckerAcceptSalesOrderResponse) GetDeliveryOrder() string {
	if x != nil {
		return x.DeliveryOrder
	}
	return ""
}

func (x *CheckerAcceptSalesOrderResponse) GetSalesInvoice() string {
	if x != nil {
		return x.SalesInvoice
	}
	return ""
}

type SuccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SuccessResponse) Reset() {
	*x = SuccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResponse) ProtoMessage() {}

func (x *SuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResponse.ProtoReflect.Descriptor instead.
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{50}
}

func (x *SuccessResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CheckerHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	CheckerId string `protobuf:"bytes,3,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
	WrtId     string `protobuf:"bytes,4,opt,name=wrt_id,json=wrtId,proto3" json:"wrt_id,omitempty"`
	SopNumber string `protobuf:"bytes,5,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	Custname  string `protobuf:"bytes,6,opt,name=custname,proto3" json:"custname,omitempty"`
}

func (x *CheckerHistoryRequest) Reset() {
	*x = CheckerHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerHistoryRequest) ProtoMessage() {}

func (x *CheckerHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerHistoryRequest.ProtoReflect.Descriptor instead.
func (*CheckerHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{51}
}

func (x *CheckerHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CheckerHistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CheckerHistoryRequest) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

func (x *CheckerHistoryRequest) GetWrtId() string {
	if x != nil {
		return x.WrtId
	}
	return ""
}

func (x *CheckerHistoryRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *CheckerHistoryRequest) GetCustname() string {
	if x != nil {
		return x.Custname
	}
	return ""
}

type CheckerHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*SalesOrderToCheck `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *CheckerHistoryResponse) Reset() {
	*x = CheckerHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerHistoryResponse) ProtoMessage() {}

func (x *CheckerHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerHistoryResponse.ProtoReflect.Descriptor instead.
func (*CheckerHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{52}
}

func (x *CheckerHistoryResponse) GetData() []*SalesOrderToCheck {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckerHistoryDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckerId string `protobuf:"bytes,1,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
	SopNumber string `protobuf:"bytes,2,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
}

func (x *CheckerHistoryDetailRequest) Reset() {
	*x = CheckerHistoryDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerHistoryDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerHistoryDetailRequest) ProtoMessage() {}

func (x *CheckerHistoryDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerHistoryDetailRequest.ProtoReflect.Descriptor instead.
func (*CheckerHistoryDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{53}
}

func (x *CheckerHistoryDetailRequest) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

func (x *CheckerHistoryDetailRequest) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

type CheckerHistoryDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber           string              `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	DeliveryDate        string              `protobuf:"bytes,2,opt,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	MerchantName        string              `protobuf:"bytes,3,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`
	SopNote             string              `protobuf:"bytes,4,opt,name=sop_note,json=sopNote,proto3" json:"sop_note,omitempty"`
	Wrt                 string              `protobuf:"bytes,5,opt,name=wrt,proto3" json:"wrt,omitempty"`
	PickerName          string              `protobuf:"bytes,6,opt,name=picker_name,json=pickerName,proto3" json:"picker_name,omitempty"`
	TotalKoli           float64             `protobuf:"fixed64,7,opt,name=total_koli,json=totalKoli,proto3" json:"total_koli,omitempty"`
	TotalItemOnProgress int64               `protobuf:"varint,8,opt,name=total_item_on_progress,json=totalItemOnProgress,proto3" json:"total_item_on_progress,omitempty"`
	TotalItem           int64               `protobuf:"varint,9,opt,name=total_item,json=totalItem,proto3" json:"total_item,omitempty"`
	Item                []*PickingOrderItem `protobuf:"bytes,10,rep,name=item,proto3" json:"item,omitempty"`
	Status              int32               `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	CountPrintDo        int32               `protobuf:"varint,12,opt,name=count_print_do,json=countPrintDo,proto3" json:"count_print_do,omitempty"`
	CountPrintSi        int32               `protobuf:"varint,13,opt,name=count_print_si,json=countPrintSi,proto3" json:"count_print_si,omitempty"`
}

func (x *CheckerHistoryDetailResponse) Reset() {
	*x = CheckerHistoryDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerHistoryDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerHistoryDetailResponse) ProtoMessage() {}

func (x *CheckerHistoryDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerHistoryDetailResponse.ProtoReflect.Descriptor instead.
func (*CheckerHistoryDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{54}
}

func (x *CheckerHistoryDetailResponse) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *CheckerHistoryDetailResponse) GetDeliveryDate() string {
	if x != nil {
		return x.DeliveryDate
	}
	return ""
}

func (x *CheckerHistoryDetailResponse) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *CheckerHistoryDetailResponse) GetSopNote() string {
	if x != nil {
		return x.SopNote
	}
	return ""
}

func (x *CheckerHistoryDetailResponse) GetWrt() string {
	if x != nil {
		return x.Wrt
	}
	return ""
}

func (x *CheckerHistoryDetailResponse) GetPickerName() string {
	if x != nil {
		return x.PickerName
	}
	return ""
}

func (x *CheckerHistoryDetailResponse) GetTotalKoli() float64 {
	if x != nil {
		return x.TotalKoli
	}
	return 0
}

func (x *CheckerHistoryDetailResponse) GetTotalItemOnProgress() int64 {
	if x != nil {
		return x.TotalItemOnProgress
	}
	return 0
}

func (x *CheckerHistoryDetailResponse) GetTotalItem() int64 {
	if x != nil {
		return x.TotalItem
	}
	return 0
}

func (x *CheckerHistoryDetailResponse) GetItem() []*PickingOrderItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *CheckerHistoryDetailResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CheckerHistoryDetailResponse) GetCountPrintDo() int32 {
	if x != nil {
		return x.CountPrintDo
	}
	return 0
}

func (x *CheckerHistoryDetailResponse) GetCountPrintSi() int32 {
	if x != nil {
		return x.CountPrintSi
	}
	return 0
}

type PickerWidgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GnlHelperId string `protobuf:"bytes,1,opt,name=gnl_helper_id,json=gnlHelperId,proto3" json:"gnl_helper_id,omitempty"`
}

func (x *PickerWidgetRequest) Reset() {
	*x = PickerWidgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickerWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickerWidgetRequest) ProtoMessage() {}

func (x *PickerWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickerWidgetRequest.ProtoReflect.Descriptor instead.
func (*PickerWidgetRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{55}
}

func (x *PickerWidgetRequest) GetGnlHelperId() string {
	if x != nil {
		return x.GnlHelperId
	}
	return ""
}

type PickerWidgetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSalesOrder             int64   `protobuf:"varint,1,opt,name=total_sales_order,json=totalSalesOrder,proto3" json:"total_sales_order,omitempty"`
	TotalNew                    int64   `protobuf:"varint,2,opt,name=total_new,json=totalNew,proto3" json:"total_new,omitempty"`
	TotalOnProgress             int64   `protobuf:"varint,3,opt,name=total_on_progress,json=totalOnProgress,proto3" json:"total_on_progress,omitempty"`
	TotalOnProgressPercentage   float64 `protobuf:"fixed64,4,opt,name=total_on_progress_percentage,json=totalOnProgressPercentage,proto3" json:"total_on_progress_percentage,omitempty"`
	TotalPicked                 int64   `protobuf:"varint,5,opt,name=total_picked,json=totalPicked,proto3" json:"total_picked,omitempty"`
	TotalPickedPercentage       float64 `protobuf:"fixed64,6,opt,name=total_picked_percentage,json=totalPickedPercentage,proto3" json:"total_picked_percentage,omitempty"`
	TotalNeedApproval           int64   `protobuf:"varint,7,opt,name=total_need_approval,json=totalNeedApproval,proto3" json:"total_need_approval,omitempty"`
	TotalNeedApprovalPercentage float64 `protobuf:"fixed64,8,opt,name=total_need_approval_percentage,json=totalNeedApprovalPercentage,proto3" json:"total_need_approval_percentage,omitempty"`
}

func (x *PickerWidgetResponse) Reset() {
	*x = PickerWidgetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickerWidgetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickerWidgetResponse) ProtoMessage() {}

func (x *PickerWidgetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickerWidgetResponse.ProtoReflect.Descriptor instead.
func (*PickerWidgetResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{56}
}

func (x *PickerWidgetResponse) GetTotalSalesOrder() int64 {
	if x != nil {
		return x.TotalSalesOrder
	}
	return 0
}

func (x *PickerWidgetResponse) GetTotalNew() int64 {
	if x != nil {
		return x.TotalNew
	}
	return 0
}

func (x *PickerWidgetResponse) GetTotalOnProgress() int64 {
	if x != nil {
		return x.TotalOnProgress
	}
	return 0
}

func (x *PickerWidgetResponse) GetTotalOnProgressPercentage() float64 {
	if x != nil {
		return x.TotalOnProgressPercentage
	}
	return 0
}

func (x *PickerWidgetResponse) GetTotalPicked() int64 {
	if x != nil {
		return x.TotalPicked
	}
	return 0
}

func (x *PickerWidgetResponse) GetTotalPickedPercentage() float64 {
	if x != nil {
		return x.TotalPickedPercentage
	}
	return 0
}

func (x *PickerWidgetResponse) GetTotalNeedApproval() int64 {
	if x != nil {
		return x.TotalNeedApproval
	}
	return 0
}

func (x *PickerWidgetResponse) GetTotalNeedApprovalPercentage() float64 {
	if x != nil {
		return x.TotalNeedApprovalPercentage
	}
	return 0
}

type SPVWidgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteIdGp string `protobuf:"bytes,1,opt,name=site_id_gp,json=siteIdGp,proto3" json:"site_id_gp,omitempty"`
}

func (x *SPVWidgetRequest) Reset() {
	*x = SPVWidgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPVWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPVWidgetRequest) ProtoMessage() {}

func (x *SPVWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPVWidgetRequest.ProtoReflect.Descriptor instead.
func (*SPVWidgetRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{57}
}

func (x *SPVWidgetRequest) GetSiteIdGp() string {
	if x != nil {
		return x.SiteIdGp
	}
	return ""
}

type SPVWidgetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSalesOrder             int64   `protobuf:"varint,1,opt,name=total_sales_order,json=totalSalesOrder,proto3" json:"total_sales_order,omitempty"`
	TotalNew                    int64   `protobuf:"varint,2,opt,name=total_new,json=totalNew,proto3" json:"total_new,omitempty"`
	TotalOnProgress             int64   `protobuf:"varint,3,opt,name=total_on_progress,json=totalOnProgress,proto3" json:"total_on_progress,omitempty"`
	TotalOnProgressPercentage   float64 `protobuf:"fixed64,4,opt,name=total_on_progress_percentage,json=totalOnProgressPercentage,proto3" json:"total_on_progress_percentage,omitempty"`
	TotalNeedApproval           int64   `protobuf:"varint,5,opt,name=total_need_approval,json=totalNeedApproval,proto3" json:"total_need_approval,omitempty"`
	TotalNeedApprovalPercentage float64 `protobuf:"fixed64,6,opt,name=total_need_approval_percentage,json=totalNeedApprovalPercentage,proto3" json:"total_need_approval_percentage,omitempty"`
	TotalFinished               int64   `protobuf:"varint,7,opt,name=total_finished,json=totalFinished,proto3" json:"total_finished,omitempty"`
	TotalFinishedPercentage     float64 `protobuf:"fixed64,8,opt,name=total_finished_percentage,json=totalFinishedPercentage,proto3" json:"total_finished_percentage,omitempty"`
}

func (x *SPVWidgetResponse) Reset() {
	*x = SPVWidgetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPVWidgetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPVWidgetResponse) ProtoMessage() {}

func (x *SPVWidgetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPVWidgetResponse.ProtoReflect.Descriptor instead.
func (*SPVWidgetResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{58}
}

func (x *SPVWidgetResponse) GetTotalSalesOrder() int64 {
	if x != nil {
		return x.TotalSalesOrder
	}
	return 0
}

func (x *SPVWidgetResponse) GetTotalNew() int64 {
	if x != nil {
		return x.TotalNew
	}
	return 0
}

func (x *SPVWidgetResponse) GetTotalOnProgress() int64 {
	if x != nil {
		return x.TotalOnProgress
	}
	return 0
}

func (x *SPVWidgetResponse) GetTotalOnProgressPercentage() float64 {
	if x != nil {
		return x.TotalOnProgressPercentage
	}
	return 0
}

func (x *SPVWidgetResponse) GetTotalNeedApproval() int64 {
	if x != nil {
		return x.TotalNeedApproval
	}
	return 0
}

func (x *SPVWidgetResponse) GetTotalNeedApprovalPercentage() float64 {
	if x != nil {
		return x.TotalNeedApprovalPercentage
	}
	return 0
}

func (x *SPVWidgetResponse) GetTotalFinished() int64 {
	if x != nil {
		return x.TotalFinished
	}
	return 0
}

func (x *SPVWidgetResponse) GetTotalFinishedPercentage() float64 {
	if x != nil {
		return x.TotalFinishedPercentage
	}
	return 0
}

type CheckerWidgetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckerId string `protobuf:"bytes,1,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
}

func (x *CheckerWidgetRequest) Reset() {
	*x = CheckerWidgetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerWidgetRequest) ProtoMessage() {}

func (x *CheckerWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerWidgetRequest.ProtoReflect.Descriptor instead.
func (*CheckerWidgetRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{59}
}

func (x *CheckerWidgetRequest) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

type CheckerWidgetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalSalesOrder         int64   `protobuf:"varint,1,opt,name=total_sales_order,json=totalSalesOrder,proto3" json:"total_sales_order,omitempty"`
	TotalPicked             int64   `protobuf:"varint,2,opt,name=total_picked,json=totalPicked,proto3" json:"total_picked,omitempty"`
	TotalFinished           int64   `protobuf:"varint,3,opt,name=total_finished,json=totalFinished,proto3" json:"total_finished,omitempty"`
	TotalFinishedPercentage float64 `protobuf:"fixed64,4,opt,name=total_finished_percentage,json=totalFinishedPercentage,proto3" json:"total_finished_percentage,omitempty"`
	TotalChecking           int64   `protobuf:"varint,5,opt,name=total_checking,json=totalChecking,proto3" json:"total_checking,omitempty"`
	TotalCheckingPercentage float64 `protobuf:"fixed64,6,opt,name=total_checking_percentage,json=totalCheckingPercentage,proto3" json:"total_checking_percentage,omitempty"`
}

func (x *CheckerWidgetResponse) Reset() {
	*x = CheckerWidgetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerWidgetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerWidgetResponse) ProtoMessage() {}

func (x *CheckerWidgetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerWidgetResponse.ProtoReflect.Descriptor instead.
func (*CheckerWidgetResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{60}
}

func (x *CheckerWidgetResponse) GetTotalSalesOrder() int64 {
	if x != nil {
		return x.TotalSalesOrder
	}
	return 0
}

func (x *CheckerWidgetResponse) GetTotalPicked() int64 {
	if x != nil {
		return x.TotalPicked
	}
	return 0
}

func (x *CheckerWidgetResponse) GetTotalFinished() int64 {
	if x != nil {
		return x.TotalFinished
	}
	return 0
}

func (x *CheckerWidgetResponse) GetTotalFinishedPercentage() float64 {
	if x != nil {
		return x.TotalFinishedPercentage
	}
	return 0
}

func (x *CheckerWidgetResponse) GetTotalChecking() int64 {
	if x != nil {
		return x.TotalChecking
	}
	return 0
}

func (x *CheckerWidgetResponse) GetTotalCheckingPercentage() float64 {
	if x != nil {
		return x.TotalCheckingPercentage
	}
	return 0
}

type GetWrtMonitoringListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId   string   `protobuf:"bytes,1,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	Type     int64    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	HelperId []string `protobuf:"bytes,3,rep,name=helper_id,json=helperId,proto3" json:"helper_id,omitempty"`
}

func (x *GetWrtMonitoringListRequest) Reset() {
	*x = GetWrtMonitoringListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWrtMonitoringListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWrtMonitoringListRequest) ProtoMessage() {}

func (x *GetWrtMonitoringListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWrtMonitoringListRequest.ProtoReflect.Descriptor instead.
func (*GetWrtMonitoringListRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{61}
}

func (x *GetWrtMonitoringListRequest) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *GetWrtMonitoringListRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetWrtMonitoringListRequest) GetHelperId() []string {
	if x != nil {
		return x.HelperId
	}
	return nil
}

type WrtMonitoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WrtId                string  `protobuf:"bytes,1,opt,name=wrt_id,json=wrtId,proto3" json:"wrt_id,omitempty"`
	WrtDesc              string  `protobuf:"bytes,2,opt,name=wrt_desc,json=wrtDesc,proto3" json:"wrt_desc,omitempty"`
	CountSo              int64   `protobuf:"varint,3,opt,name=count_so,json=countSo,proto3" json:"count_so,omitempty"`
	OnProgress           int64   `protobuf:"varint,4,opt,name=on_progress,json=onProgress,proto3" json:"on_progress,omitempty"`
	OnProgressPercentage float64 `protobuf:"fixed64,5,opt,name=on_progress_percentage,json=onProgressPercentage,proto3" json:"on_progress_percentage,omitempty"`
	Finished             int64   `protobuf:"varint,6,opt,name=finished,proto3" json:"finished,omitempty"`
	FinishedPercentage   float64 `protobuf:"fixed64,7,opt,name=finished_percentage,json=finishedPercentage,proto3" json:"finished_percentage,omitempty"`
}

func (x *WrtMonitoring) Reset() {
	*x = WrtMonitoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WrtMonitoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrtMonitoring) ProtoMessage() {}

func (x *WrtMonitoring) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WrtMonitoring.ProtoReflect.Descriptor instead.
func (*WrtMonitoring) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{62}
}

func (x *WrtMonitoring) GetWrtId() string {
	if x != nil {
		return x.WrtId
	}
	return ""
}

func (x *WrtMonitoring) GetWrtDesc() string {
	if x != nil {
		return x.WrtDesc
	}
	return ""
}

func (x *WrtMonitoring) GetCountSo() int64 {
	if x != nil {
		return x.CountSo
	}
	return 0
}

func (x *WrtMonitoring) GetOnProgress() int64 {
	if x != nil {
		return x.OnProgress
	}
	return 0
}

func (x *WrtMonitoring) GetOnProgressPercentage() float64 {
	if x != nil {
		return x.OnProgressPercentage
	}
	return 0
}

func (x *WrtMonitoring) GetFinished() int64 {
	if x != nil {
		return x.Finished
	}
	return 0
}

func (x *WrtMonitoring) GetFinishedPercentage() float64 {
	if x != nil {
		return x.FinishedPercentage
	}
	return 0
}

type GetWrtMonitoringListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WrtMonitoring `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetWrtMonitoringListResponse) Reset() {
	*x = GetWrtMonitoringListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWrtMonitoringListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWrtMonitoringListResponse) ProtoMessage() {}

func (x *GetWrtMonitoringListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWrtMonitoringListResponse.ProtoReflect.Descriptor instead.
func (*GetWrtMonitoringListResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{63}
}

func (x *GetWrtMonitoringListResponse) GetData() []*WrtMonitoring {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetWrtMonitoringDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteId   string   `protobuf:"bytes,1,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	WrtId    string   `protobuf:"bytes,2,opt,name=wrt_id,json=wrtId,proto3" json:"wrt_id,omitempty"`
	Type     int64    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	HelperId []string `protobuf:"bytes,4,rep,name=helper_id,json=helperId,proto3" json:"helper_id,omitempty"`
}

func (x *GetWrtMonitoringDetailRequest) Reset() {
	*x = GetWrtMonitoringDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWrtMonitoringDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWrtMonitoringDetailRequest) ProtoMessage() {}

func (x *GetWrtMonitoringDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWrtMonitoringDetailRequest.ProtoReflect.Descriptor instead.
func (*GetWrtMonitoringDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{64}
}

func (x *GetWrtMonitoringDetailRequest) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *GetWrtMonitoringDetailRequest) GetWrtId() string {
	if x != nil {
		return x.WrtId
	}
	return ""
}

func (x *GetWrtMonitoringDetailRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetWrtMonitoringDetailRequest) GetHelperId() []string {
	if x != nil {
		return x.HelperId
	}
	return nil
}

type WrtMonitoringDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SopNumber    string  `protobuf:"bytes,1,opt,name=sop_number,json=sopNumber,proto3" json:"sop_number,omitempty"`
	MerchantName string  `protobuf:"bytes,2,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`
	TotalKoli    float64 `protobuf:"fixed64,3,opt,name=total_koli,json=totalKoli,proto3" json:"total_koli,omitempty"`
	HelperCode   string  `protobuf:"bytes,4,opt,name=helper_code,json=helperCode,proto3" json:"helper_code,omitempty"`
	HelperName   string  `protobuf:"bytes,5,opt,name=helper_name,json=helperName,proto3" json:"helper_name,omitempty"`
	Status       int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *WrtMonitoringDetail) Reset() {
	*x = WrtMonitoringDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WrtMonitoringDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WrtMonitoringDetail) ProtoMessage() {}

func (x *WrtMonitoringDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WrtMonitoringDetail.ProtoReflect.Descriptor instead.
func (*WrtMonitoringDetail) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{65}
}

func (x *WrtMonitoringDetail) GetSopNumber() string {
	if x != nil {
		return x.SopNumber
	}
	return ""
}

func (x *WrtMonitoringDetail) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *WrtMonitoringDetail) GetTotalKoli() float64 {
	if x != nil {
		return x.TotalKoli
	}
	return 0
}

func (x *WrtMonitoringDetail) GetHelperCode() string {
	if x != nil {
		return x.HelperCode
	}
	return ""
}

func (x *WrtMonitoringDetail) GetHelperName() string {
	if x != nil {
		return x.HelperName
	}
	return ""
}

func (x *WrtMonitoringDetail) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetWrtMonitoringDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WrtMonitoringDetail `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetWrtMonitoringDetailResponse) Reset() {
	*x = GetWrtMonitoringDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWrtMonitoringDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWrtMonitoringDetailResponse) ProtoMessage() {}

func (x *GetWrtMonitoringDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWrtMonitoringDetailResponse.ProtoReflect.Descriptor instead.
func (*GetWrtMonitoringDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{66}
}

func (x *GetWrtMonitoringDetailResponse) GetData() []*WrtMonitoringDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type LoginHelperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email         string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Timezone      string `protobuf:"bytes,3,opt,name=timezone,proto3" json:"timezone,omitempty"`
	FirebaseToken string `protobuf:"bytes,4,opt,name=firebase_token,json=firebaseToken,proto3" json:"firebase_token,omitempty"`
}

func (x *LoginHelperRequest) Reset() {
	*x = LoginHelperRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginHelperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginHelperRequest) ProtoMessage() {}

func (x *LoginHelperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginHelperRequest.ProtoReflect.Descriptor instead.
func (*LoginHelperRequest) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{67}
}

func (x *LoginHelperRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginHelperRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginHelperRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *LoginHelperRequest) GetFirebaseToken() string {
	if x != nil {
		return x.FirebaseToken
	}
	return ""
}

type LoginHelperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	User          *LoginHelperResponse_User `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Token         string                    `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	FirebaseToken string                    `protobuf:"bytes,5,opt,name=firebase_token,json=firebaseToken,proto3" json:"firebase_token,omitempty"`
}

func (x *LoginHelperResponse) Reset() {
	*x = LoginHelperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginHelperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginHelperResponse) ProtoMessage() {}

func (x *LoginHelperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginHelperResponse.ProtoReflect.Descriptor instead.
func (*LoginHelperResponse) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{68}
}

func (x *LoginHelperResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginHelperResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LoginHelperResponse) GetUser() *LoginHelperResponse_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoginHelperResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginHelperResponse) GetFirebaseToken() string {
	if x != nil {
		return x.FirebaseToken
	}
	return ""
}

type LoginHelperResponse_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SiteId   string `protobuf:"bytes,3,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
	SiteName string `protobuf:"bytes,4,opt,name=site_name,json=siteName,proto3" json:"site_name,omitempty"`
	RoleName string `protobuf:"bytes,5,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *LoginHelperResponse_User) Reset() {
	*x = LoginHelperResponse_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_site_service_site_service_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginHelperResponse_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginHelperResponse_User) ProtoMessage() {}

func (x *LoginHelperResponse_User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_site_service_site_service_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginHelperResponse_User.ProtoReflect.Descriptor instead.
func (*LoginHelperResponse_User) Descriptor() ([]byte, []int) {
	return file_proto_site_service_site_service_proto_rawDescGZIP(), []int{68, 0}
}

func (x *LoginHelperResponse_User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LoginHelperResponse_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginHelperResponse_User) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *LoginHelperResponse_User) GetSiteName() string {
	if x != nil {
		return x.SiteName
	}
	return ""
}

func (x *LoginHelperResponse_User) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

var File_proto_site_service_site_service_proto protoreflect.FileDescriptor

var file_proto_site_service_site_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x04,
	0x4b, 0x6f, 0x6c, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x91,
	0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x6f, 0x6c,
	0x69, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6b, 0x6f, 0x6c, 0x69,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4b, 0x6f, 0x6c, 0x69, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x22, 0x71, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4b, 0x6f, 0x6c, 0x69, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6f, 0x6c, 0x69, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4b, 0x6f, 0x6c, 0x69,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x73, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4b, 0x6f, 0x6c, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4b, 0x6f, 0x6c, 0x69, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x41, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b,
	0x6f, 0x6c, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xc3, 0x01, 0x0a, 0x12, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x12, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x6f, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x22, 0xaa, 0x02, 0x0a, 0x11, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6f, 0x6d,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x51, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x69, 0x63,
	0x6b, 0x65, 0x64, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x51, 0x74, 0x79, 0x12, 0x2a, 0x0a,
	0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xea, 0x01, 0x0a, 0x1b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x75, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6f, 0x6d, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xf8,
	0x01, 0x0a, 0x15, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x77, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x77, 0x72, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x69, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x51, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e,
	0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x75, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x55, 0x0a, 0x0c, 0x50, 0x69, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x63,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x6f, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xf6, 0x02, 0x0a, 0x10, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x70, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x71, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x74,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x6b, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x69, 0x63, 0x6b, 0x51, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x51, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x65,
	0x78, 0x63, 0x65, 0x73, 0x73, 0x51, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x75, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x6f,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x11, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23,
	0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6b, 0x6f, 0x6c, 0x69, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4b, 0x6f, 0x6c, 0x69, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x74,
	0x6f, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x54, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x5f, 0x75, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x55, 0x6e, 0x66,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x22, 0xc4, 0x03, 0x0a, 0x11, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x77, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x70, 0x5f, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x70, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x6e, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6b, 0x6f, 0x6c, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4b, 0x6f, 0x6c, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x5f, 0x64, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x44, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x69, 0x22, 0xaa, 0x02,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x70, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x70, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x6e, 0x75, 0x6d, 0x62, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x6e, 0x75, 0x6d, 0x62, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x6e, 0x6d, 0x62, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x6e, 0x6d, 0x62, 0x72, 0x12, 0x22, 0x0a, 0x0d,
	0x67, 0x6e, 0x6c, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x6e, 0x6c, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6d, 0x73, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x77, 0x6d,
	0x73, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x69,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x58, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x26, 0x47,
	0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x18, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50,
	0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x69, 0x63, 0x6b, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70,
	0x69, 0x63, 0x6b, 0x51, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x66, 0x75, 0x6c, 0x66,
	0x69, 0x6c, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x75, 0x6e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x22, 0x58, 0x0a,
	0x14, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x59, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x42, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0xbd, 0x03, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x77, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x77, 0x72,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6b, 0x6f, 0x6c, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4b, 0x6f, 0x6c, 0x69, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x4f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x70,
	0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x70,
	0x4e, 0x6f, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x98, 0x01, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x41, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x0e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x0f, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x14, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0xf2, 0x02, 0x0a, 0x15, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f,
	0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x77, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x77, 0x72, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6b,
	0x6f, 0x6c, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4b, 0x6f, 0x6c, 0x69, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x4f,
	0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x70, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x70, 0x4e,
	0x6f, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x77, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa0, 0x03, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x70, 0x4e, 0x6f, 0x74,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x77, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6b, 0x6f,
	0x6c, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4b,
	0x6f, 0x6c, 0x69, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x6e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x38, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x52, 0x0a, 0x1a, 0x53, 0x50, 0x56,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x70,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x76, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x76, 0x49, 0x64, 0x22, 0x52, 0x0a,
	0x1a, 0x53, 0x50, 0x56, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70,
	0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x76, 0x49,
	0x64, 0x22, 0x5b, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5a,
	0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x51, 0x74, 0x79, 0x22, 0xa6, 0x01, 0x0a, 0x1c, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x1e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x3e, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x56, 0x0a, 0x1e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x4b, 0x6f, 0x6c, 0x69, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9b, 0x01, 0x0a, 0x1e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x04,
	0x6b, 0x6f, 0x6c, 0x69, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b,
	0x6f, 0x6c, 0x69, 0x52, 0x04, 0x6b, 0x6f, 0x6c, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x1f, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x22, 0x2b, 0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0xb6, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x77, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5b, 0x0a,
	0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xe6, 0x03, 0x0a, 0x1c, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6f, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x77, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x77, 0x72,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6b, 0x6f, 0x6c, 0x69,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4b, 0x6f, 0x6c,
	0x69, 0x12, 0x33, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x4f, 0x6e, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x38, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x44, 0x6f, 0x12, 0x24, 0x0a,
	0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x53, 0x69, 0x22, 0x39, 0x0a, 0x13, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x6e,
	0x6c, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x67, 0x6e, 0x6c, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9c,
	0x03, 0x0a, 0x14, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x65, 0x77,
	0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x4f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x1c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x64,
	0x12, 0x36, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x65, 0x65, 0x64,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x43, 0x0a, 0x1e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x1b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x65, 0x65, 0x64, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x30, 0x0a,
	0x10, 0x53, 0x50, 0x56, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x67, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x47, 0x70, 0x22,
	0xa1, 0x03, 0x0a, 0x11, 0x53, 0x50, 0x56, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x65, 0x77, 0x12, 0x2a,
	0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x65, 0x65, 0x64, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x43, 0x0a, 0x1e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x61, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x1b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x65, 0x65, 0x64, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0xac, 0x02, 0x0a, 0x15, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x69, 0x63,
	0x6b, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a,
	0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x67, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x57, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x80, 0x02, 0x0a, 0x0d, 0x57, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x77, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x72, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x77,
	0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x73, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x14, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x12, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x57, 0x72, 0x74, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x80, 0x01, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x57, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x77, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x72, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xd2, 0x01, 0x0a, 0x13, 0x57, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x70, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x70,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6b, 0x6f, 0x6c, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4b, 0x6f, 0x6c, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65,
	0x6c, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68,
	0x65, 0x6c, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x5d, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x57, 0x72, 0x74, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x72, 0x74, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x89, 0x01, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x48, 0x65, 0x6c,
	0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x65,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xc1, 0x02, 0x0a, 0x13, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x48, 0x65,
	0x6c, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x7d, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x32, 0xd5, 0x1c, 0x0a, 0x0b, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x60, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4b, 0x6f, 0x6c, 0x69, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x6f, 0x6c, 0x69, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4b, 0x6f, 0x6c, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4b, 0x6f, 0x6c, 0x69,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b,
	0x6f, 0x6c, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x6f, 0x6c, 0x69, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x12, 0x34, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0b, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x48, 0x65, 0x6c, 0x70,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x69,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x99, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x60, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50, 0x69, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x50,
	0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x8d, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x07, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x66, 0x0a, 0x0d, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0c, 0x50, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x1d, 0x53, 0x50,
	0x56, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x35, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x13,
	0x53, 0x50, 0x56, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x50, 0x56, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x13, 0x53, 0x50,
	0x56, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x50, 0x56, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x09, 0x53, 0x50, 0x56, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x50, 0x56, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x50, 0x56, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x10, 0x53, 0x50, 0x56, 0x57, 0x72, 0x74, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01,
	0x0a, 0x16, 0x53, 0x50, 0x56, 0x57, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x57, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x94, 0x01, 0x0a, 0x21, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x12, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x17, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x81, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x12, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x47, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4b, 0x6f, 0x6c, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x0e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x59, 0x5a, 0x51, 0x67,
	0x69, 0x74, 0x2e, 0x65, 0x64, 0x65, 0x6e, 0x66, 0x61, 0x72, 0x6d, 0x2e, 0x69, 0x64, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x33, 0x2f,
	0x65, 0x72, 0x70, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x72, 0x70,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0xa2, 0x02, 0x03, 0x45, 0x4f, 0x50, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_site_service_site_service_proto_rawDescOnce sync.Once
	file_proto_site_service_site_service_proto_rawDescData = file_proto_site_service_site_service_proto_rawDesc
)

func file_proto_site_service_site_service_proto_rawDescGZIP() []byte {
	file_proto_site_service_site_service_proto_rawDescOnce.Do(func() {
		file_proto_site_service_site_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_site_service_site_service_proto_rawDescData)
	})
	return file_proto_site_service_site_service_proto_rawDescData
}

var file_proto_site_service_site_service_proto_msgTypes = make([]protoimpl.MessageInfo, 70)
var file_proto_site_service_site_service_proto_goTypes = []interface{}{
	(*Koli)(nil),                                   // 0: proto.site_service.Koli
	(*DeliveryKoli)(nil),                           // 1: proto.site_service.DeliveryKoli
	(*GetKoliListRequest)(nil),                     // 2: proto.site_service.GetKoliListRequest
	(*GetKoliListResponse)(nil),                    // 3: proto.site_service.GetKoliListResponse
	(*GetKoliDetailRequest)(nil),                   // 4: proto.site_service.GetKoliDetailRequest
	(*GetKoliDetailResponse)(nil),                  // 5: proto.site_service.GetKoliDetailResponse
	(*GetSalesOrderDeliveryKoliRequest)(nil),       // 6: proto.site_service.GetSalesOrderDeliveryKoliRequest
	(*GetSalesOrderDeliveryKoliResponse)(nil),      // 7: proto.site_service.GetSalesOrderDeliveryKoliResponse
	(*PickingOrderHeader)(nil),                     // 8: proto.site_service.PickingOrderHeader
	(*PickingOrderDetail)(nil),                     // 9: proto.site_service.PickingOrderDetail
	(*AggregatedProduct)(nil),                      // 10: proto.site_service.AggregatedProduct
	(*AggregatedProductSalesOrder)(nil),            // 11: proto.site_service.AggregatedProductSalesOrder
	(*SalesOrderInformation)(nil),                  // 12: proto.site_service.SalesOrderInformation
	(*PickingOrder)(nil),                           // 13: proto.site_service.PickingOrder
	(*PickingOrderItem)(nil),                       // 14: proto.site_service.PickingOrderItem
	(*SalesOrderPicking)(nil),                      // 15: proto.site_service.SalesOrderPicking
	(*SalesOrderToCheck)(nil),                      // 16: proto.site_service.SalesOrderToCheck
	(*GetPickingOrderHeaderRequest)(nil),           // 17: proto.site_service.GetPickingOrderHeaderRequest
	(*GetPickingOrderHeaderResponse)(nil),          // 18: proto.site_service.GetPickingOrderHeaderResponse
	(*GetPickingOrderDetailRequest)(nil),           // 19: proto.site_service.GetPickingOrderDetailRequest
	(*GetPickingOrderDetailResponse)(nil),          // 20: proto.site_service.GetPickingOrderDetailResponse
	(*GetAggregatedProductSalesOrderRequest)(nil),  // 21: proto.site_service.GetAggregatedProductSalesOrderRequest
	(*GetAggregatedProductSalesOrderResponse)(nil), // 22: proto.site_service.GetAggregatedProductSalesOrderResponse
	(*StartPickingOrderRequest)(nil),               // 23: proto.site_service.StartPickingOrderRequest
	(*SubmitPickingModel)(nil),                     // 24: proto.site_service.SubmitPickingModel
	(*SubmitPickingRequest)(nil),                   // 25: proto.site_service.SubmitPickingRequest
	(*GetSalesOrderPickingRequest)(nil),            // 26: proto.site_service.GetSalesOrderPickingRequest
	(*GetSalesOrderPickingResponse)(nil),           // 27: proto.site_service.GetSalesOrderPickingResponse
	(*GetSalesOrderPickingDetailRequest)(nil),      // 28: proto.site_service.GetSalesOrderPickingDetailRequest
	(*GetSalesOrderPickingDetailResponse)(nil),     // 29: proto.site_service.GetSalesOrderPickingDetailResponse
	(*RequestDeliveryKoli)(nil),                    // 30: proto.site_service.RequestDeliveryKoli
	(*SubmitSalesOrderRequest)(nil),                // 31: proto.site_service.SubmitSalesOrderRequest
	(*HistoryRequest)(nil),                         // 32: proto.site_service.HistoryRequest
	(*HistoryResponse)(nil),                        // 33: proto.site_service.HistoryResponse
	(*HistoryDetailRequest)(nil),                   // 34: proto.site_service.HistoryDetailRequest
	(*HistoryDetailResponse)(nil),                  // 35: proto.site_service.HistoryDetailResponse
	(*GetSalesOrderToCheckRequest)(nil),            // 36: proto.site_service.GetSalesOrderToCheckRequest
	(*GetSalesOrderToCheckResponse)(nil),           // 37: proto.site_service.GetSalesOrderToCheckResponse
	(*GetSalesOrderToCheckDetailRequest)(nil),      // 38: proto.site_service.GetSalesOrderToCheckDetailRequest
	(*GetSalesOrderToCheckDetailResponse)(nil),     // 39: proto.site_service.GetSalesOrderToCheckDetailResponse
	(*SPVRejectSalesOrderRequest)(nil),             // 40: proto.site_service.SPVRejectSalesOrderRequest
	(*SPVAcceptSalesOrderRequest)(nil),             // 41: proto.site_service.SPVAcceptSalesOrderRequest
	(*CheckerStartCheckingRequest)(nil),            // 42: proto.site_service.CheckerStartCheckingRequest
	(*CheckerSubmitCheckingModel)(nil),             // 43: proto.site_service.CheckerSubmitCheckingModel
	(*CheckerSubmitCheckingRequest)(nil),           // 44: proto.site_service.CheckerSubmitCheckingRequest
	(*CheckerRejectSalesOrderRequest)(nil),         // 45: proto.site_service.CheckerRejectSalesOrderRequest
	(*CheckerGetDeliveryKoliRequest)(nil),          // 46: proto.site_service.CheckerGetDeliveryKoliRequest
	(*CheckerGetDeliveryKoliResponse)(nil),         // 47: proto.site_service.CheckerGetDeliveryKoliResponse
	(*CheckerAcceptSalesOrderRequest)(nil),         // 48: proto.site_service.CheckerAcceptSalesOrderRequest
	(*CheckerAcceptSalesOrderResponse)(nil),        // 49: proto.site_service.CheckerAcceptSalesOrderResponse
	(*SuccessResponse)(nil),                        // 50: proto.site_service.SuccessResponse
	(*CheckerHistoryRequest)(nil),                  // 51: proto.site_service.CheckerHistoryRequest
	(*CheckerHistoryResponse)(nil),                 // 52: proto.site_service.CheckerHistoryResponse
	(*CheckerHistoryDetailRequest)(nil),            // 53: proto.site_service.CheckerHistoryDetailRequest
	(*CheckerHistoryDetailResponse)(nil),           // 54: proto.site_service.CheckerHistoryDetailResponse
	(*PickerWidgetRequest)(nil),                    // 55: proto.site_service.PickerWidgetRequest
	(*PickerWidgetResponse)(nil),                   // 56: proto.site_service.PickerWidgetResponse
	(*SPVWidgetRequest)(nil),                       // 57: proto.site_service.SPVWidgetRequest
	(*SPVWidgetResponse)(nil),                      // 58: proto.site_service.SPVWidgetResponse
	(*CheckerWidgetRequest)(nil),                   // 59: proto.site_service.CheckerWidgetRequest
	(*CheckerWidgetResponse)(nil),                  // 60: proto.site_service.CheckerWidgetResponse
	(*GetWrtMonitoringListRequest)(nil),            // 61: proto.site_service.GetWrtMonitoringListRequest
	(*WrtMonitoring)(nil),                          // 62: proto.site_service.WrtMonitoring
	(*GetWrtMonitoringListResponse)(nil),           // 63: proto.site_service.GetWrtMonitoringListResponse
	(*GetWrtMonitoringDetailRequest)(nil),          // 64: proto.site_service.GetWrtMonitoringDetailRequest
	(*WrtMonitoringDetail)(nil),                    // 65: proto.site_service.WrtMonitoringDetail
	(*GetWrtMonitoringDetailResponse)(nil),         // 66: proto.site_service.GetWrtMonitoringDetailResponse
	(*LoginHelperRequest)(nil),                     // 67: proto.site_service.LoginHelperRequest
	(*LoginHelperResponse)(nil),                    // 68: proto.site_service.LoginHelperResponse
	(*LoginHelperResponse_User)(nil),               // 69: proto.site_service.LoginHelperResponse.User
}
var file_proto_site_service_site_service_proto_depIdxs = []int32{
	0,  // 0: proto.site_service.GetKoliListResponse.data:type_name -> proto.site_service.Koli
	0,  // 1: proto.site_service.GetKoliDetailResponse.data:type_name -> proto.site_service.Koli
	1,  // 2: proto.site_service.GetSalesOrderDeliveryKoliResponse.data:type_name -> proto.site_service.DeliveryKoli
	10, // 3: proto.site_service.PickingOrderDetail.Product:type_name -> proto.site_service.AggregatedProduct
	12, // 4: proto.site_service.AggregatedProductSalesOrder.sales_order:type_name -> proto.site_service.SalesOrderInformation
	8,  // 5: proto.site_service.GetPickingOrderHeaderResponse.data:type_name -> proto.site_service.PickingOrderHeader
	9,  // 6: proto.site_service.GetPickingOrderDetailResponse.data:type_name -> proto.site_service.PickingOrderDetail
	11, // 7: proto.site_service.GetAggregatedProductSalesOrderResponse.data:type_name -> proto.site_service.AggregatedProductSalesOrder
	24, // 8: proto.site_service.SubmitPickingRequest.request:type_name -> proto.site_service.SubmitPickingModel
	15, // 9: proto.site_service.GetSalesOrderPickingResponse.data:type_name -> proto.site_service.SalesOrderPicking
	14, // 10: proto.site_service.GetSalesOrderPickingDetailResponse.item:type_name -> proto.site_service.PickingOrderItem
	30, // 11: proto.site_service.SubmitSalesOrderRequest.request:type_name -> proto.site_service.RequestDeliveryKoli
	16, // 12: proto.site_service.HistoryResponse.data:type_name -> proto.site_service.SalesOrderToCheck
	14, // 13: proto.site_service.HistoryDetailResponse.item:type_name -> proto.site_service.PickingOrderItem
	16, // 14: proto.site_service.GetSalesOrderToCheckResponse.data:type_name -> proto.site_service.SalesOrderToCheck
	14, // 15: proto.site_service.GetSalesOrderToCheckDetailResponse.item:type_name -> proto.site_service.PickingOrderItem
	43, // 16: proto.site_service.CheckerSubmitCheckingRequest.request:type_name -> proto.site_service.CheckerSubmitCheckingModel
	1,  // 17: proto.site_service.CheckerGetDeliveryKoliResponse.data:type_name -> proto.site_service.DeliveryKoli
	30, // 18: proto.site_service.CheckerAcceptSalesOrderRequest.koli:type_name -> proto.site_service.RequestDeliveryKoli
	16, // 19: proto.site_service.CheckerHistoryResponse.data:type_name -> proto.site_service.SalesOrderToCheck
	14, // 20: proto.site_service.CheckerHistoryDetailResponse.item:type_name -> proto.site_service.PickingOrderItem
	62, // 21: proto.site_service.GetWrtMonitoringListResponse.data:type_name -> proto.site_service.WrtMonitoring
	65, // 22: proto.site_service.GetWrtMonitoringDetailResponse.data:type_name -> proto.site_service.WrtMonitoringDetail
	69, // 23: proto.site_service.LoginHelperResponse.user:type_name -> proto.site_service.LoginHelperResponse.User
	2,  // 24: proto.site_service.SiteService.GetKoliList:input_type -> proto.site_service.GetKoliListRequest
	4,  // 25: proto.site_service.SiteService.GetKoliDetail:input_type -> proto.site_service.GetKoliDetailRequest
	6,  // 26: proto.site_service.SiteService.GetSalesOrderDeliveryKoli:input_type -> proto.site_service.GetSalesOrderDeliveryKoliRequest
	67, // 27: proto.site_service.SiteService.LoginHelper:input_type -> proto.site_service.LoginHelperRequest
	17, // 28: proto.site_service.SiteService.GetPickingOrderHeader:input_type -> proto.site_service.GetPickingOrderHeaderRequest
	19, // 29: proto.site_service.SiteService.GetPickingOrderDetail:input_type -> proto.site_service.GetPickingOrderDetailRequest
	21, // 30: proto.site_service.SiteService.GetAggregatedProductSalesOrder:input_type -> proto.site_service.GetAggregatedProductSalesOrderRequest
	23, // 31: proto.site_service.SiteService.StartPickingOrder:input_type -> proto.site_service.StartPickingOrderRequest
	25, // 32: proto.site_service.SiteService.SubmitPicking:input_type -> proto.site_service.SubmitPickingRequest
	26, // 33: proto.site_service.SiteService.GetSalesOrderPicking:input_type -> proto.site_service.GetSalesOrderPickingRequest
	28, // 34: proto.site_service.SiteService.GetSalesOrderPickingDetail:input_type -> proto.site_service.GetSalesOrderPickingDetailRequest
	31, // 35: proto.site_service.SiteService.SubmitSalesOrder:input_type -> proto.site_service.SubmitSalesOrderRequest
	32, // 36: proto.site_service.SiteService.History:input_type -> proto.site_service.HistoryRequest
	34, // 37: proto.site_service.SiteService.HistoryDetail:input_type -> proto.site_service.HistoryDetailRequest
	55, // 38: proto.site_service.SiteService.PickerWidget:input_type -> proto.site_service.PickerWidgetRequest
	36, // 39: proto.site_service.SiteService.GetSalesOrderToCheck:input_type -> proto.site_service.GetSalesOrderToCheckRequest
	38, // 40: proto.site_service.SiteService.SPVGetSalesOrderToCheckDetail:input_type -> proto.site_service.GetSalesOrderToCheckDetailRequest
	40, // 41: proto.site_service.SiteService.SPVRejectSalesOrder:input_type -> proto.site_service.SPVRejectSalesOrderRequest
	41, // 42: proto.site_service.SiteService.SPVAcceptSalesOrder:input_type -> proto.site_service.SPVAcceptSalesOrderRequest
	57, // 43: proto.site_service.SiteService.SPVWidget:input_type -> proto.site_service.SPVWidgetRequest
	61, // 44: proto.site_service.SiteService.SPVWrtMonitoring:input_type -> proto.site_service.GetWrtMonitoringListRequest
	64, // 45: proto.site_service.SiteService.SPVWrtMonitoringDetail:input_type -> proto.site_service.GetWrtMonitoringDetailRequest
	38, // 46: proto.site_service.SiteService.CheckerGetSalesOrderToCheckDetail:input_type -> proto.site_service.GetSalesOrderToCheckDetailRequest
	42, // 47: proto.site_service.SiteService.CheckerStartChecking:input_type -> proto.site_service.CheckerStartCheckingRequest
	44, // 48: proto.site_service.SiteService.CheckerSubmitChecking:input_type -> proto.site_service.CheckerSubmitCheckingRequest
	45, // 49: proto.site_service.SiteService.CheckerRejectSalesOrder:input_type -> proto.site_service.CheckerRejectSalesOrderRequest
	46, // 50: proto.site_service.SiteService.CheckerGetDeliveryKoli:input_type -> proto.site_service.CheckerGetDeliveryKoliRequest
	48, // 51: proto.site_service.SiteService.CheckerAcceptSalesOrder:input_type -> proto.site_service.CheckerAcceptSalesOrderRequest
	51, // 52: proto.site_service.SiteService.CheckerHistory:input_type -> proto.site_service.CheckerHistoryRequest
	53, // 53: proto.site_service.SiteService.CheckerHistoryDetail:input_type -> proto.site_service.CheckerHistoryDetailRequest
	59, // 54: proto.site_service.SiteService.CheckerWidget:input_type -> proto.site_service.CheckerWidgetRequest
	3,  // 55: proto.site_service.SiteService.GetKoliList:output_type -> proto.site_service.GetKoliListResponse
	5,  // 56: proto.site_service.SiteService.GetKoliDetail:output_type -> proto.site_service.GetKoliDetailResponse
	7,  // 57: proto.site_service.SiteService.GetSalesOrderDeliveryKoli:output_type -> proto.site_service.GetSalesOrderDeliveryKoliResponse
	68, // 58: proto.site_service.SiteService.LoginHelper:output_type -> proto.site_service.LoginHelperResponse
	18, // 59: proto.site_service.SiteService.GetPickingOrderHeader:output_type -> proto.site_service.GetPickingOrderHeaderResponse
	20, // 60: proto.site_service.SiteService.GetPickingOrderDetail:output_type -> proto.site_service.GetPickingOrderDetailResponse
	22, // 61: proto.site_service.SiteService.GetAggregatedProductSalesOrder:output_type -> proto.site_service.GetAggregatedProductSalesOrderResponse
	50, // 62: proto.site_service.SiteService.StartPickingOrder:output_type -> proto.site_service.SuccessResponse
	50, // 63: proto.site_service.SiteService.SubmitPicking:output_type -> proto.site_service.SuccessResponse
	27, // 64: proto.site_service.SiteService.GetSalesOrderPicking:output_type -> proto.site_service.GetSalesOrderPickingResponse
	29, // 65: proto.site_service.SiteService.GetSalesOrderPickingDetail:output_type -> proto.site_service.GetSalesOrderPickingDetailResponse
	50, // 66: proto.site_service.SiteService.SubmitSalesOrder:output_type -> proto.site_service.SuccessResponse
	33, // 67: proto.site_service.SiteService.History:output_type -> proto.site_service.HistoryResponse
	35, // 68: proto.site_service.SiteService.HistoryDetail:output_type -> proto.site_service.HistoryDetailResponse
	56, // 69: proto.site_service.SiteService.PickerWidget:output_type -> proto.site_service.PickerWidgetResponse
	37, // 70: proto.site_service.SiteService.GetSalesOrderToCheck:output_type -> proto.site_service.GetSalesOrderToCheckResponse
	39, // 71: proto.site_service.SiteService.SPVGetSalesOrderToCheckDetail:output_type -> proto.site_service.GetSalesOrderToCheckDetailResponse
	50, // 72: proto.site_service.SiteService.SPVRejectSalesOrder:output_type -> proto.site_service.SuccessResponse
	50, // 73: proto.site_service.SiteService.SPVAcceptSalesOrder:output_type -> proto.site_service.SuccessResponse
	58, // 74: proto.site_service.SiteService.SPVWidget:output_type -> proto.site_service.SPVWidgetResponse
	63, // 75: proto.site_service.SiteService.SPVWrtMonitoring:output_type -> proto.site_service.GetWrtMonitoringListResponse
	66, // 76: proto.site_service.SiteService.SPVWrtMonitoringDetail:output_type -> proto.site_service.GetWrtMonitoringDetailResponse
	39, // 77: proto.site_service.SiteService.CheckerGetSalesOrderToCheckDetail:output_type -> proto.site_service.GetSalesOrderToCheckDetailResponse
	50, // 78: proto.site_service.SiteService.CheckerStartChecking:output_type -> proto.site_service.SuccessResponse
	50, // 79: proto.site_service.SiteService.CheckerSubmitChecking:output_type -> proto.site_service.SuccessResponse
	50, // 80: proto.site_service.SiteService.CheckerRejectSalesOrder:output_type -> proto.site_service.SuccessResponse
	47, // 81: proto.site_service.SiteService.CheckerGetDeliveryKoli:output_type -> proto.site_service.CheckerGetDeliveryKoliResponse
	49, // 82: proto.site_service.SiteService.CheckerAcceptSalesOrder:output_type -> proto.site_service.CheckerAcceptSalesOrderResponse
	52, // 83: proto.site_service.SiteService.CheckerHistory:output_type -> proto.site_service.CheckerHistoryResponse
	54, // 84: proto.site_service.SiteService.CheckerHistoryDetail:output_type -> proto.site_service.CheckerHistoryDetailResponse
	60, // 85: proto.site_service.SiteService.CheckerWidget:output_type -> proto.site_service.CheckerWidgetResponse
	55, // [55:86] is the sub-list for method output_type
	24, // [24:55] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_proto_site_service_site_service_proto_init() }
func file_proto_site_service_site_service_proto_init() {
	if File_proto_site_service_site_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_site_service_site_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Koli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryKoli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKoliListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKoliListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKoliDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKoliDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderDeliveryKoliRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderDeliveryKoliResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickingOrderHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickingOrderDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregatedProductSalesOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesOrderInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickingOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickingOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesOrderPicking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesOrderToCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPickingOrderHeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPickingOrderHeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPickingOrderDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPickingOrderDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAggregatedProductSalesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAggregatedProductSalesOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPickingOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitPickingModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitPickingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderPickingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderPickingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderPickingDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderPickingDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestDeliveryKoli); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitSalesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderToCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderToCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderToCheckDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSalesOrderToCheckDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPVRejectSalesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPVAcceptSalesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerStartCheckingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerSubmitCheckingModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerSubmitCheckingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerRejectSalesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerGetDeliveryKoliRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerGetDeliveryKoliResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerAcceptSalesOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerAcceptSalesOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerHistoryDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerHistoryDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickerWidgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickerWidgetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPVWidgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPVWidgetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerWidgetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerWidgetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWrtMonitoringListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WrtMonitoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWrtMonitoringListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWrtMonitoringDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WrtMonitoringDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWrtMonitoringDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginHelperRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginHelperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_site_service_site_service_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginHelperResponse_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_site_service_site_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   70,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_site_service_site_service_proto_goTypes,
		DependencyIndexes: file_proto_site_service_site_service_proto_depIdxs,
		MessageInfos:      file_proto_site_service_site_service_proto_msgTypes,
	}.Build()
	File_proto_site_service_site_service_proto = out.File
	file_proto_site_service_site_service_proto_rawDesc = nil
	file_proto_site_service_site_service_proto_goTypes = nil
	file_proto_site_service_site_service_proto_depIdxs = nil
}
